{"version":3,"file":"js/3396.1674057469577.84869e86dcf958432467.js","mappings":"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A,MAED,kCAAmC,CAClC,MACA,KACA,IACA,MAED,kCAAmC,CAClC,OAED,uCAAwC,CACvC,MACA,KACA,IACA,MAED,iBAAkB,CACjB,OAED,wBAAyB,CACxB,OAED,mCAAoC,CACnC,MACA,KACA,KACA,KACA,MAED,0CAA2C,CAC1C,MACA,KACA,MAED,0CAA2C,CAC1C,MACA,MAED,wCAAyC,CACxC,MACA,KACA,KACA,KACA,MAED,6DAA8D,CAC7D,MACA,KACA,KACA,KACA,MAED,oEAAqE,CACpE,MACA,KACA,MAED,uCAAwC,CACvC,MACA,KACA,KACA,MAED,8CAA+C,CAC9C,MACA,KACA,MAED,kCAAmC,CAClC,MACA,KAED,mCAAoC,CACnC,MACA,MAED,qBAAsB,CACrB,MAED,+BAAgC,CAC/B,OAED,2BAA4B,CAC3B,MACA,KAED,2BAA4B,CAC3B,IACA,MAED,8BAA+B,CAC9B,MAED,6BAA8B,CAC7B,OAED,6BAA8B,CAC7B,OAED,+BAAgC,CAC/B,OAED,8BAA+B,CAC9B,OAED,8BAA+B,CAC9B,OAED,6BAA8B,CAC7B,MACA,MAED,oCAAqC,CACpC,MACA,MAED,+BAAgC,CAC/B,MACA,KACA,IACA,KACA,KACA,KACA,MAED,sCAAuC,CACtC,MACA,MAED,sCAAuC,CACtC,MACA,MAED,oBAAqB,CACpB,OAED,uBAAwB,CACvB,OAED,qBAAsB,CACrB,OAED,4BAA6B,CAC5B,OAED,4BAA6B,CAC5B,OAED,mBAAoB,CACnB,OAED,wBAAyB,CACxB,OAED,2BAA4B,CAC3B,OAED,iBAAkB,CACjB,MACA,IAED,uBAAwB,CACvB,MACA,KACA,IACA,MAED,8BAA+B,CAC9B,MACA,KACA,IACA,MAED,wCAAyC,CACxC,MACA,KACA,MAED,2CAA4C,CAC3C,MACA,KACA,MAED,oCAAqC,CACpC,MACA,KACA,MAED,uCAAwC,CACvC,MACA,KACA,MAED,uCAAwC,CACvC,KACA,KACA,MAED,yCAA0C,CACzC,MACA,KACA,MAED,0CAA2C,CAC1C,MACA,KACA,KAED,+BAAgC,CAC/B,MACA,KACA,MAED,+BAAgC,CAC/B,MACA,KACA,MAED,iCAAkC,CACjC,MACA,KACA,MAED,mCAAoC,CACnC,MACA,KACA,MAED,uBAAwB,CACvB,OAGF,SAAS6pC,EAAoBJ,GAC5B,IAAIE,EAAoBC,EAAE5pC,EAAKypC,GAC9B,OAAOh/C,QAAQC,UAAUo/C,MAAK,WAC7B,IAAI36B,EAAI,IAAI9jB,MAAM,uBAAyBo+C,EAAM,KAEjD,MADAt6B,EAAEwhB,KAAO,mBACHxhB,CACP,IAGD,IAAI46B,EAAM/pC,EAAIypC,GAAM59C,EAAKk+C,EAAI,GAC7B,OAAOt/C,QAAQgpB,IAAIs2B,EAAI5kC,MAAM,GAAGnF,IAAI2pC,EAAoBx6B,IAAI26B,MAAK,WAChE,OAAOH,EAAoB99C,EAC5B,GACD,CACAg+C,EAAoBl8C,KAAO,WAAa,OAAOtB,OAAOsB,KAAKqS,EAAM,EACjE6pC,EAAoBh+C,GAAK,MACzB9C,EAAOC,QAAU6gD,C","sources":["webpack:///./config/build.empty.js","webpack:///./src/app.js","webpack:///./src/common/helpers.js","webpack:///./src/common/dateHelpers.js","webpack:///./src/common/downloadHelpers.js","webpack:///./src/components/authentication/authentication.js","webpack:///./src/components/authentication/authenticationContext.js","webpack:///./src/components/chart/chart.js","webpack:///./src/hooks/useWindow.js","webpack:///./src/components/chart/chartAxisLabel.js","webpack:///./src/components/chart/chartContext.js","webpack:///./src/components/chart/chartElements.js","webpack:///./src/components/chart/chartHelpers.js","webpack:///./src/components/chart/chartIcon.js","webpack:///./src/components/chart/chartLegend.js","webpack:///./src/components/chart/chartTooltip.js","webpack:///./src/components/form/select.js","webpack:///./src/components/graphCard/graphCardHelpers.js","webpack:///./src/components/i18n/i18n.js","webpack:///./src/components/i18n/i18nHelpers.js","webpack:///./src/components/loader/loader.js","webpack:///./src/components/messageView/messageView.js","webpack:///./src/components/pageLayout/pageColumns.js","webpack:///./src/components/pageLayout/pageHeader.js","webpack:///./src/components/pageLayout/pageLayout.js","webpack:///./src/components/pageLayout/pageMessages.js","webpack:///./src/components/pageLayout/pageSection.js","webpack:///./src/components/pageLayout/pageToolbar.js","webpack:///./src/components/router/redirect.js","webpack:///./src/components/router/router.js","webpack:///./src/components/router/routerContext.js","webpack:///./src/components/router/routerHelpers.js","webpack:///./src/components/table/table.js","webpack:///./src/components/table/tableEmpty.js","webpack:///./src/components/table/tableSkeleton.js","webpack:///./src/components/tooltip/tooltip.js","webpack:///./src/config/product.rhel.js","webpack:///./src/config/product.openshiftContainer.js","webpack:///./src/config/product.openshiftMetrics.js","webpack:///./src/config/product.openshiftDedicated.js","webpack:///./src/config/product.rhosak.js","webpack:///./src/config/product.satellite.js","webpack:///./src/config/product.rhacs.js","webpack:///./src/config/product.rhods.js","webpack:///./src/config/routes.js","webpack:///./src/hooks/useRouter.js","webpack:///./src/redux/common/reduxHelpers.js","webpack:///./src/redux/hooks/useReactRedux.js","webpack:///./src/redux/hooks/index.js","webpack:///./src/services/common/helpers.js","webpack:///./src/services/common/serviceConfig.js","webpack:///./src/services/platform/platformSchemas.js","webpack:///./src/services/platform/platformTransformers.js","webpack:///./src/services/platform/platformServices.js","webpack:///./src/redux/actions/platformActions.js","webpack:///./src/services/config.js","webpack:///./src/services/rhsm/rhsmSchemas.js","webpack:///./src/services/rhsm/rhsmTransformers.js","webpack:///./src/services/rhsm/rhsmHelpers.js","webpack:///./src/services/rhsm/rhsmServices.js","webpack:///./src/redux/actions/rhsmActions.js","webpack:///./src/services/user/userServices.js","webpack:///./src/redux/actions/userActions.js","webpack:///./src/redux/actions/index.js","webpack:///./src/redux/reducers/graphReducer.js","webpack:///./src/redux/reducers/inventoryReducer.js","webpack:///./src/redux/reducers/messagesReducer.js","webpack:///./src/redux/reducers/toolbarReducer.js","webpack:///./src/redux/reducers/userReducer.js","webpack:///./src/redux/reducers/viewReducer.js","webpack:///./src/redux/reducers/index.js","webpack:///./src/redux/middleware/actionRecordMiddleware.js","webpack:///./src/redux/middleware/index.js","webpack:///./src/redux/middleware/statusMiddleware.js","webpack:///./src/redux/middleware/multiActionMiddleware.js","webpack:///./src/redux/store.js","webpack:///./src/redux/types/appTypes.js","webpack:///./src/redux/types/graphTypes.js","webpack:///./src/redux/types/inventoryTypes.js","webpack:///./src/redux/types/platformTypes.js","webpack:///./src/redux/types/queryTypes.js","webpack:///./src/redux/types/userTypes.js","webpack:///./src/redux/types/index.js","webpack:///./src/redux/types/toolbarTypes.js","webpack:///./src/redux/types/rhsmTypes.js","webpack:///./src/services/platform/platformConstants.js","webpack:///./src/services/rhsm/rhsmConstants.js","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/components/ lazy ^\\.\\/.*\\.js$ exclude: \\.test\\.js$ namespace object"],"sourcesContent":["// Used as an empty module to save bundle size\nmodule.exports = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMount } from 'react-use';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { reduxActions, storeHooks } from './redux';\nimport { I18n } from './components/i18n/i18n';\nimport { Router } from './components/router';\nimport Authentication from './components/authentication/authentication';\nimport { helpers } from './common';\n\n/**\n * ToDo: Investigate replacing NotificationsPortal\n * NotificationsPortal takes down the entire app when the parent Redux store is unavailable.\n */\n/**\n * Application\n *\n * @param {object} props\n * @param {Function} props.getLocale\n * @param {Function} props.useDispatch\n * @param {Function} props.useSelector\n * @returns {Node}\n */\nconst App = ({ getLocale, useDispatch: useAliasDispatch, useSelector: useAliasSelector }) => {\n  const dispatch = useAliasDispatch();\n  const { value: locale } = useAliasSelector(({ user }) => user?.locale?.data, {});\n  let platformNotifications = null;\n\n  useMount(() => {\n    dispatch(getLocale());\n  });\n\n  if (!helpers.UI_DISABLED_NOTIFICATIONS) {\n    platformNotifications = <NotificationsPortal />;\n  }\n\n  return (\n    <I18n locale={locale || null}>\n      {platformNotifications}\n      <Authentication>\n        <Router />\n      </Authentication>\n    </I18n>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelector: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: reduxActions.user.getLocale,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelector: storeHooks.reactRedux.useSelector\n};\n\nexport { App as default, App };\n","import numbro from 'numbro';\nimport cryptoSha1 from 'crypto-js/sha1';\nimport _isPlainObject from 'lodash/isPlainObject';\n\n/**\n * Fill for AggregatedError\n *\n * @param {Array|*} errors An array of errors\n * @param {string|*} message\n * @param {object} options\n * @param {string} options.name\n * @returns {Error|window.AggregateError<Error>}\n */\nconst aggregatedError = (errors, message, { name = 'AggregateError' } = {}) => {\n  const { AggregateError, Error } = window;\n  let err;\n\n  if (AggregateError) {\n    err = new AggregateError(errors, message);\n  } else {\n    err = new Error(message);\n    err.name = name;\n    err.errors = (Array.isArray(errors) && errors) || [errors];\n    err.isEmulated = true;\n  }\n  return err;\n};\n\n/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n/**\n * Check if \"is a Date\"\n *\n * @param {Date|*} date\n * @returns {boolean}\n */\nconst isDate = date => Object.prototype.toString.call(date) === '[object Date]';\n\n/**\n * Check if \"is a Promise\", \"Promise like\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => /^\\[object (Promise|Async|AsyncFunction)]/.test(Object.prototype.toString.call(obj));\n\n/**\n * Generate a consistent hash\n *\n * @param {*|object} anyValue\n * @param {object} options\n * @param {Function} options.method\n * @returns {*|string}\n */\nconst generateHash = (anyValue, { method = cryptoSha1 } = {}) =>\n  method(\n    JSON.stringify({\n      value:\n        (_isPlainObject(anyValue) &&\n          JSON.stringify(\n            Object.entries(anyValue).sort(([a], [b]) => a.localeCompare(b)),\n            (key, value) => {\n              if (value !== anyValue && _isPlainObject(value)) {\n                return JSON.stringify(Object.entries(value).sort(([a], [b]) => a.localeCompare(b)) || []);\n              }\n              if (typeof value === 'function') {\n                return value.toString();\n              }\n              return value;\n            }\n          )) ||\n        `${typeof anyValue}${anyValue?.toString() || anyValue}`\n    })\n  ).toString();\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string|Array} key\n * @param {string|object|Array} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) => {\n  const updatedKey = (Array.isArray(key) && `[${key}]`) || key;\n  const updatedValue =\n    (typeof value === 'string' && value) ||\n    (Array.isArray(value) && `[${value}]`) ||\n    (Object.keys(value || '').length && JSON.stringify(value)) ||\n    '';\n  const updatedComponents = (components && `${components}`) || '';\n\n  return `t(${updatedKey}${(updatedValue && `, ${updatedValue}`) || ''}${\n    (updatedComponents && `, ${updatedComponents}`) || ''\n  })`;\n};\n\n/**\n * ToDo: review adding \"locale\" for numbro\n */\n/**\n * Convenience wrapper for numbro. Numbro assumes all values passed to it conform as \"number\".\n * This allows us to optional chain the function results.\n *\n * @param {*} value\n * @returns {numbro.Numbro|*}\n */\nconst numberDisplay = value => {\n  if (typeof value !== 'number' || Number.isNaN(value)) {\n    return value;\n  }\n  return numbro(value);\n};\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable platform notifications.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_NOTIFICATIONS = process.env.REACT_APP_UI_DISABLED_NOTIFICATIONS === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the current hosts inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_HOSTS = process.env.REACT_APP_UI_DISABLED_TABLE_HOSTS === 'true';\n\n/**\n * Disable the current instances inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_INSTANCES = process.env.REACT_APP_UI_DISABLED_TABLE_INSTANCES === 'true';\n\n/**\n * Disable the current subscriptions inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_SUBSCRIPTIONS = process.env.REACT_APP_UI_DISABLED_TABLE_SUBSCRIPTIONS === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * A url, or uri, for \"contact us\".\n *\n * @type {string}\n */\nconst UI_LINK_CONTACT_US = process.env.REACT_APP_UI_LINK_CONTACT_US;\n\n/**\n * A url, or uri, for \"learn more\".\n *\n * @type {string}\n */\nconst UI_LINK_LEARN_MORE = process.env.REACT_APP_UI_LINK_LEARN_MORE;\n\n/**\n * A url, or uri, for \"recommend actions\"\n *\n * @type {string}\n */\nconst UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS = process.env.REACT_APP_UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS;\n\n/**\n * UI locale default.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG;\n\n/**\n * UI locale default description.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT_DESC = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI state logging file name.\n *\n * @type {string}\n */\nconst UI_LOGGER_FILE = process.env.REACT_APP_UI_LOGGER_FILE || 'debug_log_{0}.json';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @property {boolean} limit\n * @property {string} id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  aggregatedError,\n  browserExpose,\n  generateHash,\n  generateId,\n  isDate,\n  isPromise,\n  noop,\n  noopPromise,\n  noopTranslate,\n  numberDisplay,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_NOTIFICATIONS,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TABLE_HOSTS,\n  UI_DISABLED_TABLE_INSTANCES,\n  UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  UI_DISABLED_TOOLBAR,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LINK_CONTACT_US,\n  UI_LINK_LEARN_MORE,\n  UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS,\n  UI_LOCALE_DEFAULT,\n  UI_LOCALE_DEFAULT_DESC,\n  UI_LOGGER_ID,\n  UI_LOGGER_FILE,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../services/rhsm/rhsmConstants';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && moment.utc('20190720').toDate()) ||\n  (helpers.DEV_MODE &&\n    process.env.REACT_APP_DEBUG_DEFAULT_DATETIME &&\n    moment.utc(process.env.REACT_APP_DEBUG_DEFAULT_DATETIME).toDate()) ||\n  moment.utc().toDate();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @param {Date} params.date Start date, typically the current date.\n * @param {number} params.subtract Number of granularity type to subtract from the current date.\n * @param {string} params.measurement Granularity type.\n * @param {string} params.endOfMeasurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement, endOfMeasurement = 'days' }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf(endOfMeasurement).toDate()\n});\n\nconst currentDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 1, measurement: 'days' });\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\nconst rangedYearDateTime = setRangedDateTime({\n  date: getCurrentDate(),\n  subtract: 11,\n  measurement: 'months',\n  endOfMeasurement: 'months'\n});\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case 'CURRENT':\n      return { ...currentDateTime };\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Generate a list of months for use in a select list.\n *\n * @param {string} month\n * @returns {{keyDateTimeRanges: {}, listDateTimeRanges: *[]}|*}\n */\nconst getRangedMonthDateTime = month => {\n  const currentYear = Number.parseInt(moment.utc(getCurrentDate()).year(), 10);\n  const { startDate, endDate } = { ...rangedYearDateTime };\n  const keyDateTimeRanges = {};\n  let listDateTimeRanges = [];\n\n  const startDateUpdated = moment.utc(startDate);\n  const endDateUpdated = moment.utc(endDate);\n\n  while (endDateUpdated > startDateUpdated || startDateUpdated.format('M') === endDateUpdated.format('M')) {\n    const dateTime = {\n      value: {\n        startDate: startDateUpdated.toDate()\n      }\n    };\n\n    const titleYear = startDateUpdated.format('MMMM YYYY');\n    const title = startDateUpdated.format('MMMM');\n    const titleIndex = startDateUpdated.format('M');\n    const isNextYear = currentYear !== Number.parseInt(startDateUpdated.year(), 10);\n\n    dateTime.title = (isNextYear && titleYear) || title;\n    dateTime._title = title.toLowerCase();\n    dateTime.value.endDate = moment.utc(startDateUpdated).endOf('month').toDate();\n\n    startDateUpdated.add(1, 'month');\n\n    dateTime.title = translate('curiosity-toolbar.label', { context: ['granularityRangedMonthly', dateTime.title] });\n    keyDateTimeRanges[title.toLowerCase()] = { ...dateTime };\n    keyDateTimeRanges[titleIndex] = { ...dateTime };\n    listDateTimeRanges.push(dateTime);\n  }\n\n  listDateTimeRanges = listDateTimeRanges.reverse();\n  listDateTimeRanges[0] = {\n    ...listDateTimeRanges[0],\n    isCurrent: true,\n    _title: 'current',\n    title: translate('curiosity-toolbar.label', { context: ['granularityRangedMonthly', 'current'] })\n  };\n\n  keyDateTimeRanges.current = { ...listDateTimeRanges[0] };\n\n  if (month) {\n    return keyDateTimeRanges?.[month] || undefined;\n  }\n\n  return { keyDateTimeRanges, listDateTimeRanges };\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\n/**\n * Consistent timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampTimeFormats = {\n  timeLong: 'MMMM D h:mm:ss A',\n  yearTimeLong: 'MMMM D YYYY h:mm:ss A',\n  timeShort: 'MMM D h:mm A',\n  yearTimeShort: 'MMM D YYYY h:mm A'\n};\n\n/**\n * Consistent UTC timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampUTCTimeFormats = {\n  timeLong: 'DD MMMM HH:mm:ss UTC',\n  yearTimeLong: 'DD MMMM YYYY HH:mm:ss UTC',\n  timeShort: 'DD MMM HH:mm UTC',\n  yearTimeShort: 'DD MMM YYYY HH:mm UTC'\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { dateHelpers } from './dateHelpers';\n\n/**\n * Download data to a file\n *\n * @param {object} options\n * @param {string} options.data\n * @param {string} options.fileName\n * @param {string} options.fileType\n * @returns {Promise}\n */\nconst downloadData = options => {\n  const { data = '', fileName = 'download.txt', fileType = 'text/plain' } = options || {};\n  return new Promise((resolve, reject) => {\n    try {\n      const { document, navigator, URL } = window;\n      const blob = new Blob([data], { type: fileType });\n\n      if (navigator?.msSaveBlob) {\n        navigator.msSaveBlob(blob, fileName);\n        resolve({ fileName, data });\n      } else {\n        const anchorTag = document.createElement('a');\n\n        anchorTag.href = URL.createObjectURL(blob);\n        anchorTag.style.display = 'none';\n        anchorTag.download = fileName;\n\n        document.body.appendChild(anchorTag);\n\n        anchorTag.click();\n\n        setTimeout(() => {\n          document.body.removeChild(anchorTag);\n          URL.revokeObjectURL(blob);\n          resolve({ fileName, data });\n        }, 250);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\n/**\n * Download the debug log file.\n */\nconst debugLog = async () => {\n  try {\n    const { sessionStorage } = window;\n    const fileName = `${helpers.UI_LOGGER_FILE}`.replace(\n      '{0}',\n      moment(dateHelpers.getCurrentDate()).format('YYYYMMDD_HHmmss')\n    );\n    const data = JSON.stringify(JSON.parse(sessionStorage.getItem(`${helpers.UI_LOGGER_ID}`)), null, 2);\n\n    await downloadData({ data, fileName, fileType: 'application/json' });\n  } catch (e) {\n    throw new Error(`debuglog error, ${e.message}`);\n  }\n};\n\nconst downloadHelpers = {\n  downloadData,\n  debugLog\n};\n\nhelpers.browserExpose({ debugLog }, { limit: false });\n\nexport { downloadHelpers as default, downloadHelpers, downloadData, debugLog };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { Maintenance } from '@redhat-cloud-services/frontend-components/Maintenance';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { routerHelpers, Redirect } from '../router';\nimport { rhsmConstants } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\nimport MessageView from '../messageView/messageView';\nimport { translate } from '../i18n/i18n';\nimport { AuthenticationContext, useGetAuthorization } from './authenticationContext';\n\n/**\n * An authentication pass-through component.\n *\n * @param {object} props\n * @param {string} props.appName\n * @param {React.ReactNode} props.children\n * @param {boolean} props.isDisabled\n * @param {Function} props.t\n * @param {Function} props.useGetAuthorization\n * @returns {React.ReactNode}\n */\nconst Authentication = ({ appName, children, isDisabled, t, useGetAuthorization: useAliasGetAuthorization }) => {\n  const { pending, data = {} } = useAliasGetAuthorization();\n  const { authorized = {}, errorCodes, errorStatus } = data;\n  const { [appName]: isAuthorized } = authorized;\n\n  const renderContent = () => {\n    if (isDisabled) {\n      return (\n        <MessageView>\n          <Maintenance description={t('curiosity-auth.maintenanceCopy', '...')} />\n        </MessageView>\n      );\n    }\n\n    if (isAuthorized) {\n      return children;\n    }\n\n    if (pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (errorCodes && errorCodes.includes(rhsmConstants.RHSM_API_RESPONSE_ERRORS_CODE_TYPES.OPTIN)) ||\n      errorStatus === 418\n    ) {\n      return <Redirect route={routerHelpers.getErrorRoute.path} />;\n    }\n\n    return (\n      <MessageView>\n        <NotAuthorized serviceName={helpers.UI_DISPLAY_NAME} />\n      </MessageView>\n    );\n  };\n\n  return <AuthenticationContext.Provider value={data}>{renderContent()}</AuthenticationContext.Provider>;\n};\n\n/**\n * Prop types.\n *\n * @type {{useGetAuthorization: Function, children: React.ReactNode, appName: string, isDisabled: boolean}}\n */\nAuthentication.propTypes = {\n  appName: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  useGetAuthorization: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useGetAuthorization: Function, t: Function, appName: string, isDisabled: boolean}}\n */\nAuthentication.defaultProps = {\n  appName: routerHelpers.appName,\n  isDisabled: helpers.UI_DISABLED,\n  t: translate,\n  useGetAuthorization\n};\n\nexport { Authentication as default, Authentication };\n","import React, { useContext, useState } from 'react';\nimport { useMount, useUnmount } from 'react-use';\nimport { reduxActions, storeHooks } from '../../redux';\nimport { routerHooks } from '../../hooks/useRouter';\nimport { helpers } from '../../common';\nimport { routerHelpers } from '../router';\n\n/**\n * Base context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst AuthenticationContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated authentication context.\n *\n * @returns {React.Context<{}>}\n */\nconst useAuthContext = () => useContext(AuthenticationContext);\n\n/**\n * Initialize an app, and return a combined state store that includes authorization, locale, and API errors\n *\n * @param {object} options\n * @param {string} options.appName\n * @param {Function} options.authorizeUser\n * @param {Function} options.hideGlobalFilter\n * @param {Function} options.initializeChrome\n * @param {Function} options.onNavigation\n * @param {Function} options.setAppName\n * @param {Function} options.useDispatch\n * @param {Function} options.useHistory\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: {errorCodes, errorStatus: *, locale}, pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useGetAuthorization = ({\n  appName = routerHelpers.appName,\n  authorizeUser = reduxActions.platform.authorizeUser,\n  hideGlobalFilter = reduxActions.platform.hideGlobalFilter,\n  initializeChrome = reduxActions.platform.initializeChrome,\n  onNavigation = reduxActions.platform.onNavigation,\n  setAppName = reduxActions.platform.setAppName,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useHistory: useAliasHistory = routerHooks.useHistory,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const [unregister, setUnregister] = useState(() => helpers.noop);\n  const history = useAliasHistory();\n  const dispatch = useAliasDispatch();\n  const { data, error, fulfilled, pending, responses } = useAliasSelectorsResponse([\n    { id: 'auth', selector: ({ user }) => user?.auth },\n    { id: 'locale', selector: ({ user }) => user?.locale },\n    {\n      id: 'errors',\n      selector: ({ user }) => (user?.errors?.error === true && user.errors) || { fulfilled: true, data: [] }\n    }\n  ]);\n\n  useMount(async () => {\n    await dispatch(authorizeUser());\n    dispatch([initializeChrome(), setAppName(appName), hideGlobalFilter()]);\n    setUnregister(() => dispatch(onNavigation(event => history.push(event.navId))));\n  });\n\n  useUnmount(() => {\n    unregister();\n  });\n\n  const [user = {}, app = {}] = (Array.isArray(data.auth) && data.auth) || [];\n  const errorStatus = (error && responses?.id?.errors?.status) || null;\n\n  return {\n    data: {\n      ...user,\n      ...app,\n      locale: data.locale,\n      errorCodes: data.errors,\n      errorStatus\n    },\n    error,\n    fulfilled,\n    pending\n  };\n};\n\n/**\n * Return session data from authentication context.\n *\n * @param {Function} useAliasAuthContext\n * @returns {{errorCodes, errorStatus: *, locale}}\n */\nconst useSession = ({ useAuthContext: useAliasAuthContext = useAuthContext } = {}) => {\n  const session = useAliasAuthContext();\n  return {\n    ...session\n  };\n};\n\nconst context = {\n  AuthenticationContext,\n  DEFAULT_CONTEXT,\n  useAuthContext,\n  useGetAuthorization,\n  useSession\n};\n\nexport {\n  context as default,\n  context,\n  AuthenticationContext,\n  DEFAULT_CONTEXT,\n  useAuthContext,\n  useGetAuthorization,\n  useSession\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ChartThemeColor } from '@patternfly/react-charts';\nimport { ChartContext } from './chartContext';\nimport { ChartElements } from './chartElements';\nimport { ChartLegend } from './chartLegend';\nimport { chartHelpers, ChartTypeVariant } from './chartHelpers';\nimport { useResizeObserver } from '../../hooks/useWindow';\n\n/**\n * Return a chart and elements with a context provider.\n *\n * @param {object} props\n * @param {Node|Function} props.chartLegend\n * @param {Node|Function} props.chartTooltip\n * @param {Array} props.dataSets\n * @param {object} props.padding\n * @param {string} props.themeColor\n * @param {Node|Function} props.xAxisChartLabel\n * @param {Node|Function} props.yAxisChartLabel\n * @param {boolean} props.xAxisFixLabelOverlap\n * @param {number} props.xAxisLabelIncrement\n * @param {Function} props.xAxisTickFormat\n * @param {Function} props.yAxisTickFormat\n * @param {Function} props.xValueFormat\n * @param {Function} props.yValueFormat\n * @returns {Node}\n */\nconst Chart = ({\n  chartLegend,\n  chartTooltip,\n  dataSets,\n  padding,\n  themeColor,\n  xAxisChartLabel,\n  yAxisChartLabel,\n  xAxisFixLabelOverlap,\n  xAxisLabelIncrement,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  xValueFormat,\n  yValueFormat\n}) => {\n  const [context, setContext] = useState();\n  const [dataSetsToggle, setDataSetsToggle] = useState({});\n  const containerRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const { width: chartWidth } = useResizeObserver(containerRef);\n\n  useEffect(() => {\n    /**\n     * Aggregate chart related settings.\n     *\n     * @returns {{isMultiYAxis: boolean, padding: object, chartDomain: {domain: {y: Array}}, tooltipDataSetLookUp: {},\n     *     xAxisProps: object, themeColor: string, maxY: (object|number), hasData: boolean, maxX: number,\n     *     yAxisProps: Array, chartElementsProps: {elementsById: object, stackedElements: Array,\n     *     stackedElementsById: object, elements: Array}}}\n     */\n    const updateChartSettings = () => {\n      const toggledDataSets = dataSets.filter(({ id }) => !dataSetsToggle[id]);\n\n      const tooltipDataSetLookUp = chartHelpers.generateTooltipData({\n        content: chartTooltip,\n        dataSets: toggledDataSets\n      });\n\n      const { maxX, maxY } = chartHelpers.generateMaxXY({ dataSets: toggledDataSets });\n      const { individualMaxY } = chartHelpers.generateMaxXY({ dataSets });\n      const { xAxisProps, yAxisProps } = chartHelpers.generateAxisProps({\n        dataSets,\n        individualMaxY,\n        maxX,\n        maxY,\n        xAxisChartLabel,\n        yAxisChartLabel,\n        xAxisFixLabelOverlap,\n        xAxisLabelIncrement,\n        xAxisTickFormat,\n        yAxisTickFormat\n      });\n\n      const isMultiYAxis = yAxisProps.length > 1;\n      const chartElementsProps = chartHelpers.generateElementsProps({\n        dataSets: toggledDataSets,\n        maxX,\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        xValueFormat,\n        yValueFormat\n      });\n      const { domain, padding: domainPadding } = chartHelpers.generateDomains({\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        padding\n      });\n      const hasData = !!xAxisProps.tickValues;\n      const updatedPadding = { bottom: 0, left: 0, right: 0, top: 0, ...padding, ...domainPadding };\n\n      return {\n        xAxisProps,\n        yAxisProps,\n        chartDomain: { domain },\n        chartElementsProps,\n        hasData,\n        isMultiYAxis,\n        maxX,\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        padding: updatedPadding,\n        themeColor,\n        tooltipDataSetLookUp\n      };\n    };\n\n    const chartSettings = updateChartSettings();\n    const updatedSettings = {\n      chartContainerRef: () => containerRef,\n      chartSettings: { ...chartSettings, chartLegend, chartWidth, dataSets },\n      chartTooltipRef: () => tooltipRef,\n      dataSetsToggle: [dataSetsToggle, setDataSetsToggle]\n    };\n\n    setContext(updatedSettings);\n  }, [\n    chartLegend,\n    chartTooltip,\n    chartWidth,\n    dataSets,\n    dataSetsToggle,\n    padding,\n    setContext,\n    themeColor,\n    xAxisChartLabel,\n    yAxisChartLabel,\n    xAxisFixLabelOverlap,\n    xAxisLabelIncrement,\n    yAxisTickFormat,\n    xAxisTickFormat,\n    xValueFormat,\n    yValueFormat\n  ]);\n\n  return (\n    <ChartContext.Provider value={context}>\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"curiosity-chartarea uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={containerRef}\n      >\n        {chartWidth > 0 && (\n          <React.Fragment>\n            <ChartElements />\n            <ChartLegend />\n          </React.Fragment>\n        )}\n      </div>\n    </ChartContext.Provider>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{chartTooltip: Node|Function, xValueFormat: Function, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: Function, themeColor: string, chartLegend: Node|Function,\n *     yAxisTickFormat: Function, dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number,\n *     yValueFormat: Function}}\n */\nChart.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      chartType: PropTypes.oneOf([...Object.values(ChartTypeVariant)]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      xAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      yAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      xAxisUseDataSet: PropTypes.bool,\n      yAxisUseDataSet: PropTypes.bool\n    })\n  ),\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  yAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func,\n  xValueFormat: PropTypes.func,\n  yValueFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartTooltip: Node|Function, xValueFormat: Function, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: Function, themeColor: string, chartLegend: Node|Function,\n *     yAxisTickFormat: Function, dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number,\n *     yValueFormat: Function}}\n */\nChart.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  dataSets: [],\n  padding: {\n    bottom: 75,\n    left: 55,\n    right: 55,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisChartLabel: null,\n  yAxisChartLabel: null,\n  xAxisFixLabelOverlap: true,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null,\n  xValueFormat: null,\n  yValueFormat: null\n};\n\nexport { Chart as default, Chart, ChartTypeVariant };\n","import { useEffect, useState } from 'react';\nimport { helpers } from '../common';\n\n/**\n * Apply a resize observer to an element.\n *\n * @param {*} target\n * @returns {{width: number, height: number}}\n */\nconst useResizeObserver = target => {\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    const isElementResize = target && window.ResizeObserver && true;\n    const element = target?.current;\n    let removeObserver = helpers.noop;\n\n    if (element) {\n      const handler = () => {\n        const { clientHeight = 0, clientWidth = 0, innerHeight = 0, innerWidth = 0 } = element || {};\n\n        setDimensions({\n          width: isElementResize ? clientWidth : innerWidth,\n          height: isElementResize ? clientHeight : innerHeight\n        });\n      };\n\n      if (isElementResize) {\n        const resizeObserver = new window.ResizeObserver(handler);\n        resizeObserver.observe(element);\n        removeObserver = () => resizeObserver.unobserve(element);\n      } else {\n        handler();\n        window.addEventListener('resize', handler);\n        removeObserver = () => window.removeEventListener('resize', handler);\n      }\n    }\n\n    return () => {\n      removeObserver();\n    };\n  }, [target]);\n\n  return dimensions;\n};\n\nconst windowHooks = {\n  useResizeObserver\n};\n\nexport { windowHooks as default, windowHooks, useResizeObserver };\n","import React from 'react';\n\n/**\n * Note: Victory Charts components require a form of extended \"something\" applied by the consuming component.\n * This leads to odd implementations, like returning a function component.\n */\n/**\n * Return a compatible Victory tooltip component.\n *\n * @param {object} params\n * @param {string} params.axis\n * @param {number} params.index\n * @returns {Function}\n */\nconst chartAxisLabel =\n  ({ axis, index = 0 } = {}) =>\n  ({ x, y, text }) => // eslint-disable-line\n    (\n      <g>\n        <foreignObject x={0} y={0} width=\"100%\" height=\"100%\">\n          <div\n            className={`curiosity-chartarea__axis-label-container curiosity-chartarea__axis-label-container-${axis} curiosity-chartarea__axis-label-container-${axis}-${index}`}\n            style={{ top: `${y ?? 0}px` }}\n            xmlns=\"http://www.w3.org/1999/xhtml\"\n          >\n            <div className=\"curiosity-chartarea__axis-label-container-content\">{text}</div>\n          </div>\n        </foreignObject>\n      </g>\n    );\n\nexport { chartAxisLabel as default, chartAxisLabel };\n","import React, { useCallback, useContext } from 'react';\nimport { helpers } from '../../common';\n\n/**\n * Chart context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [\n  { chartContainerRef: helpers.noop, chartSettings: {}, chartTooltipRef: helpers.noop, dataSetsToggle: [] },\n  helpers.noop\n];\n\nconst ChartContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated chart context.\n *\n * @returns {React.Context<{}>}\n */\nconst useChartContext = () => useContext(ChartContext);\n\n/**\n * ToDo: reevaluate this alternative pattern of passing hooks as options, helps testing\n */\n/**\n * Track, show, and hide chart data layers.\n *\n * @param {object} options\n * @param {Function} options.useChartContext\n * @returns {{onRevert: Function, onToggle: Function, getIsToggled: Function, dataSetsToggle: object,\n *     onHide: Function}}\n */\nconst useToggleData = ({ useChartContext: useAliasChartContext = useChartContext } = {}) => {\n  const { dataSetsToggle: contextDataSetsToggle = [] } = useAliasChartContext();\n  const [dataSetsToggle, setDataSetsToggle] = contextDataSetsToggle;\n\n  /**\n   * Hide a graph layer.\n   *\n   * @type {(function(*): void)|*}\n   */\n  const onHide = useCallback(\n    id => {\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: true }));\n    },\n    [setDataSetsToggle]\n  );\n\n  // ToDo: re-evaluate useCallback here.\n  /**\n   * Reset graph layers.\n   *\n   * @type {(function(): void)|*}\n   */\n  const onRevert = useCallback(() => {\n    setDataSetsToggle(() => ({}));\n  }, [setDataSetsToggle]);\n\n  /**\n   * Hide/show graph layers.\n   *\n   * @type {function(*): boolean}\n   */\n  const onToggle = useCallback(\n    id => {\n      const updatedToggle = !dataSetsToggle?.[id];\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: updatedToggle }));\n      return updatedToggle;\n    },\n    [dataSetsToggle, setDataSetsToggle]\n  );\n\n  // ToDo: review return undefined if doesn't exist\n  /**\n   * Graph layer status.\n   *\n   * @type {function(*): boolean}\n   */\n  const getIsToggled = useCallback(id => dataSetsToggle?.[id] || false, [dataSetsToggle]);\n\n  return {\n    ...{ dataSetsToggle },\n    onHide,\n    onRevert,\n    onToggle,\n    getIsToggled\n  };\n};\n\nconst context = {\n  ChartContext,\n  DEFAULT_CONTEXT,\n  useChartContext,\n  useToggleData\n};\n\nexport { context as default, context, ChartContext, DEFAULT_CONTEXT, useChartContext, useToggleData };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VictoryStack as ChartStack, VictoryTooltip as ChartCursorTooltip } from 'victory';\nimport { createContainer } from 'victory-create-container';\nimport { Chart, ChartArea, ChartAxis, ChartContainer, ChartLine, ChartThreshold } from '@patternfly/react-charts';\nimport { useChartContext } from './chartContext';\nimport { chartTooltip } from './chartTooltip';\nimport { chartAxisLabel } from './chartAxisLabel';\nimport { ChartTypeVariant } from './chartHelpers';\n\n/**\n * Generate a compatible Victory chart element/facet component.\n *\n * @param {object} props\n * @param {object} props.chartTypeDefaults\n * @returns {Node}\n */\nconst ChartElements = ({ chartTypeDefaults }) => {\n  const { chartSettings = {}, chartContainerRef, chartTooltipRef } = useChartContext();\n  const {\n    chartDomain,\n    chartElementsProps,\n    chartWidth,\n    hasData,\n    padding,\n    themeColor,\n    xAxisProps = {},\n    yAxisProps = []\n  } = chartSettings;\n\n  let containerComponent = <ChartContainer />;\n  let xAxis = null;\n  let yAxis = null;\n  let chartElements = [];\n  let stackedChartElements = [];\n\n  if (hasData) {\n    /**\n     * Note: both cursor and voronoiDimension attrs required if the need is to have...\n     * the tooltip populate consistently without being \"near\" a chart element y axis point\n     */\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const TooltipLabelComponent = chartTooltip({ chartSettings, chartContainerRef, chartTooltipRef });\n\n    containerComponent = (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        voronoiDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={\n          <ChartCursorTooltip\n            dx={0}\n            dy={0}\n            centerOffset={{ x: 0, y: 0 }}\n            flyoutStyle={{ fill: 'transparent', stroke: 'transparent' }}\n            labelComponent={<TooltipLabelComponent />}\n          />\n        }\n        voronoiPadding={(padding && Object.values(padding).sort()?.[0]) || 0}\n        mouseFollowTooltips\n      />\n    );\n  }\n\n  /**\n   * Generate X Axis\n   */\n  if (Object.keys(xAxisProps).length) {\n    const updatedXAxisProps = {\n      ...xAxisProps\n    };\n\n    if (updatedXAxisProps.label) {\n      const AxisLabelComponent = chartAxisLabel({ axis: 'x' });\n      updatedXAxisProps.axisLabelComponent = <AxisLabelComponent />;\n    }\n\n    xAxis = <ChartAxis {...updatedXAxisProps} animate={false} />;\n  }\n\n  /**\n   * Generate Y Axis\n   */\n  if (Array.isArray(yAxisProps)) {\n    yAxis = yAxisProps.map((axisProps, index) => {\n      const updatedAxisProps = {\n        ...axisProps\n      };\n\n      if (updatedAxisProps.label) {\n        const AxisLabelComponent = chartAxisLabel({ axis: 'y', index });\n        updatedAxisProps.axisLabelComponent = <AxisLabelComponent />;\n      }\n\n      return <ChartAxis key={`yaxis-${axisProps.orientation}`} {...updatedAxisProps} animate={false} />;\n    });\n  }\n\n  const setChartElement = ({ chartType, props }) => {\n    const { component: Component, ...defaultProps } =\n      chartTypeDefaults[chartType] || chartTypeDefaults[ChartTypeVariant.area];\n    return <Component {...{ ...defaultProps, ...props }} />;\n  };\n\n  chartElements = chartElementsProps?.elements.map(setChartElement);\n  stackedChartElements = chartElementsProps?.stackedElements.map(setChartElement);\n\n  return (\n    <Chart\n      animate={{ duration: 0 }}\n      width={chartWidth}\n      themeColor={themeColor}\n      {...{ padding, containerComponent, ...chartDomain }}\n    >\n      {xAxis}\n      {yAxis}\n      {chartElements}\n      <ChartStack>{stackedChartElements}</ChartStack>\n    </Chart>\n  );\n};\n\nChartElements.propTypes = {\n  chartTypeDefaults: PropTypes.objectOf(\n    PropTypes.shape({\n      component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      interpolation: PropTypes.oneOf(['monotoneX', 'step'])\n    })\n  )\n};\n\nChartElements.defaultProps = {\n  chartTypeDefaults: {\n    [ChartTypeVariant.area]: {\n      component: ChartArea,\n      animate: {\n        duration: 250,\n        onLoad: { duration: 250 }\n      },\n      interpolation: 'monotoneX'\n    },\n    [ChartTypeVariant.line]: {\n      component: ChartLine,\n      animate: {\n        duration: 250,\n        onLoad: { duration: 250 }\n      },\n      interpolation: 'monotoneX'\n    },\n    [ChartTypeVariant.threshold]: {\n      component: ChartThreshold,\n      animate: {\n        duration: 100,\n        onLoad: { duration: 100 }\n      },\n      interpolation: 'step'\n    }\n  }\n};\n\nexport { ChartElements as default, ChartElements };\n","import React from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * Available chart types\n *\n * @type {{area: string, line: string, threshold: string}}\n */\nconst ChartTypeVariant = {\n  area: 'area',\n  line: 'line',\n  threshold: 'threshold'\n};\n\n/**\n * Generate max X and Y values from datasets.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @returns {{individualMaxY: object, maxY: number, maxX: number}}\n */\nconst generateMaxXY = ({ dataSets = [] } = {}) => {\n  const individualDataSetsMaxY = {};\n  let combinedDataSetMaxX = 0;\n  let combinedDataSetsMaxY = 0;\n\n  dataSets\n    .filter(({ isStacked }) => isStacked === true)\n    .forEach(({ data }) => {\n      if (Array.isArray(data)) {\n        combinedDataSetsMaxY += Math.max(...data.map(value => value?.y ?? 0));\n      }\n    });\n\n  dataSets.forEach(({ id, data }) => {\n    let dataSetMaxY = 0;\n\n    if (Array.isArray(data)) {\n      combinedDataSetMaxX = data.length > combinedDataSetMaxX ? data.length : combinedDataSetMaxX;\n\n      dataSetMaxY = Math.max(...data.map(value => value?.y ?? 0));\n      combinedDataSetsMaxY = dataSetMaxY > combinedDataSetsMaxY ? dataSetMaxY : combinedDataSetsMaxY;\n    }\n\n    if (id) {\n      individualDataSetsMaxY[id] = dataSetMaxY;\n    }\n  });\n\n  return {\n    maxX: combinedDataSetMaxX,\n    maxY: combinedDataSetsMaxY,\n    individualMaxY: individualDataSetsMaxY\n  };\n};\n\n/**\n * Generate Y axis domain ranges from dataSets, ignore X axis.\n *\n * @param {object} params\n * @param {number|object} params.maxY\n * @param {object} params.padding\n * @returns {{ domain: { y: Array }, padding: {object} }}\n */\nconst generateDomains = ({ maxY, padding = {} } = {}) => {\n  const updatedChartDomain = {};\n  const updatedPadding = { ...padding };\n  const generatedDomain = {};\n\n  if (Object.values(maxY).length) {\n    generatedDomain.y = [0, 1.25];\n  } else if (maxY >= 0.1) {\n    const floored = Math.pow(10, Math.floor(Math.log10(maxY || 10)));\n    generatedDomain.y = [0, Math.ceil((maxY + 1) / floored) * floored];\n  } else if (maxY < 0.1) {\n    generatedDomain.y = [0, maxY + maxY / 4 || 10];\n  } else {\n    generatedDomain.y = [0, 10];\n  }\n\n  if (maxY < 0.01) {\n    updatedPadding.left += generatedDomain.y.toString().length;\n    updatedPadding.right += generatedDomain.y.toString().length;\n  }\n\n  if (Object.keys(generatedDomain).length) {\n    updatedChartDomain.domain = generatedDomain;\n  }\n\n  return {\n    ...updatedChartDomain,\n    padding: updatedPadding\n  };\n};\n\n/**\n * Generate chart element props.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {number} params.maxX\n * @param {number} params.maxY\n * @param {Function} params.xValueFormat\n * @param {Function} params.yValueFormat\n * @param {object} options\n * @param {object} options.chartTypeVariant\n * @returns {{elementsById: object, stackedElements: Array, stackedElementsById: object, elements: Array}}\n */\nconst generateElementsProps = (\n  { dataSets = [], maxX, maxY, xValueFormat, yValueFormat } = {},\n  { chartTypeVariant = ChartTypeVariant } = {}\n) => {\n  const elements = [];\n  const stackedElements = [];\n  const elementsById = {};\n  const stackedElementsById = {};\n\n  dataSets.forEach(dataSet => {\n    const { animate, chartType, data, fill, id, isStacked, interpolation, stroke, strokeDasharray, strokeWidth } =\n      dataSet;\n\n    if (data?.length) {\n      const dataColorStroke = {\n        data: {}\n      };\n\n      if (fill && chartType !== chartTypeVariant.line && chartType !== chartTypeVariant.threshold) {\n        dataColorStroke.data.fill = fill;\n      }\n\n      if (stroke) {\n        dataColorStroke.data.stroke = stroke;\n      }\n\n      if (strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = strokeDasharray;\n      }\n\n      if (strokeWidth) {\n        dataColorStroke.data.strokeWidth = strokeWidth;\n      }\n\n      const defaultProps = {};\n\n      if (animate) {\n        defaultProps.animate = animate;\n      }\n\n      if (interpolation) {\n        defaultProps.interpolation = interpolation;\n      }\n\n      const chartElementProps = {\n        ...defaultProps,\n        key: `chart-${dataSet.id}-${chartType || ''}`,\n        name: `chart-${dataSet.id}-${chartType || ''}`,\n        data: dataSet.data,\n        style: { ...(dataSet.style || {}), ...dataColorStroke },\n        themeColor: dataSet.themeColor,\n        themeVariant: dataSet.themeVariant,\n        x:\n          (xValueFormat &&\n            (datum => {\n              const xValue = xValueFormat({ datum, maxX });\n              return xValue === undefined || Number.isNaN(xValue) ? 0 : xValue;\n            })) ||\n          undefined,\n        y: datum => {\n          let yValue;\n\n          if (yValueFormat) {\n            yValue = yValueFormat({\n              datum,\n              isMultiAxis: typeof maxY !== 'number',\n              maxY: typeof maxY === 'number' ? maxY : maxY?.[dataSet.id]\n            });\n          } else {\n            yValue = typeof maxY === 'number' ? datum.y : datum.y / maxY?.[dataSet.id]; // eslint-disable-line\n          }\n\n          return yValue === undefined || Number.isNaN(yValue) ? 0 : yValue;\n        }\n      };\n\n      const props = { ...chartElementProps };\n      const updatedProps = { chartType, props };\n\n      if (isStacked) {\n        stackedElementsById[id] = updatedProps;\n        stackedElements.push(updatedProps);\n      } else {\n        elementsById[id] = updatedProps;\n        elements.push(updatedProps);\n      }\n    }\n  });\n\n  return {\n    elements,\n    elementsById,\n    stackedElements,\n    stackedElementsById\n  };\n};\n\n/**\n * Preprocess datasets for tooltips.\n *\n * @param {object} params\n * @param {Node|Function} params.content\n * @param {Array} params.dataSets\n * @returns {{}}\n */\nconst generateTooltipData = ({ content = helpers.noop, dataSets = [] } = {}) => {\n  const tooltipDataSetLookUp = {};\n\n  if (content && Array.isArray(dataSets?.[0]?.data)) {\n    dataSets[0].data.forEach((dataSet, index) => {\n      const itemsByKey = {};\n\n      dataSets.forEach(data => {\n        if (data?.data?.[index]) {\n          itemsByKey[data.id] = {\n            color: data.stroke || data.fill || data.color || '',\n            chartType: data.chartType,\n            data: _cloneDeep(data.data[index])\n          };\n        }\n      });\n\n      const mockDatum = {\n        datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey }\n      };\n\n      tooltipDataSetLookUp[dataSet.x] = {\n        x: dataSet.x,\n        y: null,\n        itemsByKey,\n        tooltip:\n          (React.isValidElement(content) && React.cloneElement(content, { ...mockDatum })) || content({ ...mockDatum })\n      };\n    });\n  }\n\n  return tooltipDataSetLookUp;\n};\n\n/**\n * Generate X axis props, ticks, tick formatting.\n *\n * @param {object} params\n * @param {object} params.dataSet\n * @param {number} params.maxX\n * @param {number} params.xAxisLabelIncrement\n * @param {object} params.xAxisPropDefaults\n * @param {Function} params.xAxisTickFormat\n * @returns {{tickFormat: (function(*)), tickValues: *}}\n */\nconst generateXAxisProps = ({\n  dataSet = {},\n  maxX,\n  xAxisLabelIncrement,\n  xAxisPropDefaults = {},\n  xAxisTickFormat\n} = {}) => {\n  const { data = [], xAxisChartLabel } = dataSet;\n  const axisProps = {\n    ...xAxisPropDefaults,\n    tickValues: data.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    ),\n    tickFormat: tick => data[tick]?.xAxisLabel || tick\n  };\n\n  if (typeof xAxisChartLabel === 'function') {\n    axisProps.label = xAxisChartLabel({ ...dataSet, xAxisChartLabel: undefined });\n  } else {\n    axisProps.label = xAxisChartLabel;\n  }\n\n  if (typeof xAxisTickFormat === 'function') {\n    axisProps.tickFormat = tick => {\n      const tickIndex = axisProps.tickValues.indexOf(tick);\n      const previousItem = { ...data[axisProps.tickValues[tickIndex - 1]] };\n      const nextItem = { ...data[axisProps.tickValues[tickIndex + 1]] };\n      const item = { ...data[tick] };\n\n      return xAxisTickFormat({ tick, previousItem, item, nextItem, maxX });\n    };\n  }\n\n  return axisProps;\n};\n\n/**\n * Generate Y axis props, ticks, tick formatting.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {number|object} params.maxY\n * @param {object} params.yAxisPropDefaults\n * @param {Function} params.yAxisTickFormat\n * @returns {Array}\n */\nconst generateYAxisProps = ({ dataSets = [], maxY, yAxisPropDefaults = {}, yAxisTickFormat } = {}) => {\n  const axisProps = [];\n  const isMultiAxis = dataSets.length > 1;\n\n  dataSets.forEach(({ yAxisChartLabel, id, stroke, strokeWidth, ...dataSet } = {}, index) => {\n    const updatedAxisProps = {\n      style: { axis: {}, tickLabels: {} },\n      tickFormat: tick => tick\n    };\n\n    if (isMultiAxis && stroke) {\n      updatedAxisProps.style.axis.stroke = stroke;\n    }\n\n    if (isMultiAxis && strokeWidth) {\n      updatedAxisProps.style.axis.strokeWidth = strokeWidth;\n    }\n\n    if (typeof yAxisChartLabel === 'function') {\n      updatedAxisProps.label = yAxisChartLabel({ id, stroke, strokeWidth, ...dataSet });\n    } else {\n      updatedAxisProps.label = yAxisChartLabel;\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      const updatedMaxY = (typeof maxY === 'number' && maxY) || maxY?.[id];\n\n      updatedAxisProps.tickFormat = tick => {\n        const normalizedTick = (isMultiAxis && tick * updatedMaxY) || tick;\n\n        return yAxisTickFormat({\n          tick: normalizedTick,\n          isMultiAxis,\n          maxY: updatedMaxY\n        });\n      };\n    }\n\n    axisProps.push({\n      ...yAxisPropDefaults,\n      ...updatedAxisProps,\n      orientation: (index === 0 && 'left') || 'right'\n    });\n  });\n\n  return axisProps;\n};\n\n/**\n * Generate x,y props.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {object} params.individualMaxY\n * @param {number} params.maxX\n * @param {number} params.maxY\n * @param {Node|Function} params.xAxisChartLabel\n * @param {Node|Function} params.yAxisChartLabel\n * @param {boolean} params.xAxisFixLabelOverlap\n * @param {number} params.xAxisLabelIncrement\n * @param {Function} params.xAxisTickFormat\n * @param {Function} params.yAxisTickFormat\n * @returns {{xAxisProps: object, yAxisProps: Array}}\n */\nconst generateAxisProps = ({\n  dataSets = [],\n  individualMaxY = {},\n  maxX,\n  maxY,\n  xAxisChartLabel,\n  yAxisChartLabel,\n  xAxisFixLabelOverlap = true,\n  xAxisLabelIncrement = 1,\n  xAxisTickFormat,\n  yAxisTickFormat\n} = {}) => {\n  const xAxisPropDefaults = {\n    fixLabelOverlap: xAxisFixLabelOverlap\n  };\n\n  const yAxisPropDefaults = {\n    dependentAxis: true,\n    showGrid: true\n  };\n\n  let yAxisDataSets = [];\n  let xAxisDataSet;\n\n  dataSets.forEach(dataSet => {\n    if (dataSet.yAxisUseDataSet) {\n      yAxisDataSets.push({\n        yAxisChartLabel,\n        ...dataSet\n      });\n    }\n    if (dataSet.xAxisUseDataSet) {\n      xAxisDataSet = {\n        xAxisChartLabel,\n        ...dataSet\n      };\n    }\n  });\n\n  if (!yAxisDataSets.length) {\n    yAxisDataSets.push({\n      yAxisChartLabel,\n      ...dataSets?.[0]\n    });\n  } else {\n    yAxisDataSets = yAxisDataSets.slice(0, 2);\n  }\n\n  if (!xAxisDataSet) {\n    xAxisDataSet = {\n      xAxisChartLabel,\n      ...dataSets?.[0]\n    };\n  }\n\n  const updatedMaxY = (yAxisDataSets.length > 1 && individualMaxY) || maxY;\n\n  return {\n    xAxisProps: generateXAxisProps({\n      dataSet: xAxisDataSet,\n      maxX,\n      xAxisLabelIncrement,\n      xAxisPropDefaults,\n      xAxisTickFormat\n    }),\n    yAxisProps: generateYAxisProps({ dataSets: yAxisDataSets, maxY: updatedMaxY, yAxisPropDefaults, yAxisTickFormat })\n  };\n};\n\nconst chartHelpers = {\n  ChartTypeVariant,\n  generateAxisProps,\n  generateDomains,\n  generateElementsProps,\n  generateMaxXY,\n  generateTooltipData,\n  generateXAxisProps,\n  generateYAxisProps\n};\n\nexport {\n  chartHelpers as default,\n  chartHelpers,\n  ChartTypeVariant,\n  generateAxisProps,\n  generateDomains,\n  generateElementsProps,\n  generateMaxXY,\n  generateTooltipData,\n  generateXAxisProps,\n  generateYAxisProps\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EyeIcon, EyeSlashIcon, SquareIcon, IconSize } from '@patternfly/react-icons';\n\n/**\n * Emulate pf icon sizing for custom SVGs\n *\n * @param {string} size\n * @returns {string} em measurement\n */\nconst getSize = size => {\n  if (!Number.isNaN(Number.parseFloat(size))) {\n    return size;\n  }\n\n  switch (size) {\n    case 'md':\n      return '1.5em';\n    case 'lg':\n      return '2em';\n    case 'xl':\n      return '3em';\n    case 'sm':\n    default:\n      return '1em';\n  }\n};\n\n/**\n * Render an icon for use outside of Victory charts.\n *\n * @param {object} props\n * @param {string} props.fill\n * @param {string} props.symbol\n * @param {string} props.size\n * @param {string} props.title\n * @returns {React.ReactNode}\n */\nconst ChartIcon = ({ fill, symbol, size, title, ...props }) => {\n  const svgProps = { ...props };\n  const iconProps = { size, title, ...props };\n  const fontProps = { style: { fontSize: getSize(size) }, title, ...props };\n  const emSvgSize = getSize(size);\n\n  if (title) {\n    svgProps['aria-labelledby'] = title;\n  } else {\n    svgProps['aria-hidden'] = true;\n  }\n\n  if (fill) {\n    iconProps.color = fill;\n    fontProps.style.color = fill;\n  }\n\n  const setIcon = () => {\n    switch (symbol) {\n      case 'dash':\n        return (\n          <span\n            style={{\n              width: emSvgSize,\n              height: `${Number.parseFloat(emSvgSize) / 2}em`\n            }}\n          >\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 38 10\" role=\"img\" {...svgProps}>\n              <rect y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"14\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"28\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n            </svg>\n          </span>\n        );\n      case 'threshold':\n        return (\n          <span style={{ width: `${Number.parseFloat(emSvgSize) * 2}em`, height: emSvgSize }}>\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 18 10\" role=\"img\" {...svgProps}>\n              <line\n                x1={0}\n                y1={(Number.parseFloat(emSvgSize) * 16) / 2}\n                x2={Number.parseFloat(emSvgSize) * 16 * 3}\n                y2={(Number.parseFloat(emSvgSize) * 16) / 2}\n                stroke={fill}\n                strokeWidth={3}\n                strokeDasharray=\"4,3\"\n              />\n            </svg>\n          </span>\n        );\n      case 'eye':\n        return <EyeIcon {...iconProps} />;\n      case 'eyeSlash':\n        return <EyeSlashIcon {...iconProps} />;\n      case 'infinity':\n        return (\n          <span className=\"curiosity-icon__f-infinity\" {...fontProps}>\n            <span aria-hidden>&#x221e;</span>\n          </span>\n        );\n\n      case 'square':\n      default:\n        return <SquareIcon {...iconProps} />;\n    }\n  };\n\n  return <span className={`curiosity-chartarea__icon curiosity-chartarea__icon-${symbol}`}>{setIcon()}</span>;\n};\n\n/**\n * Prop types.\n *\n * @type {{symbol: string, size: string, fill: string, title: string}}\n */\nChartIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.oneOf([...Object.keys(IconSize)]),\n  symbol: PropTypes.oneOf(['dash', 'eye', 'eyeSlash', 'infinity', 'square', 'threshold']),\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{symbol: string, size: string, fill: null, title: null}}\n */\nChartIcon.defaultProps = {\n  fill: null,\n  size: 'sm',\n  symbol: 'square',\n  title: null\n};\n\nexport { ChartIcon as default, ChartIcon };\n","import React from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { useChartContext, useToggleData } from './chartContext';\n\n/**\n * Wrapper for rendering an HTML based legend.\n *\n * @returns {Node}\n */\nconst ChartLegend = () => {\n  const { getIsToggled, onHide, onRevert, onToggle } = useToggleData();\n  const { chartSettings = {} } = useChartContext();\n  const { chartLegend, dataSets, padding = {}, xAxisProps = {} } = chartSettings;\n\n  if (!chartLegend) {\n    return null;\n  }\n\n  const legendProps = {\n    datum: { dataSets: _cloneDeep(dataSets) },\n    chart: {\n      hide: onHide,\n      revert: onRevert,\n      toggle: onToggle,\n      isToggled: getIsToggled\n    }\n  };\n\n  return (\n    <div\n      className={`curiosity-chartarea__legend${(xAxisProps?.label && '-axis-label-active') || ''}`}\n      style={{\n        marginLeft: (padding?.left && `${padding.left}px`) || 0,\n        marginRight: (padding?.right && `${padding.right}px`) || 0\n      }}\n    >\n      {(React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n        chartLegend({ ...legendProps })}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n */\nChartLegend.propTypes = {};\n\n/**\n * Default props.\n */\nChartLegend.defaultProps = {};\n\nexport { ChartLegend as default, ChartLegend };\n","import React from 'react';\nimport { helpers } from '../../common';\n\n/**\n * Note: Victory Charts components require a form of extended \"something\" applied by the consuming component.\n * This leads to odd implementations, like returning a function component.\n */\n/**\n * FixMe: The right graph boundary for tooltips is dependent on Voronoi container padding.\n * A limitation exists where Voronoi containers can only have a single padding setting. This means we use\n * the lowest number value from the \"padding\" setting. The repercussion is the right boundary either has to\n * be the lowest padding value, or equal to the lowest padding from any of the other dimensions, ie. top,\n * bottom, left.\n */\n/**\n * Return a compatible Victory tooltip component.\n *\n * @param {object} params\n * @param {object} params.chartSettings\n * @param {Function} params.chartContainerRef\n * @param {Function} params.chartTooltipRef\n * @param {number} params.minChartWidth\n * @returns {Function}\n */\nconst chartTooltip = ({\n  chartSettings = {},\n  chartContainerRef = helpers.noop,\n  chartTooltipRef = helpers.noop,\n  minChartWidth = 500\n} = {}) => {\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip x coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getXCoordinate = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return x + padding - tooltipWidth / 2;\n    }\n\n    return x > width / 2 ? x - tooltipWidth + padding : x + padding;\n  };\n\n  /**\n   * Return a tooltip y coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.y\n   * @param {number} params.height\n   * @param {number} params.tooltipHeight\n   * @param {number} params.width\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getYCoordinate = ({ y, height, tooltipHeight, width, padding = 15, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth) {\n      return y > height / 2 ? y - tooltipHeight - padding : y + padding;\n    }\n\n    const updatedMultiplier = height / tooltipHeight / 10;\n    const heightMultiplier = (updatedMultiplier < 0.25 && updatedMultiplier) || 0.25;\n\n    return height * heightMultiplier;\n  };\n\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip tail position CSS class.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const tailPosition = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return 'middle';\n    }\n\n    return x > width / 2 ? 'right' : 'left';\n  };\n\n  return ({ x, y, datum = {} }) => { // eslint-disable-line\n    const { padding = {}, tooltipDataSetLookUp = {} } = chartSettings;\n\n    const containerRef = chartContainerRef();\n    const tooltipRef = chartTooltipRef();\n    const updatedPadding = { bottom: 0, left: 0, right: 0, top: 0, ...padding };\n    const content = tooltipDataSetLookUp?.[datum.x]?.tooltip || '';\n    const containerBounds = containerRef?.current?.querySelector('svg')?.getBoundingClientRect() || {\n      width: 0,\n      height: 0\n    };\n\n    const tooltipBounds = tooltipRef?.current?.getBoundingClientRect() || { width: 0, height: 0 };\n\n    if (content) {\n      const isOutsideGraphBottom = y > containerBounds.height - updatedPadding.bottom;\n      const isOutsideGraphLeft = x < updatedPadding.left;\n      const isOutsideGraphRight = x > containerBounds.width - updatedPadding.right;\n      const isOutsideGraphTop = y < updatedPadding.top;\n      const updatedClassName = `${(tooltipBounds.height <= 0 && 'fadein') || ''}`;\n\n      return (\n        <g>\n          <foreignObject\n            x={getXCoordinate({ x, width: containerBounds.width, tooltipWidth: tooltipBounds.width })}\n            y={getYCoordinate({\n              y,\n              height: containerBounds.height,\n              tooltipHeight: tooltipBounds.height,\n              width: containerBounds.width\n            })}\n            width=\"100%\"\n            height=\"100%\"\n          >\n            <div\n              className={`curiosity-chartarea__tooltip-container ${updatedClassName}`}\n              ref={tooltipRef}\n              style={{\n                display:\n                  ((isOutsideGraphBottom || isOutsideGraphLeft || isOutsideGraphRight || isOutsideGraphTop) &&\n                    'none') ||\n                  'inline-block'\n              }}\n              xmlns=\"http://www.w3.org/1999/xhtml\"\n            >\n              <div\n                className={`curiosity-chartarea__tooltip curiosity-chartarea__tooltip-${tailPosition({\n                  x,\n                  y,\n                  width: containerBounds.width,\n                  tooltipWidth: tooltipBounds.width\n                })}`}\n              >\n                {content}\n              </div>\n            </div>\n          </foreignObject>\n        </g>\n      );\n    }\n\n    return <g />;\n  };\n};\n\nexport { chartTooltip as default, chartTooltip };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DropdownDirection,\n  DropdownPosition,\n  Select as PfSelect,\n  SelectOption as PfSelectOption,\n  SelectVariant\n} from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _findIndex from 'lodash/findIndex';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Pass direction as select component variant option.\n *\n * @type {DropdownDirection}\n */\nconst SelectDirection = DropdownDirection;\n\n/**\n * Pass position as select component variant option.\n *\n * @type {DropdownPosition}\n */\nconst SelectPosition = DropdownPosition;\n\n/**\n * FixMe: PF isFlipEnabled busts left/right positioning, we now disable it by default\n * We caught this adjustment through our component code test snapshots. PF positioning for left/right has issues in general on\n * Select (Dropdown used to use the same styling, and functioned correctly, we'd need to reevaluate it now). We patched Select\n * with a minor styling adjustment for position from Dropdown, this worked until isFlipEnabled became defaulted to true.\n * Evaluate on next PF patch.\n */\n/**\n * A wrapper for Patternfly Select. Provides restructured event data for onSelect callback.\n *\n * @augments React.Component\n * @fires onSelect\n * @fires onToggle\n */\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  selectField = React.createRef();\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedOptions } = this.props;\n\n    if (!_isEqual(prevProps.options, options) || !_isEqual(prevProps.selectedOptions, selectedOptions)) {\n      this.formatOptions();\n    }\n  }\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selected:\n            (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        if (variant === SelectVariant.checkbox) {\n          mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n        }\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  /**\n   * Patternfly Select's open/closed state.\n   *\n   * @event onToggle\n   * @param {boolean} expanded\n   */\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  // FixMe: attributes filtered on PF select component. allow data- attributes\n  /**\n   * Format options into a consumable array of objects format.\n   * Note: It is understood that for line 151'ish around \"updatedOptions\" we dump all values regardless\n   * of whether they are plain objects, or not, into updatedOptions. This has been done for speed only,\n   * one less check to perform.\n   */\n  formatOptions() {\n    const { current: domElement = {} } = this.selectField;\n    const { options, selectedOptions, variant } = this.props;\n    const dataAttributes = Object.entries(this.props).filter(([key]) => /^data-/i.test(key));\n    const updatedOptions = _isPlainObject(options)\n      ? Object.entries(options).map(([key, value]) => ({ ...value, title: key, value }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        let isSelected;\n\n        if (_isPlainObject(convertedOption.value)) {\n          isSelected = _findIndex(activateOptions, convertedOption.value) > -1;\n\n          if (!isSelected) {\n            const tempSearch = activateOptions.find(activeOption =>\n              Object.values(convertedOption.value).includes(activeOption)\n            );\n            isSelected = !!tempSearch;\n          }\n        } else {\n          isSelected = activateOptions.includes(convertedOption.value);\n        }\n\n        if (!isSelected) {\n          isSelected = activateOptions.includes(convertedOption.title);\n        }\n\n        updatedOptions[index].selected = isSelected;\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    if (domElement?.parentRef?.current) {\n      dataAttributes.forEach(([key, value]) => domElement?.parentRef?.current.setAttribute(key, value));\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const {\n      ariaLabel,\n      className,\n      direction,\n      isDisabled,\n      isFlipEnabled,\n      isToggleText,\n      maxHeight,\n      placeholder,\n      position,\n      toggleIcon,\n      variant\n    } = this.props;\n\n    const pfSelectOptions = {\n      direction,\n      isFlipEnabled,\n      maxHeight\n    };\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    /**\n     * Note: PFReact missing select border on compile\n     * Related https://github.com/patternfly/patternfly-react/issues/5650 and\n     * https://github.com/cssnano/cssnano/issues/1051\n     */\n    return (\n      <div className=\"curiosity-select\">\n        <PfSelect\n          menuAppendTo=\"parent\"\n          className={`curiosity-select-pf${(!isToggleText && '__no-toggle-text') || ''} ${\n            (position === DropdownPosition.right && 'curiosity-select-pf__position-right') || ''\n          } ${className}`}\n          variant={variant}\n          aria-label={ariaLabel}\n          onToggle={this.onToggle}\n          onSelect={this.onSelect}\n          selections={selected}\n          isOpen={isExpanded}\n          toggleIcon={toggleIcon}\n          placeholderText={placeholder}\n          ref={this.selectField}\n          {...pfSelectOptions}\n        >\n          {(options &&\n            options.map(option => (\n              <PfSelectOption\n                key={window.btoa(`${option.title}-${option.value}`)}\n                id={window.btoa(`${option.title}-${option.value}`)}\n                value={option.title}\n                data-value={(_isPlainObject(option.value) && JSON.stringify([option.value])) || option.value}\n                data-title={option.title}\n              />\n            ))) ||\n            []}\n        </PfSelect>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{isFlipEnabled: boolean, toggleIcon: React.ReactNode|Function, className: string, ariaLabel: string,\n *     onSelect: Function, isToggleText: boolean, maxHeight: number, name: string, options: Array|object,\n *     selectedOptions: number|string|Array, variant: string, id: string, isDisabled: boolean,\n *     placeholder: string, position: string, direction: string}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  direction: PropTypes.oneOf(Object.values(SelectDirection)),\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isFlipEnabled: PropTypes.bool,\n  isToggleText: PropTypes.bool,\n  maxHeight: PropTypes.number,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  placeholder: PropTypes.string,\n  position: PropTypes.oneOf(Object.values(SelectPosition)),\n  selectedOptions: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]))\n  ]),\n  toggleIcon: PropTypes.element,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{isFlipEnabled: boolean, toggleIcon: React.ReactNode|Function, className: string, ariaLabel: string,\n *     onSelect: Function, isToggleText: boolean, maxHeight: null, name: null, options: *[], selectedOptions: null,\n *     variant: SelectVariant.single, id: string, isDisabled: boolean, placeholder: string,\n *     position: DropdownPosition.left, direction: DropdownDirection.down}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  direction: SelectDirection.down,\n  id: helpers.generateId(),\n  isDisabled: false,\n  isFlipEnabled: false,\n  isToggleText: true,\n  maxHeight: null,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  placeholder: 'Select option',\n  position: SelectPosition.left,\n  selectedOptions: null,\n  toggleIcon: null,\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select, SelectDirection, SelectPosition };\n","import moment from 'moment';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { ChartTypeVariant } from '../chart/chart';\nimport {\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Generate a consistent chart identifier from API.\n *\n * @param {object} params\n * @param {boolean} params.isCapacity\n * @param {string} params.metric\n * @param {string} params.productId\n * @param {object} params.query\n * @returns {string}\n */\nconst generateChartIds = ({ isCapacity, metric, productId, query = {} } = {}) => {\n  const metricCategory = query?.[RHSM_API_QUERY_SET_TYPES.CATEGORY] || undefined;\n  return `${(isCapacity && 'threshold_') || ''}${metric}${(metricCategory && `_${metricCategory}`) || ''}${\n    (productId && `_${productId}`) || ''\n  }`;\n};\n\n/**\n * Is metric associated with a toolbar filter\n *\n * @param {object} params\n * @param {object} params.query\n * @returns {boolean}\n */\nconst generateIsToolbarFilter = ({ query = {} } = {}) => (query?.[RHSM_API_QUERY_SET_TYPES.CATEGORY] && true) || false;\n\n/**\n * Update chart/graph filters with core settings and styling.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.settings\n * @param {string} params.productId\n * @returns {{standaloneFilters: Array, groupedFilters: object}}\n */\nconst generateChartSettings = ({ filters = [], settings: graphCardSettings = {}, productId } = {}) => {\n  const standaloneFiltersSettings = [];\n  const groupedFiltersSettings = [];\n\n  filters.forEach(({ metric, isStandalone = false, actions, ...filterSettings }) => {\n    if (!metric) {\n      return;\n    }\n    const updatedChartType = filterSettings?.chartType || ChartTypeVariant.area;\n    const isThreshold = filterSettings?.chartType === ChartTypeVariant.threshold;\n    const baseFilterSettings = {\n      chartType: updatedChartType,\n      id: generateChartIds({ isCapacity: isThreshold, metric, productId, query: filterSettings?.query }),\n      isStacked: !isThreshold,\n      isStandalone,\n      isThreshold,\n      isCapacity: isThreshold,\n      metric,\n      strokeWidth: 2,\n      isToolbarFilter: generateIsToolbarFilter({ query: filterSettings?.query })\n    };\n\n    if (isThreshold) {\n      baseFilterSettings.stroke = chartColorGreenDark.value;\n      baseFilterSettings.strokeDasharray = '4,3';\n      baseFilterSettings.strokeWidth = 3;\n    }\n\n    if (isStandalone) {\n      standaloneFiltersSettings.push({\n        settings: {\n          padding: {\n            bottom: 75,\n            left: 75,\n            right: 45,\n            top: 45\n          },\n          ...graphCardSettings,\n          actions,\n          isStandalone: true,\n          metric: {\n            ...baseFilterSettings,\n            ...filterSettings\n          },\n          metrics: [\n            {\n              ...baseFilterSettings,\n              ...filterSettings\n            }\n          ]\n        }\n      });\n    } else {\n      groupedFiltersSettings.push({\n        ...baseFilterSettings,\n        ...filterSettings\n      });\n    }\n  });\n\n  const updatedGroupedFiltersSettings =\n    (groupedFiltersSettings.length && {\n      settings: {\n        ...graphCardSettings,\n        isStandalone: false,\n        metric: undefined,\n        metrics: groupedFiltersSettings\n      }\n    }) ||\n    undefined;\n\n  return {\n    standaloneFiltersSettings,\n    groupedFiltersSettings: updatedGroupedFiltersSettings\n  };\n};\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity } = {}) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Function} params.callback\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ callback, date, granularity, tick, previousDate } = {}) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  if (callback) {\n    return callback({ callback, date, granularity, tick, previousDate });\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {Function} params.callback\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormat = ({ callback, tick } = {}) => {\n  if (callback) {\n    return callback({ tick });\n  }\n\n  return helpers\n    .numberDisplay(tick)\n    ?.format({\n      average: true,\n      mantissa: 1,\n      trimMantissa: true,\n      lowPrecision: false\n    })\n    ?.toUpperCase();\n};\n\n/**\n * Generate base chart component props.\n *\n * @param {object} params\n * @param {object} params.settings\n * @param {string} params.granularity\n * @returns {object}\n */\nconst generateExtendedChartSettings = ({ settings, granularity } = {}) => ({\n  ...settings,\n  xAxisLabelIncrement: getChartXAxisLabelIncrement(granularity),\n  xAxisTickFormat: ({ item, previousItem, tick }) =>\n    xAxisTickFormat({\n      callback: settings?.xAxisTickFormat,\n      tick,\n      date: item.date,\n      previousDate: previousItem.date,\n      granularity\n    }),\n  yAxisTickFormat: ({ tick }) =>\n    yAxisTickFormat({\n      callback: settings?.yAxisTickFormat,\n      tick\n    })\n});\n\nconst graphCardHelpers = {\n  generateChartIds,\n  generateChartSettings,\n  generateExtendedChartSettings,\n  generateIsToolbarFilter,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  generateChartIds,\n  generateChartSettings,\n  generateExtendedChartSettings,\n  generateIsToolbarFilter,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-http-backend';\nimport { initReactI18next } from 'react-i18next';\nimport { useMount } from 'react-use';\nimport { helpers } from '../../common/helpers';\nimport { EMPTY_CONTEXT, translate, translateComponent } from './i18nHelpers';\n\n/**\n * Load I18n.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.fallbackLng\n * @param {string} props.loadPath\n * @param {string} props.locale\n * @returns {React.ReactNode}\n */\nconst I18n = ({ children, fallbackLng, loadPath, locale }) => {\n  const [initialized, setInitialized] = useState(false);\n\n  /**\n   * Initialize i18next\n   */\n  useMount(async () => {\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: undefined,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      //\n    }\n\n    setInitialized(true);\n  });\n\n  /**\n   * Update locale.\n   */\n  useEffect(() => {\n    if (initialized) {\n      try {\n        i18next.changeLanguage(locale);\n      } catch (e) {\n        //\n      }\n    }\n  }, [initialized, locale]);\n\n  return (initialized && children) || <React.Fragment />;\n};\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: React.ReactNode, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent, EMPTY_CONTEXT };\n","import React from 'react';\nimport i18next from 'i18next';\nimport { Trans } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Check to help provide an empty context.\n *\n * @type {string}\n */\nconst EMPTY_CONTEXT = 'LOCALE_EMPTY_CONTEXT';\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string|Array} translateKey A key reference, or an array of a primary key with fallback keys.\n * @param {string|object|Array} values A default string if the key can't be found. An object with i18next settings. Or an array of objects (key/value) pairs used to replace string tokes. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @param {object} options\n * @param {string} options.emptyContextValue Check to allow an empty context value.\n * @returns {string|React.ReactNode}\n */\nconst translate = (translateKey, values = null, components, { emptyContextValue = EMPTY_CONTEXT } = {}) => {\n  const updatedValues = values || {};\n  let updatedTranslateKey = translateKey;\n  const splitContext = value => {\n    if (typeof value === 'string' && value !== emptyContextValue && /_/.test(value)) {\n      return value.split('_');\n    }\n    return value;\n  };\n\n  if (Array.isArray(updatedTranslateKey)) {\n    updatedTranslateKey = updatedTranslateKey.filter(value => typeof value === 'string' && value.length > 0);\n  }\n\n  if (updatedValues?.context) {\n    updatedValues.context = splitContext(updatedValues.context);\n  }\n\n  if (Array.isArray(updatedValues?.context)) {\n    const updatedContext = updatedValues.context\n      .map(value => (value === emptyContextValue && ' ') || splitContext(value))\n      .flat()\n      .filter(value => typeof value === 'string' && value.length > 0);\n\n    if (updatedContext?.length > 1) {\n      const lastContext = updatedContext.pop();\n\n      if (Array.isArray(updatedTranslateKey)) {\n        updatedTranslateKey[0] = `${updatedTranslateKey[0]}_${updatedContext.join('_')}`;\n      } else {\n        updatedTranslateKey = `${updatedTranslateKey}_${updatedContext.join('_')}`;\n      }\n\n      updatedValues.context = lastContext;\n    } else {\n      updatedValues.context = updatedContext.join('_');\n    }\n  } else if (updatedValues?.context === emptyContextValue) {\n    updatedValues.context = ' ';\n  }\n\n  if (helpers.TEST_MODE) {\n    return helpers.noopTranslate(updatedTranslateKey, updatedValues, components);\n  }\n\n  if (components) {\n    return (\n      (i18next.store && <Trans i18nKey={updatedTranslateKey} values={updatedValues} components={components} />) || (\n        <React.Fragment>t({updatedTranslateKey})</React.Fragment>\n      )\n    );\n  }\n\n  return (i18next.store && i18next.t(updatedTranslateKey, updatedValues)) || `t([${updatedTranslateKey}])`;\n};\n\n/**\n * Apply string replacements against a component, HOC.\n *\n * @param {React.ReactNode} Component\n * @returns {React.ReactNode}\n */\nconst translateComponent = Component => {\n  const withTranslation = ({ ...props }) => (\n    <Component\n      {...props}\n      t={(i18next.store && translate) || helpers.noopTranslate}\n      i18n={(i18next.store && i18next) || helpers.noop}\n    />\n  );\n\n  withTranslation.displayName = 'withTranslation';\n  return withTranslation;\n};\n\nconst i18nHelpers = {\n  EMPTY_CONTEXT,\n  translate,\n  translateComponent\n};\n\nexport { i18nHelpers as default, i18nHelpers, EMPTY_CONTEXT, translate, translateComponent };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { TableVariant } from '@patternfly/react-table';\nimport { PageHeader, PageLayout } from '../pageLayout/pageLayout';\nimport { TableSkeleton } from '../table/tableSkeleton';\n\n/**\n * Render skeleton and spinner loaders.\n *\n * @param {object} props\n * @param {string} props.skeletonProps\n * @param {object} props.tableProps\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Loader = ({ skeletonProps, tableProps, variant }) => {\n  switch (variant) {\n    case 'chart':\n    case 'graph':\n      return (\n        <div className=\"curiosity-skeleton-container curiosity-skeleton-container-chart\">\n          <Skeleton size={SkeletonSize.lg} />\n          <Skeleton size={SkeletonSize.md} />\n        </div>\n      );\n    case 'paragraph':\n      return (\n        <div className=\"curiosity-skeleton-container\">\n          <Skeleton size={SkeletonSize.xs} />\n          <Skeleton size={SkeletonSize.sm} />\n          <Skeleton size={SkeletonSize.md} />\n          <Skeleton size={SkeletonSize.lg} />\n        </div>\n      );\n    case 'skeleton':\n      return <Skeleton {...skeletonProps} />;\n    case 'table':\n      return <TableSkeleton {...tableProps} />;\n    case 'title':\n      return (\n        <PageLayout>\n          <PageHeader>\n            <Skeleton size=\"sm\" />\n          </PageHeader>\n        </PageLayout>\n      );\n    case 'spinner':\n    default:\n      return <Spinner />;\n  }\n};\n\n/**\n * Prop types.\n *\n * @type {{variant: string, skeletonProps: object, tableProps: object}}\n */\nLoader.propTypes = {\n  skeletonProps: PropTypes.shape({\n    size: PropTypes.oneOf([...Object.values(SkeletonSize)])\n  }),\n  tableProps: PropTypes.shape({\n    borders: PropTypes.bool,\n    className: PropTypes.string,\n    colCount: PropTypes.number,\n    colWidth: PropTypes.array,\n    rowCount: PropTypes.number,\n    variant: PropTypes.oneOf([...Object.values(TableVariant)])\n  }),\n  variant: PropTypes.oneOf(['chart', 'graph', 'paragraph', 'skeleton', 'spinner', 'table', 'title'])\n};\n\n/**\n * Default props.\n *\n * @type {{skeletonProps: {size: *}, variant: string, tableProps: {}}}\n */\nLoader.defaultProps = {\n  skeletonProps: {\n    size: SkeletonSize.sm\n  },\n  tableProps: {},\n  variant: 'spinner'\n};\n\nexport { Loader as default, Loader, SkeletonSize };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {Node|Function} props.icon\n * @param {string} props.message\n * @param {string} props.pageTitle\n * @param {string} props.title\n * @returns {Node}\n */\nconst MessageView = ({ children, icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PageSection>\n      {children ?? (\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          {icon && <EmptyStateIcon icon={icon} />}\n          {title && (\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {title}\n            </Title>\n          )}\n          {message && <EmptyStateBody>{message}</EmptyStateBody>}\n        </EmptyState>\n      )}\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, icon: Node|Function, message: string, pageTitle: string, title: string}}\n */\nMessageView.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, icon: null, message: null, pageTitle: null, title: null}}\n */\nMessageView.defaultProps = {\n  children: null,\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { helpers } from '../../common';\n\n/**\n * Render page columns based on children.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageColumns = ({ children, className }) => (\n  <Flex\n    alignItems={{ sm: 'alignItemsStretch' }}\n    spaceItems={{ sm: 'spaceItemsNone' }}\n    className={`curiosity-page-columns ${className}`}\n  >\n    {React.Children.toArray(children)\n      .filter(child => React.isValidElement(child))\n      .map(child => (\n        <FlexItem\n          key={(child.key && `page-column-${child.key}`) || helpers.generateId()}\n          grow={{ sm: 'grow' }}\n          className=\"curiosity-page-columns-column\"\n        >\n          {child}\n        </FlexItem>\n      ))}\n  </Flex>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageColumns.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageColumns.defaultProps = {\n  className: ''\n};\n\nexport { PageColumns as default, PageColumns };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader as RcsPageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a platform page header.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst PageHeader = ({ children, productLabel, t }) => (\n  <RcsPageHeader>\n    <Flex justifyContent={{ sm: 'justifyContentSpaceBetween' }}>\n      <FlexItem>\n        <PageHeaderTitle title={children} className=\"pf-u-mb-sm\" />\n      </FlexItem>\n    </Flex>\n    {productLabel && (\n      <p>\n        {t(`curiosity-view.subtitle`, { appName: helpers.UI_DISPLAY_NAME, context: productLabel }, [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_LEARN_MORE}\n          />\n        ])}\n      </p>\n    )}\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, productLabel: string, t: Function}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{includeTour: boolean, productLabel: null, t: translate}}\n */\nPageHeader.defaultProps = {\n  productLabel: null,\n  t: translate\n};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageColumns } from './pageColumns';\nimport { PageMessages } from './pageMessages';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageLayout = ({ children, className }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageMessages)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main padding={{ default: 'noPadding' }} className={`curiosity ${className}`}>\n      {React.Children.toArray(children).filter(\n        child => child.type !== PageHeader && child.type !== PageMessages && child.type !== PageToolbar\n      )}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageLayout.defaultProps = {\n  className: ''\n};\n\nexport { PageLayout as default, PageLayout, PageColumns, PageHeader, PageMessages, PageSection, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageMessages = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-messages ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageMessages.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageMessages.defaultProps = {\n  className: ''\n};\n\nexport { PageMessages as default, PageMessages };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform page section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageSection = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-section ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageSection.defaultProps = {\n  className: ''\n};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageToolbar = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-toolbar ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageToolbar.defaultProps = {\n  className: ''\n};\n\nexport { PageToolbar as default, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Router } from './router';\nimport { pathJoin, routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common';\n/**\n * A routing redirect.\n *\n * @param {object} props\n * @param {boolean} props.isForced\n * @param {string} props.route\n * @param {string} props.routes\n * @param {string} props.url\n * @returns {Node}\n */\nconst Redirect = ({ isForced, route, routes, url }) => {\n  const baseName = routerHelpers.dynamicBaseName();\n\n  /**\n   * Bypass router, force the location.\n   */\n  const forceNavigation = () => {\n    const { hash = '', search = '' } = window.location;\n    const forcePath = url || (route && `${pathJoin(baseName, route)}${search}${hash}`);\n\n    window.location.replace(forcePath);\n  };\n\n  const { path: matchedRoutePath, ...matchedRoute } = routerHelpers.getRouteConfig({ pathName: route, id: route });\n\n  if (!isForced && matchedRoutePath) {\n    return <Router routes={[{ ...matchedRoute, path: '*' }, ...routes]} />;\n  }\n\n  forceNavigation();\n\n  return (helpers.TEST_MODE && <React.Fragment>Redirected towards {url || route}</React.Fragment>) || null;\n};\n\n/**\n * Prop types.\n *\n * @type {{isRedirect: boolean, route: string, routes: Array, isReplace: boolean, url: string,\n *    isForced: boolean}}\n */\nRedirect.propTypes = {\n  isForced: PropTypes.bool,\n  route: PropTypes.string,\n  routes: PropTypes.array,\n  url: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isRedirect: boolean, route: string, routes: Array, isReplace: boolean, url: string,\n *    isForced: boolean}}\n */\nRedirect.defaultProps = {\n  isForced: false,\n  route: null,\n  routes: routerHelpers.routes,\n  url: null\n};\n\nexport { Redirect as default, Redirect };\n","/* eslint-disable react/jsx-no-constructed-context-values */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect as ReactRouterDomRedirect, Route, Switch } from 'react-router-dom';\nimport { useMount } from 'react-use';\nimport { RouterContext } from './routerContext';\nimport { routerHelpers } from './routerHelpers';\nimport { Loader } from '../loader/loader';\n\n/**\n * Load routes.\n *\n * @param {object} props\n * @param {Array} props.routes\n * @returns {Node}\n */\nconst Router = ({ routes } = {}) => {\n  const [updatedRoutes, setUpdatedRoutes] = useState([]);\n  const [redirectDefault, setRedirectDefault] = useState(null);\n\n  /**\n   * Initialize routes.\n   */\n  useMount(async () => {\n    const activateOnErrorRoute = routes.find(route => route.activateOnError === true);\n\n    const results = await Promise.all(\n      routes.map(async item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        const View = await routerHelpers.importView(item.component);\n\n        return (\n          <Route\n            exact={item.exact}\n            key={item.path}\n            path={item.path}\n            strict={item.strict}\n            render={({ location, ...routeProps }) => {\n              const routeConfig = item.id && routerHelpers.getRouteConfig({ id: item.id });\n              const { URLSearchParams, decodeURIComponent } = window;\n              const parsedSearch = {};\n\n              [\n                ...new Set(\n                  [...new URLSearchParams(decodeURIComponent(location.search))].map(\n                    ([param, value]) => `${param}~${value}`\n                  )\n                )\n              ].forEach(v => {\n                const [param, value] = v.split('~');\n                parsedSearch[param] = value;\n              });\n\n              const updatedLocation = {\n                ...location,\n                parsedSearch\n              };\n\n              const routeDetail = {\n                baseName: routerHelpers.dynamicBaseName(),\n                errorRoute: activateOnErrorRoute,\n                routes,\n                routeItem: { ...item },\n                ...routeConfig\n              };\n\n              return (\n                <RouterContext.Provider value={{ routeDetail }}>\n                  <View routeDetail={routeDetail} location={updatedLocation} {...routeProps} />\n                </RouterContext.Provider>\n              );\n            }}\n          />\n        );\n      })\n    );\n\n    setUpdatedRoutes(results);\n    setRedirectDefault(routes.find(({ disabled, redirect }) => !disabled && redirect) ?? null);\n  });\n\n  return (\n    <React.Suspense fallback={<Loader variant=\"title\" />}>\n      <Switch>\n        {updatedRoutes}\n        {redirectDefault && <ReactRouterDomRedirect to={redirectDefault.redirect} />}\n      </Switch>\n    </React.Suspense>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{routes: Array}}\n */\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      activateOnError: PropTypes.bool,\n      component: PropTypes.string.isRequired,\n      disabled: PropTypes.bool,\n      exact: PropTypes.bool,\n      id: PropTypes.string,\n      path: PropTypes.string.isRequired,\n      redirect: PropTypes.string,\n      render: PropTypes.bool,\n      strict: PropTypes.bool\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array}}\n */\nRouter.defaultProps = {\n  routes: routerHelpers.routes\n};\n\nexport { Router as default, Router };\n","import React, { useContext } from 'react';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Route context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [\n  { routeDetail: { baseName: null, errorRoute: null, routes: [], routeItem: {} } },\n  helpers.noop\n];\n\nconst RouterContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated router context.\n *\n * @returns {React.Context<{}>}\n */\nconst useRouterContext = () => useContext(RouterContext);\n\n/**\n * Get a route detail from router context.\n *\n * @param {object} options\n * @param {Function} options.useRouterContext\n * @returns {{routes: Array, routeItem: object, baseName: string, errorRoute: object}}\n */\nconst useRouteDetail = ({ useRouterContext: useAliasRouterContext = useRouterContext } = {}) => {\n  const { routeDetail } = useAliasRouterContext();\n  return routeDetail;\n};\n\nconst context = {\n  RouterContext,\n  DEFAULT_CONTEXT,\n  useRouterContext,\n  useRouteDetail\n};\n\nexport { context as default, context, RouterContext, DEFAULT_CONTEXT, useRouterContext, useRouteDetail };\n","import React from 'react';\nimport { helpers } from '../../common/helpers';\nimport { routesConfig } from '../../config';\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformLandingRedirect = `${helpers.UI_DEPLOY_PATH_PREFIX || ''}/`;\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformModalRedirect = `${helpers.UI_DEPLOY_PATH_PREFIX || ''}/?not_entitled=subscriptions`;\n\n/**\n * Return an assumed route baseName directory based on existing app name.\n * App name is defined in dotenv and package.json/insights.appname\n * [environment]/[OPTIONAL]/[OPTIONAL]/[APP NAME]\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  `${pathName.split(applicationName)[0]}${applicationName}`;\n\n/**\n * The app baseName.\n *\n * @type {string}\n */\nconst baseName = (helpers.TEST_MODE && '/') || dynamicBaseName();\n\n/**\n * Return a base path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBasePath = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  pathName.split(applicationName)[0];\n\n/**\n * App basePath.\n *\n * @type {string}\n */\nconst basePath = (helpers.TEST_MODE && '/') || dynamicBasePath();\n\n/**\n * Basic path join, minor emulation for path.join.\n *\n * @param {object} paths\n * @returns {string}\n */\nconst pathJoin = (...paths) => {\n  let updatedPath = Array.from(paths);\n  const hasLead = /^\\/\\//.test(updatedPath[0]);\n  updatedPath = updatedPath\n    .join('/')\n    .replace(/(\\/\\/)+/g, '~')\n    .replace(/~/g, '/')\n    .replace(/\\/\\//g, '/');\n\n  if (hasLead) {\n    updatedPath = `/${updatedPath}`;\n  }\n\n  return updatedPath;\n};\n\n/**\n * Generate product groups for applying query filter resets.\n *\n * @param {Array} config\n * @returns {Array}\n */\nconst generateProductGroups = (config = routesConfig) => {\n  const productGroups = {};\n\n  config.forEach(({ pathParameter, productParameter }) => {\n    const viewIds = ((Array.isArray(productParameter) && productParameter) || [productParameter]).map(\n      id => (id && `view${id}`) || id\n    );\n\n    viewIds.forEach((id, index) => {\n      if (id) {\n        if (!productGroups[id]) {\n          productGroups[id] = [];\n        }\n\n        if (pathParameter) {\n          productGroups[id].push((Array.isArray(pathParameter) && pathParameter?.[index]) || pathParameter);\n        }\n      }\n    });\n  });\n\n  return productGroups;\n};\n\n/**\n * Reference for products grouped by view.\n */\nconst productGroups = generateProductGroups();\n\n/**\n * Generate routes to be consumed by router.\n *\n * @param {Array} config\n * @returns {Array}\n */\nconst generateRoutes = (config = routesConfig) =>\n  config.map(({ activateOnError, component, disabled, id, path: routePath, redirect }) => ({\n    activateOnError,\n    component,\n    disabled,\n    exact: true,\n    id,\n    path: routePath,\n    redirect\n  }));\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = generateRoutes();\n\n/**\n * The first error route.\n *\n * @type {object}\n */\nconst getErrorRoute = routes.find(route => route.activateOnError === true) || {};\n\n/**\n * Match route config entries by path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {Array} params.config\n * @returns {{configs: Array, configFirstMatch: object, configsById: object}}\n */\nconst getRouteConfigByPath = ({ pathName = dynamicBasePath(), config = routesConfig } = {}) => {\n  const basePathDirs = pathName?.split('/').filter(str => str.length > 0);\n  const configs = [];\n  const allConfigs = [];\n  const configsById = {};\n  const allConfigsById = {};\n\n  const findConfig = dir => {\n    config.forEach(({ id, path: configPath, pathParameter, productParameter, aliases, ...configItem }) => {\n      const updatedConfigItem = {\n        aliases,\n        id,\n        path: configPath,\n        pathParameter,\n        productParameter,\n        ...configItem\n      };\n\n      if (\n        dir &&\n        (new RegExp(dir, 'i').test(configPath) ||\n          new RegExp(dir, 'i').test(productParameter?.toString()) ||\n          new RegExp(dir, 'i').test(pathParameter?.toString()) ||\n          new RegExp(dir, 'i').test(aliases?.toString()))\n      ) {\n        if (!configsById[id]) {\n          configsById[id] = { ...updatedConfigItem };\n          configs.push({ ...updatedConfigItem });\n        }\n      }\n\n      if (!allConfigsById[id]) {\n        allConfigsById[id] = { ...updatedConfigItem };\n        allConfigs.push({ ...updatedConfigItem });\n      }\n    });\n  };\n\n  if (basePathDirs?.length) {\n    basePathDirs.forEach(dir => {\n      if (dir) {\n        const decodedDir = window.decodeURI(dir);\n        findConfig(decodedDir);\n      }\n    });\n  } else {\n    findConfig();\n  }\n\n  return { allConfigs, allConfigsById, configs, configsById, firstMatch: configs?.[0] };\n};\n\n/**\n * Return a route config object.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathName\n * @param {boolean} params.returnDefault\n * @param {Array} params.config\n * @returns {object}\n */\nconst getRouteConfig = ({ id = null, pathName, returnDefault = false, config = routesConfig } = {}) => {\n  let navRouteItem;\n\n  if (id) {\n    navRouteItem = config.find(item => item.id === id);\n  }\n\n  if ((!navRouteItem && pathName) || (!navRouteItem && !pathName && !returnDefault)) {\n    navRouteItem = getRouteConfigByPath({ pathName, config }).firstMatch;\n  }\n\n  if (!navRouteItem && returnDefault) {\n    navRouteItem = config.find(item => item.default === true);\n  }\n\n  if (navRouteItem) {\n    const { search = '', hash = '' } = window.location;\n    navRouteItem.routeHref = `${navRouteItem.path}${search}${hash}`;\n\n    const { pathParameter, productParameter } = navRouteItem;\n    navRouteItem.pathParameter = (Array.isArray(pathParameter) && pathParameter[0]) || pathParameter;\n    navRouteItem.productParameter = (Array.isArray(productParameter) && productParameter[0]) || productParameter;\n    navRouteItem.viewParameter =\n      (productParameter && `view${(Array.isArray(productParameter) && productParameter[0]) || productParameter}`) ||\n      productParameter;\n  }\n\n  return { ...(navRouteItem || {}) };\n};\n\n/**\n * Import a route component.\n *\n * @param {Node} component\n * @returns {Node}\n */\nconst importView = component => {\n  if (!helpers.TEST_MODE) {\n    return React.lazy(() => import(/* webpackExclude: /\\.test\\.js$/ */ `../${component}.js`));\n  }\n\n  return p => <React.Fragment>{JSON.stringify({ ...p, component }, null, 2)}</React.Fragment>;\n};\n\nconst routerHelpers = {\n  appName,\n  baseName,\n  basePath,\n  dynamicBaseName,\n  dynamicBasePath,\n  generateProductGroups,\n  generateRoutes,\n  getErrorRoute,\n  getRouteConfig,\n  getRouteConfigByPath,\n  importView,\n  pathJoin,\n  platformLandingRedirect,\n  platformModalRedirect,\n  productGroups,\n  routes,\n  routesConfig\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  appName,\n  baseName,\n  basePath,\n  dynamicBaseName,\n  dynamicBasePath,\n  generateProductGroups,\n  generateRoutes,\n  getErrorRoute,\n  getRouteConfig,\n  getRouteConfigByPath,\n  importView,\n  pathJoin,\n  platformLandingRedirect,\n  platformModalRedirect,\n  productGroups,\n  routes,\n  routesConfig\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport {\n  Table as PfTable,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n  SortByDirection\n} from '@patternfly/react-table';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { TableEmpty } from './tableEmpty';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * FixMe: PF tables uses sequentially ordered lists/arrays to denote expandable sections\n * Ideal solution is to nest expandable sections within their respective parents. There\n * are scenarios where manipulating a sequentially ordered list/array can, and will,\n * lead to unintended results. And forces an equal, if not greater, amount of effort on\n * state tracking in the consuming GUI/app. Compounding the issue, the index is used/returned\n * during events for a particular row being \"expanded\". This ends up making after-the-fact\n * application of the expandable list/array items problematic since said index is\n * constantly updating/shifting as rows are dynamically added. Add in a \"not every row\n * needs to be expandable\" scenario, you can start to see the issues. All of that\n * effort means that in some cases it may actually be quicker to simply use PF styles and\n * a HTML table directly, bypassing PF-React entirely.\n *\n * Applying a React node as content in the sequentially ordered list/array appears to\n * automatically \"mount\" said node. How this handles in child components where subsequent\n * AJAX/XHR calls are called means you are potentially hitting an API with dozens of calls,\n * row dependent, even when a user may not expand the nested row/child. This could easily\n * be resolved by nesting and applying the expandable contents after-the-fact.\n */\n/**\n * FixMe: PF tables misalignment of the column headers list/array and row cells breaks the component\n * The related PF error for this is cryptic. An immediate solution would be to simply fix the error\n * messaging, or do a length check before consuming the lists/arrays. This happens when a consumer\n * places more or less column header cells than row cells.\n */\n/**\n * FixMe: PF tables break when an empty list/array is used for the column headers\n * This appears related to the mismatched column header and row cells. The solution is to simply not\n * render the header row instead of throwing an error. This is similar to how the empty rows\n * list/array is handled.\n */\n/**\n * A table.\n *\n * @augments React.Component\n * @fires onCollapse\n * @fires onSort\n */\nclass Table extends React.Component {\n  state = {\n    isCollapsible: false,\n    isSortable: false,\n    sortBy: {},\n    updatedColumnHeaders: null,\n    updatedRows: null\n  };\n\n  componentDidMount() {\n    const { updatedRows } = this.state;\n\n    if (updatedRows === null) {\n      this.setRowData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { columnHeaders, rows } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (\n      !_isEqualWith(prevProps.rows, rows, customizer) ||\n      !_isEqualWith(prevProps.columnHeaders, columnHeaders, customizer)\n    ) {\n      this.setRowData();\n    }\n  }\n\n  /**\n   * Apply expanded row content.\n   *\n   * @event onCollapse\n   * @param {object} params\n   * @param {number} params.index\n   * @param {boolean} params.isOpen\n   */\n  onCollapse = ({ index, isOpen }) => {\n    const { updatedRows } = this.state;\n    updatedRows[index].isOpen = isOpen;\n\n    if (isOpen) {\n      updatedRows[index + 1].fullWidth = false;\n      updatedRows[index + 1].cells = [{ title: updatedRows[index + 1].expandedContent }];\n    } else {\n      updatedRows[index + 1].cells = [{ title: '' }];\n    }\n\n    this.setState({\n      updatedRows\n    });\n  };\n\n  /**\n   * FixMe: PF table sort callback doesn't use a zero based index when expandable?\n   * Educated guess there's a cell count happening instead of \"[you have this many data/entry cells]\"\n   * This is really confusing to implement in a consuming application, especially on first\n   * implementation. Special \"collapsible index\" logic had to be implemented to compensate for this\n   * odd behavior.\n   */\n  /**\n   * On column sort\n   *\n   * @event onSort\n   * @param {object} params\n   * @param {number} params.index\n   * @param {string} params.direction\n   * @param {object} params.data\n   */\n  onSort = ({ index, direction, data = {} }) => {\n    const { isCollapsible, updatedColumnHeaders, updatedRows } = this.state;\n    const updatedIndex = isCollapsible ? index - 1 : index;\n\n    updatedRows.forEach(async ({ isOpen }, i) => {\n      if (isOpen === true) {\n        await this.onCollapse({ index: i, isOpen: false });\n      }\n    });\n\n    this.setState(\n      {\n        sortBy: {\n          index,\n          direction\n        }\n      },\n      () =>\n        updatedColumnHeaders[updatedIndex].onSort({\n          direction,\n          index: updatedIndex,\n          label: data?.column?.header?.label\n        })\n    );\n  };\n\n  /**\n   * Convert row objects into the required PF Table format.\n   */\n  setRowData() {\n    const { columnHeaders, rows } = this.props;\n    const updatedColumnHeaders = [];\n    const updatedRows = [];\n    const updatedSort = {};\n    let isCollapsible = false;\n    let isSortable = false;\n\n    rows.forEach(({ expandedContent, cells, isExpanded }) => {\n      const rowObj = {\n        cells: []\n      };\n      updatedRows.push(rowObj);\n\n      if (expandedContent) {\n        isCollapsible = true;\n        rowObj.isOpen = isExpanded || false;\n\n        updatedRows.push({\n          parent: updatedRows.length - 1,\n          fullWidth: true,\n          cells: [{ title: '' }],\n          expandedContent\n        });\n      }\n\n      cells.forEach(cell => {\n        if (cell?.title !== undefined) {\n          const { title, ...settings } = cell;\n          rowObj.cells.push({ title, ...settings });\n        } else {\n          rowObj.cells.push({\n            title: (React.isValidElement(cell) && cell) || (typeof cell === 'object' && `${cell}`) || cell\n          });\n        }\n      });\n    });\n\n    columnHeaders.forEach((columnHeader, index) => {\n      if (columnHeader?.title !== undefined) {\n        const { onSort, sortActive, sortDirection, title, ...settings } = columnHeader;\n        const tempColumnHeader = {\n          title,\n          ...settings\n        };\n\n        if (onSort) {\n          isSortable = true;\n          tempColumnHeader.transforms = [...(tempColumnHeader?.transforms || []), sortable];\n          tempColumnHeader.onSort = onSort;\n\n          if (sortActive) {\n            updatedSort.sortBy = { index: isCollapsible ? index + 1 : index };\n            updatedSort.sortBy.direction = SortByDirection.asc;\n          }\n\n          if (sortDirection) {\n            updatedSort.sortBy = { ...updatedSort.sortBy, direction: sortDirection };\n          }\n        } else if (tempColumnHeader.transforms) {\n          tempColumnHeader.transforms = tempColumnHeader.transforms.filter(v => v !== sortable);\n        }\n\n        updatedColumnHeaders.push(tempColumnHeader);\n      } else {\n        updatedColumnHeaders.push({\n          title:\n            (React.isValidElement(columnHeader) && columnHeader) ||\n            (typeof columnHeader === 'object' && `${columnHeader}`) ||\n            columnHeader\n        });\n      }\n    });\n\n    this.setState({\n      isCollapsible,\n      isSortable,\n      updatedColumnHeaders,\n      updatedRows,\n      ...updatedSort\n    });\n  }\n\n  /**\n   * FixMe: PF Tables automatically applies an expandable className when using the \"onCollapse\" prop?\n   * Not every row may need to be expandable. In certain scenarios a table may have no expandable\n   * sections, however it appears the \"onCollapse\" styling, and additionally added \"table cells\" are still\n   * applied.\n   */\n  /**\n   * Apply props to table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { isCollapsible, isSortable, sortBy, updatedColumnHeaders, updatedRows } = this.state;\n    const { ariaLabel, borders, children, className, isHeader, summary, t, variant } = this.props;\n    const pfTableProps = {};\n    let emptyTable = null;\n\n    if (!updatedRows?.length) {\n      emptyTable = children || (\n        <TableEmpty\n          icon={SearchIcon}\n          title={t('curiosity-inventory.tableEmptyInventoryTitle')}\n          message={t('curiosity-inventory.tableEmptyInventoryMessage')}\n        />\n      );\n    }\n\n    if (isCollapsible) {\n      pfTableProps.onCollapse = (event, index, isOpen, data) => this.onCollapse({ event, index, isOpen, data });\n    }\n\n    if (isSortable) {\n      pfTableProps.sortBy = sortBy;\n      pfTableProps.onSort = (event, index, direction, data) => this.onSort({ event, index, direction, data });\n    }\n\n    return (\n      <React.Fragment>\n        <PfTable\n          className={`curiosity-table${(!borders && '-no-border') || ''} ${className || ''}`}\n          borders={borders}\n          aria-label={ariaLabel || t('curiosity-inventory.tableAriaLabel', { appName: helpers.UI_DISPLAY_NAME })}\n          summary={summary || t('curiosity-inventory.tableSummary')}\n          variant={variant}\n          rows={(updatedRows?.length && updatedRows) || []}\n          cells={updatedColumnHeaders || []}\n          {...pfTableProps}\n        >\n          {isHeader && <TableHeader />}\n          <TableBody />\n        </PfTable>\n        {emptyTable}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Render a table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"ins-inventory-list\">\n        <GridItem span={12}>{this.renderTable()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{summary: string, columnHeaders: Array, t: Function, borders: boolean, children: Node,\n *     isHeader: boolean, variant: string, className: string, rows: Array, ariaLabel: string}}\n */\nTable.propTypes = {\n  ariaLabel: PropTypes.string,\n  borders: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  columnHeaders: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        onSort: PropTypes.func,\n        sortActive: PropTypes.bool,\n        sortDirection: PropTypes.oneOf([...Object.values(SortByDirection)]),\n        title: PropTypes.node.isRequired\n      })\n    ])\n  ).isRequired,\n  isHeader: PropTypes.bool,\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      expandedContent: PropTypes.node,\n      cells: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.node,\n          PropTypes.instanceOf(Date),\n          PropTypes.shape({\n            title: PropTypes.oneOfType([PropTypes.node, PropTypes.instanceOf(Date)]).isRequired\n          })\n        ])\n      ),\n      isExpanded: PropTypes.bool\n    })\n  ),\n  summary: PropTypes.string,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{summary: null, t: translate, borders: boolean, children: null, isHeader: boolean,\n *     variant: null, className: null, rows: Array, ariaLabel: null}}\n */\nTable.defaultProps = {\n  ariaLabel: null,\n  borders: true,\n  children: null,\n  className: null,\n  isHeader: true,\n  rows: [],\n  summary: null,\n  t: translate,\n  variant: null\n};\n\nexport { Table as default, Table };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable as PlatformEmptyTableWrapper } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\n/**\n * Render an empty table.\n *\n * @param {object} props\n * @param {Node|Function} props.icon\n * @param {Node} props.message\n * @param {string} props.tableHeading\n * @param {Node} props.title\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableEmpty = ({ icon, message, tableHeading, title, variant }) => (\n  <PlatformEmptyTableWrapper>\n    <EmptyState variant={variant}>\n      {icon && <EmptyStateIcon icon={icon} />}\n      <Title headingLevel={tableHeading} size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n  </PlatformEmptyTableWrapper>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: Node|Function, variant: string, message: Node, title: Node, tableHeading: string}}\n */\nTableEmpty.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.node.isRequired,\n  tableHeading: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  variant: PropTypes.oneOf(Object.keys(EmptyStateVariant))\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, variant: EmptyStateVariant.small, tableHeading: string}}\n */\nTableEmpty.defaultProps = {\n  icon: null,\n  tableHeading: 'h2',\n  variant: EmptyStateVariant.small\n};\n\nexport { TableEmpty as default, TableEmpty };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { cellWidth, TableVariant } from '@patternfly/react-table';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport Table from './table';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a table with skeleton loaders.\n *\n * @param {object} props\n * @param {string} props.className\n * @param {boolean} props.borders\n * @param {number} props.colCount\n * @param {Array} props.colWidth\n * @param {boolean} props.isHeader\n * @param {number} props.rowCount\n * @param {Function} props.t\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableSkeleton = ({ className, borders, colCount, colWidth, isHeader, rowCount, t, variant }) => {\n  const updatedColumnHeaders = [...new Array(colCount)].map((value, index) => {\n    const updatedHeader = { title: <Skeleton size={SkeletonSize.md} /> };\n\n    if (typeof colWidth[index] === 'number') {\n      updatedHeader.transforms = [cellWidth(colWidth[index])];\n    }\n\n    return updatedHeader;\n  });\n\n  const updatedRowCount = rowCount || 1;\n\n  const updatedRows = [...new Array(updatedRowCount)].map(() => ({\n    cells: [...new Array(colCount)].map(() => <Skeleton size={SkeletonSize.md} />)\n  }));\n\n  return (\n    <Table\n      ariaLabel={t('curiosity-inventory.tableSkeletonAriaLabel')}\n      borders={borders}\n      className={`curiosity-skeleton-table${(!rowCount && ' curiosity-skeleton-table__hidden-rows') || ''} ${\n        className || ''\n      }`}\n      columnHeaders={updatedColumnHeaders}\n      isHeader={isHeader}\n      rows={updatedRows}\n      variant={variant}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: string,\n *     className: string, rowCount: number}}\n */\nTableSkeleton.propTypes = {\n  borders: PropTypes.bool,\n  className: PropTypes.string,\n  colCount: PropTypes.number,\n  colWidth: PropTypes.arrayOf(PropTypes.number),\n  isHeader: PropTypes.bool,\n  rowCount: PropTypes.number,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: null,\n *     className: null, rowCount: number}}\n */\nTableSkeleton.defaultProps = {\n  borders: true,\n  className: null,\n  colCount: 1,\n  colWidth: [],\n  isHeader: true,\n  rowCount: 5,\n  t: translate,\n  variant: null\n};\n\nexport { TableSkeleton as default, TableSkeleton };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip as PfTooltip, TooltipProps, TooltipPosition } from '@patternfly/react-core';\n\n/**\n * PF tooltip wrapper component.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {React.ReactNode} props.content\n * @param {boolean} props.isNoWrap\n * @param {TooltipProps} props.props\n * @returns {React.ReactNode}\n */\nconst Tooltip = ({ children, content, isNoWrap, ...props }) => (\n  <PfTooltip\n    className={`curiosity-tooltip${(isNoWrap && '__nowrap') || ''}`}\n    content={(React.isValidElement(content) && content) || <p>{content || ''}</p>}\n    {...props}\n  >\n    {(React.isValidElement(children) && children) || <span className=\"curiosity-tooltip-children\">{children}</span>}\n  </PfTooltip>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, content: React.ReactNode}}\n */\nTooltip.propTypes = {\n  children: PropTypes.node.isRequired,\n  content: PropTypes.node,\n  distance: PropTypes.number,\n  enableFlip: PropTypes.bool,\n  entryDelay: PropTypes.number,\n  exitDelay: PropTypes.number,\n  isNoWrap: PropTypes.bool,\n  position: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{content: string}}\n */\nTooltip.defaultProps = {\n  content: '...',\n  distance: 5,\n  enableFlip: false,\n  entryDelay: 100,\n  exitDelay: 0,\n  isNoWrap: false,\n  position: TooltipPosition.top\n};\n\nexport { Tooltip as default, Tooltip };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_orange_100 as chartColorOrangeLight,\n  chart_color_orange_300 as chartColorOrangeDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES as CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { Tooltip } from '../components/tooltip/tooltip';\nimport { ChartIcon } from '../components/chart/chartIcon';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHEL;\n\nconst productId = null;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHEL;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  productDisplay: DISPLAY_TYPES.PARTIAL,\n  viewId: `view${productGroup}`,\n  productArchitectures: [...Object.values(RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES)],\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.SOCKETS,\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      query: {\n        [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.PHYSICAL\n      }\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      query: {\n        [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.VIRTUAL\n      }\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value,\n      query: {\n        [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.CLOUD\n      }\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      fill: chartColorOrangeLight.value,\n      stroke: chartColorOrangeDark.value,\n      color: chartColorOrangeDark.value,\n      query: {\n        [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.HYPERVISOR\n      }\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      chartType: ChartTypeVariant.threshold\n    }\n  ],\n  initialGraphSettings: {\n    isDisabledLegendClick: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        {\n          [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n          [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {},\n          [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {}\n        } = {},\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.MEASUREMENT_TYPE,\n      cell: ({\n        [INVENTORY_TYPES.CLOUD_PROVIDER]: cloudProvider,\n        [INVENTORY_TYPES.MEASUREMENT_TYPE]: measurementType\n      } = {}) => (\n        <React.Fragment>\n          {translate('curiosity-inventory.measurementType', { context: measurementType?.value })}{' '}\n          {(cloudProvider?.value && (\n            <PfLabel color=\"purple\">\n              {translate('curiosity-inventory.cloudProvider', { context: cloudProvider?.value })}\n            </PfLabel>\n          )) ||\n            ''}\n        </React.Fragment>\n      ),\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: INVENTORY_TYPES.SOCKETS,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY,\n      header: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom } = {}) =>\n        translate('curiosity-inventory.header', { context: ['subscriptions', uom?.value] }),\n      cell: ({\n        [SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY]: totalCapacity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom\n      } = {}) => {\n        if (hasInfiniteQuantity?.value === true) {\n          const content = translate(\n            `curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY}`,\n            { context: uom?.value }\n          );\n          return (\n            <Tooltip content={content}>\n              <ChartIcon symbol=\"infinity\" aria-label={content} />\n            </Tooltip>\n          );\n        }\n        return totalCapacity?.value;\n      },\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value && moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.USAGE,\n      selected: true\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.CATEGORY\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.ARCHITECTURE\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { Tooltip } from '../components/tooltip/tooltip';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { ChartIcon } from '../components/chart/chartIcon';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  productDisplay: DISPLAY_TYPES.PARTIAL,\n  viewId: `view${productGroup}`,\n  productContextFilterUom: true,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.CORES,\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialOption: RHSM_API_QUERY_UOM_TYPES.CORES,\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      isOptional: true,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      isOptional: true,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      chartType: ChartTypeVariant.threshold,\n      isOptional: true\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      chartType: ChartTypeVariant.threshold,\n      isOptional: true\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.UOM,\n        position: SelectPosition.right\n      },\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        {\n          [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n          [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {},\n          [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {}\n        } = {},\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.SOCKETS,\n      isOptional: true,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.CORES,\n      isOptional: true,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 20,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY,\n      header: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom } = {}) =>\n        translate('curiosity-inventory.header', { context: ['subscriptions', uom?.value] }),\n      cell: ({\n        [SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY]: totalCapacity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom\n      } = {}) => {\n        if (hasInfiniteQuantity?.value === true) {\n          const content = translate(\n            `curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY}`,\n            { context: uom?.value }\n          );\n          return (\n            <Tooltip content={content}>\n              <ChartIcon symbol=\"infinity\" aria-label={content} />\n            </Tooltip>\n          );\n        }\n        return totalCapacity?.value;\n      },\n      isSortable: true,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value && moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  productDisplay: DISPLAY_TYPES.PARTIAL,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      isStacked: false\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    actions: [\n      {\n        content: ({ data = [] } = {}) => {\n          const { id, meta = {} } = data.find(({ metric }) => metric === RHSM_API_PATH_METRIC_TYPES.CORES) || {};\n          const { totalMonthlyValue } = meta;\n          let displayContent;\n\n          if (totalMonthlyValue) {\n            displayContent = translate('curiosity-graph.cardActionTotal', {\n              context: id,\n              total: helpers\n                .numberDisplay(totalMonthlyValue)\n                ?.format({ average: true, mantissa: 2, trimMantissa: true, lowPrecision: false })\n                ?.toUpperCase()\n            });\n          }\n\n          return <div className=\"curiosity-usage-graph__total\">{displayContent || null}</div>;\n        }\n      },\n      {\n        id: 'rangedMonthly',\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: ({\n        [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n        [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {},\n        [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {}\n      } = {}) => {\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        const updatedDisplayName = displayName.value || inventoryId.value;\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.CORE_HOURS,\n      cell: ({ [INVENTORY_TYPES.CORE_HOURS]: coreHours } = {}) =>\n        (typeof coreHours?.value === 'number' && Number.parseFloat(coreHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    }\n  ],\n  initialToolbarFilters: undefined\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark\n} from '@patternfly/react-tokens';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  productDisplay: DISPLAY_TYPES.DUAL_AXES,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisUseDataSet: true\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisUseDataSet: true\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    actions: [\n      {\n        content: ({ data = [] } = {}) => {\n          const { id, meta = {} } = data.find(({ metric }) => metric === RHSM_API_PATH_METRIC_TYPES.CORES) || {};\n          const { totalMonthlyValue } = meta;\n          let displayContent;\n\n          if (totalMonthlyValue) {\n            displayContent = translate('curiosity-graph.cardActionTotal', {\n              context: id,\n              total: helpers\n                .numberDisplay(totalMonthlyValue)\n                ?.format({ average: true, mantissa: 2, trimMantissa: true, lowPrecision: false })\n                ?.toUpperCase()\n            });\n          }\n\n          return <div className=\"curiosity-usage-graph__total\">{displayContent || null}</div>;\n        }\n      },\n      {\n        id: 'rangedMonthly',\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: ({\n        [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n        [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {},\n        [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {}\n      } = {}) => {\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        const updatedDisplayName = displayName.value || inventoryId.value;\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate(\n                'curiosity-inventory.label',\n                { context: INVENTORY_TYPES.NUMBER_OF_GUESTS, count: numberOfGuests.value },\n                [<PfLabel color=\"blue\" />]\n              )) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.CORE_HOURS,\n      cell: ({ [INVENTORY_TYPES.CORE_HOURS]: coreHours }) =>\n        (typeof coreHours?.value === 'number' && Number.parseFloat(coreHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.INSTANCE_HOURS,\n      cell: ({ [INVENTORY_TYPES.INSTANCE_HOURS]: instanceHours } = {}) =>\n        (typeof instanceHours?.value === 'number' && Number.parseFloat(instanceHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: undefined\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS,\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick }) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.measurement_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n      header: {\n        tooltip: () =>\n          translate('curiosity-inventory.header', {\n            context: ['tooltip', RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES]\n          })\n      },\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS,\n      header: {\n        tooltip: () =>\n          translate('curiosity-inventory.header', {\n            context: ['tooltip', RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS]\n          })\n      },\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.measurement_${SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value &&\n          helpers.isDate(nextEventDate?.value) &&\n          moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    },\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES as CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.SATELLITE;\n\nconst productId = null;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.SATELLITE;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  productDisplay: DISPLAY_TYPES.PARTIAL,\n  viewId: `view${productGroup}`,\n  productVariants: [...Object.values(RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES)],\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      query: {\n        [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.PHYSICAL\n      }\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      query: {\n        [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.VIRTUAL\n      }\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value,\n      query: {\n        [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.CLOUD\n      }\n    }\n  ],\n  initialGraphSettings: {\n    isDisabledLegendClick: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        {\n          [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n          [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {},\n          [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {}\n        } = {},\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.MEASUREMENT_TYPE,\n      cell: ({\n        [INVENTORY_TYPES.CLOUD_PROVIDER]: cloudProvider,\n        [INVENTORY_TYPES.MEASUREMENT_TYPE]: measurementType\n      } = {}) => (\n        <React.Fragment>\n          {translate('curiosity-inventory.measurementType', { context: measurementType?.value })}{' '}\n          {(cloudProvider?.value && (\n            <PfLabel color=\"purple\">\n              {translate('curiosity-inventory.cloudProvider', { context: cloudProvider?.value })}\n            </PfLabel>\n          )) ||\n            ''}\n        </React.Fragment>\n      ),\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: INVENTORY_TYPES.SOCKETS,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.USAGE,\n      selected: true\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.CATEGORY\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.VARIANT\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick }) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.measurement_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.CORES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.measurement_${SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value &&\n          helpers.isDate(nextEventDate?.value) &&\n          moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    },\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick }) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.measurement_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.CORES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.measurement_${SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value &&\n          helpers.isDate(nextEventDate?.value) &&\n          moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    },\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import { config as rhelConfig } from './product.rhel';\nimport { config as openshiftContainerConfig } from './product.openshiftContainer';\nimport { config as openshiftMetricsConfig } from './product.openshiftMetrics';\nimport { config as openshiftDedicatedConfig } from './product.openshiftDedicated';\nimport { config as rhacsConfig } from './product.rhacs';\nimport { config as rhodsConfig } from './product.rhods';\nimport { config as rhosakConfig } from './product.rhosak';\nimport { config as satelliteProductConfig } from './product.satellite';\nimport { RHSM_API_PATH_PRODUCT_TYPES } from '../services/rhsm/rhsmConstants';\nimport { helpers } from '../common';\n\nconst routes = [\n  {\n    id: 'rhel',\n    path: '/rhel',\n    pathParameter: [RHSM_API_PATH_PRODUCT_TYPES.RHEL],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_PRODUCT_TYPES.RHEL }],\n    redirect: null,\n    isSearchable: true,\n    aliases: ['insights'],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'openshift-container',\n    path: '/openshift-container',\n    pathParameter: [openshiftContainerConfig.productId, openshiftMetricsConfig.productId],\n    productParameter: [openshiftContainerConfig.productGroup, openshiftMetricsConfig.productGroup],\n    productConfig: [openshiftContainerConfig, openshiftMetricsConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'openshift-dedicated',\n    path: '/openshift-dedicated',\n    pathParameter: [openshiftDedicatedConfig.productId],\n    productParameter: [openshiftDedicatedConfig.productGroup],\n    productConfig: [openshiftDedicatedConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhacs',\n    path: '/rhacs',\n    pathParameter: [rhacsConfig.productId],\n    productParameter: [rhacsConfig.productGroup],\n    productConfig: [rhacsConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: ['rhacs'],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhods',\n    path: '/rhods',\n    pathParameter: [rhodsConfig.productId],\n    productParameter: [rhodsConfig.productGroup],\n    productConfig: [rhodsConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: ['rhods'],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhosak',\n    path: '/streams',\n    pathParameter: [rhosakConfig.productId],\n    productParameter: [rhosakConfig.productGroup],\n    productConfig: [rhosakConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: ['application-services', 'streams', 'rhosak'],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'satellite',\n    path: '/satellite',\n    pathParameter: [RHSM_API_PATH_PRODUCT_TYPES.SATELLITE],\n    productParameter: [satelliteProductConfig.productGroup],\n    productConfig: [{ ...satelliteProductConfig, productId: RHSM_API_PATH_PRODUCT_TYPES.SATELLITE }],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'optin',\n    path: '/optin',\n    pathParameter: null,\n    productParameter: null,\n    productConfig: null,\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: true,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'optinView/optinView'\n  },\n  {\n    id: 'missing',\n    path: '/',\n    pathParameter: null,\n    productParameter: null,\n    productConfig: null,\n    redirect: '/',\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: true,\n    component: 'productView/productViewMissing'\n  }\n];\n\nexport { routes as default, routes };\n","import { useHistory as useHistoryRRD, useLocation, useParams, useRouteMatch } from 'react-router-dom';\nimport { useRouteDetail } from '../components/router/routerContext';\nimport { routerHelpers } from '../components/router/routerHelpers';\nimport { reduxActions, storeHooks } from '../redux';\n\n/**\n * Pass useHistory methods. Proxy useHistory push with Platform specific navigation update.\n *\n * @param {object} options\n * @param {boolean} options.isSetAppNav Allow setting the Platform's left navigation if conditions are met or fallback to history.push.\n * @param {Function} options.useHistory\n * @param {Function} options.useDispatch\n * @returns {object}\n */\nconst useHistory = ({\n  isSetAppNav = false,\n  useHistory: useAliasHistory = useHistoryRRD,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch\n} = {}) => {\n  const history = useAliasHistory();\n  const dispatch = useAliasDispatch();\n\n  return {\n    ...history,\n    push: (pathLocation, historyState) => {\n      const pathName = (typeof pathLocation === 'string' && pathLocation) || pathLocation?.pathname;\n      const { productParameter, id, routeHref } = routerHelpers.getRouteConfig({ pathName, id: pathName });\n      const { hash, search } = window.location;\n\n      if (isSetAppNav && productParameter) {\n        return dispatch(reduxActions.platform.setAppNav(id));\n      }\n\n      return history?.push(routeHref || (pathName && `${pathName}${search}${hash}`) || pathLocation, historyState);\n    }\n  };\n};\n\nconst routerHooks = {\n  useHistory,\n  useLocation,\n  useParams,\n  useRouteDetail,\n  useRouteMatch\n};\n\nexport { routerHooks as default, routerHooks, useHistory, useLocation, useParams, useRouteDetail, useRouteMatch };\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _camelCase from 'lodash/camelCase';\nimport _snakeCase from 'lodash/snakeCase';\nimport { helpers } from '../../common';\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Set an API query based on specific API \"acceptable values\" schema.\n *\n * @param {object} values\n * @param {object} schema\n * @param {*} [initialValue]\n * @returns {object}\n */\nconst setApiQuery = (values, schema, initialValue) => {\n  const generated = {};\n  const schemaArr = (schema && Object.values(schema)) || [];\n\n  schemaArr.forEach(value => {\n    if (initialValue === undefined) {\n      if (value in values) {\n        generated[value] = values?.[value];\n      }\n    } else {\n      generated[value] = values?.[value] || initialValue;\n    }\n  });\n\n  return generated;\n};\n\n// ToDo: research applying a maintained schema map/normalizer such as, normalizr\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} [initialValue]\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Normalize an API response.\n *\n * @param {*} responses\n * @param {object} responses.response\n * @param {object} responses.response.schema\n * @param {Array|object} responses.response.data\n * @param {string} responses.response.keyCase\n * @param {Function} responses.response.customResponseEntry\n * @param {Function} responses.response.customResponseValue\n * @param {string} responses.response.keyPrefix\n * @returns {Array}\n */\nconst setNormalizedResponse = (...responses) => {\n  const parsedResponses = [];\n\n  responses.forEach(\n    ({ schema = {}, data, customResponseEntry, customResponseValue, keyPrefix: prefix, keyCase = 'camel' }) => {\n      const isArray = Array.isArray(data);\n      const updatedData = (isArray && data) || (data && [data]) || [];\n      const [generatedSchema = {}] = setResponseSchemas([schema]);\n      const parsedResponse = [];\n\n      updatedData.forEach((value, index) => {\n        const generateReflectedData = ({\n          dataObj,\n          keyPrefix = '',\n          keyCaseType,\n          customEntry,\n          customValue = null,\n          update = helpers.noop\n        }) => {\n          let updatedDataObj = {};\n\n          Object.entries(dataObj).forEach(([dataObjKey, dataObjValue]) => {\n            let casedDataObjKey;\n\n            switch (keyCaseType) {\n              case 'camel':\n                casedDataObjKey = _camelCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'snake':\n                casedDataObjKey = _snakeCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'default':\n              default:\n                casedDataObjKey = `${dataObjKey}`.trim();\n                break;\n            }\n\n            let val = dataObjValue;\n\n            if (typeof val === 'number') {\n              val = (Number.isInteger(val) && Number.parseInt(val, 10)) || Number.parseFloat(val) || val;\n            }\n\n            if (typeof customValue === 'function') {\n              updatedDataObj[casedDataObjKey] = customValue({ data: dataObj, key: dataObjKey, value: val, index });\n            } else {\n              updatedDataObj[casedDataObjKey] = val;\n            }\n          });\n\n          if (typeof customEntry === 'function') {\n            updatedDataObj = customEntry(updatedDataObj, index);\n          }\n\n          update(updatedDataObj);\n        };\n\n        generateReflectedData({\n          keyPrefix: prefix,\n          dataObj: { ...generatedSchema, ...value },\n          keyCaseType: keyCase,\n          customEntry: customResponseEntry,\n          customValue: customResponseValue,\n          update: generatedData => parsedResponse.push(generatedData)\n        });\n      });\n\n      parsedResponses.push(parsedResponse);\n    }\n  );\n\n  return parsedResponses;\n};\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 400 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults?.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @property {object} state\n * @property {object} initialState\n * @property {boolean} reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (helpers.DEV_MODE && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (helpers.DEV_MODE && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    return {\n      meta: { ...updatedMeta },\n      ...Object.fromEntries(Object.entries(meta).map(([key, value]) => [_camelCase(`meta ${key}`), value]))\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  // Automatically apply data and state to a contextual ID if meta.id exists.\n  const setId = data =>\n    (typeof action.meta?.id === 'string' && action.meta?.id && { [action.meta.id]: { ...baseState, ...data } }) || {\n      ...baseState,\n      ...data\n    };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setApiQuery,\n  setResponseSchemas,\n  setNormalizedResponse,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { useSelector as useReactReduxSelector, shallowEqual } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { store } from '../store';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Appears to be an issue in trying to use Redux Promise with the default \"useDispatch\"\n */\n/**\n * Wrapper for store.dispatch, emulating useDispatch.\n *\n * @returns {Function}\n */\nconst useDispatch = () => dispatchEvent => store.dispatch(dispatchEvent);\n\n/**\n * Wrapper for Redux hook, useSelector. Applies test mode and a fallback value.\n *\n * @param {Function} selector\n * @param {*} value\n * @param {object} options\n * @param {*} options.equality\n * @param {Function} options.useSelector\n * @returns {*}\n */\nconst useSelector = (\n  selector,\n  value = null,\n  { equality, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => useAliasSelector(selector, equality) ?? value;\n\n/**\n * Generate a selector from multiple selectors for use in \"useSelector\".\n *\n * @param {Array|Function} selectors A selector function or array of functions. Or an array of objects in the form of\n *     { selector: Function, id: string } If an \"ID\" is used for each selector the returned response will be in the\n *     form of an object whose properties reflect said IDs with the associated selector value.\n * @param {*} value Pass-through value similar to charging the response.\n * @param {object} options\n * @param {Function} options.useSelector\n * @param {*} options.equality\n * @returns {Array|object}\n */\nconst useSelectors = (\n  selectors,\n  value,\n  { equality = shallowEqual, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => {\n  let updatedSelectors = Array.isArray(selectors) ? selectors : [selectors];\n  const selectorIds = new Set();\n\n  updatedSelectors = updatedSelectors.map(selector => {\n    if (selector.selector && selector.id) {\n      selectorIds.add(selector.id);\n      return selector.selector;\n    }\n    return selector;\n  });\n\n  const multiSelector = createSelector(updatedSelectors, (...results) => results);\n\n  let listMultiSelectorResponse = (useAliasSelector(multiSelector, equality) ?? value) || [];\n  const undefinedMultiSelectorResponse = listMultiSelectorResponse.filter(response => response === undefined);\n\n  if (undefinedMultiSelectorResponse.length === listMultiSelectorResponse.length) {\n    listMultiSelectorResponse = [];\n  } else {\n    listMultiSelectorResponse = _cloneDeep(listMultiSelectorResponse);\n  }\n\n  if (selectorIds.size && selectorIds.size === listMultiSelectorResponse.length) {\n    const idMultiSelectorResponse = {};\n\n    Array.from(selectorIds).forEach((id, index) => {\n      idMultiSelectorResponse[id] = listMultiSelectorResponse[index];\n    });\n\n    return idMultiSelectorResponse;\n  }\n\n  return listMultiSelectorResponse;\n};\n\n/**\n * Return a combined selector response using a \"Promise.all\" like response.\n *\n * @param {Array|Function} selectors A selector function or array of functions. Or an array of objects in the form of\n *     { selector: Function, id: string } If an \"ID\" is used for each selector the returned response will be in the\n *     form of an object whose properties reflect said IDs with the associated selector value.\n * @param {object} options\n * @param {Function} options.useSelectors\n * @param {Function} options.customResponse Callback for customizing your own response\n * @returns {{data: ({}|*[]), pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsResponse = (selectors, { useSelectors: useAliasSelectors = useSelectors, customResponse } = {}) => {\n  const selectorResponse = useAliasSelectors(selectors, []);\n  const isSelectorResponseArray = Array.isArray(selectorResponse);\n\n  const cancelledById = {};\n  const cancelledByList = [];\n  const cancelledDataById = {};\n  const cancelledDataByList = [];\n\n  const errorByList = [];\n  const errorById = {};\n  const errorDataById = {};\n  const errorDataByList = [];\n\n  const fulfilledByList = [];\n  const fulfilledById = {};\n  const fulfilledDataById = {};\n  const fulfilledDataByList = [];\n\n  const pendingByList = [];\n\n  const responsesById = {};\n  const responsesByList = [];\n  const dataById = {};\n  const dataByList = [];\n\n  const idList = [];\n\n  const updatedSelectorResponse = _cloneDeep(\n    (isSelectorResponseArray && selectorResponse) || Object.entries(selectorResponse)\n  );\n\n  updatedSelectorResponse.forEach(response => {\n    const id = (!isSelectorResponseArray && response?.[0]) || null;\n\n    const updatedResponse = (isSelectorResponseArray && response) || response?.[1] || response;\n    const isServiceResponse =\n      typeof updatedResponse.cancelled === 'boolean' ||\n      typeof updatedResponse.error === 'boolean' ||\n      typeof updatedResponse.fulfilled === 'boolean' ||\n      typeof updatedResponse.pending === 'boolean';\n\n    const { pending, fulfilled, error, cancelled, message } = (isServiceResponse && updatedResponse) || {};\n\n    if (id !== null) {\n      idList.push(id);\n      updatedResponse.id = id;\n    }\n\n    if (cancelled) {\n      cancelledByList.push(updatedResponse);\n      cancelledDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        cancelledById[id] = cancelledByList[cancelledByList.length - 1];\n        cancelledDataById[id] =\n          cancelledByList[cancelledByList.length - 1]?.data || cancelledByList[cancelledByList.length - 1];\n      }\n    }\n\n    if (error) {\n      errorByList.push({\n        ...updatedResponse,\n        ...new Error(message || `Error: useSelectorsAllResponse${(id && `, ${id}`) || ''}`)\n      });\n      errorDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        errorById[id] = errorByList[errorByList.length - 1];\n        errorDataById[id] = errorByList[errorByList.length - 1]?.data || errorByList[errorByList.length - 1];\n      }\n    }\n\n    if (fulfilled) {\n      fulfilledByList.push(updatedResponse);\n      fulfilledDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        fulfilledById[id] = fulfilledByList[fulfilledByList.length - 1];\n        fulfilledDataById[id] =\n          fulfilledByList[fulfilledByList.length - 1]?.data || fulfilledByList[fulfilledByList.length - 1];\n      }\n    }\n\n    if (pending) {\n      pendingByList.push(updatedResponse);\n    }\n\n    if (id !== null) {\n      responsesById[id] = updatedResponse;\n      dataById[id] = updatedResponse?.data || updatedResponse;\n    }\n\n    responsesByList.push(updatedResponse);\n    dataByList.push(updatedResponse?.data || updatedResponse);\n  });\n\n  const isById = idList.length !== 0 && idList.length === updatedSelectorResponse.length;\n\n  const response = {\n    responses: {\n      id: responsesById,\n      list: responsesByList\n    },\n    cancelled: false,\n    data: (isById && {}) || [],\n    error: false,\n    fulfilled: false,\n    message: null,\n    pending: false\n  };\n\n  if (typeof customResponse === 'function') {\n    Object.assign(response, {\n      ...customResponse(\n        { ...response, responses: { ...response.responses } },\n        {\n          cancelledById,\n          cancelledByList,\n          cancelledDataById,\n          cancelledDataByList,\n          dataById,\n          dataByList,\n          errorByList,\n          errorById,\n          errorDataById,\n          errorDataByList,\n          fulfilledByList,\n          fulfilledById,\n          fulfilledDataById,\n          fulfilledDataByList,\n          idList,\n          isById,\n          pendingByList,\n          responsesByList,\n          responsesById,\n          updatedSelectorResponse\n        }\n      )\n    });\n\n    return response;\n  }\n\n  if (errorByList.length) {\n    response.message = new Error(errorByList[0]?.message || `useSelectorsResponse, ${JSON.stringify(errorByList[0])}`);\n    response.error = true;\n    response.data = (isById && errorDataById) || errorDataByList;\n    return response;\n  }\n\n  if (pendingByList.length) {\n    response.pending = true;\n    return response;\n  }\n\n  if (cancelledByList.length && cancelledByList.length === responsesByList.length) {\n    response.message = new Error('Cancelled useSelectorsResponse');\n    response.cancelled = true;\n    response.data = (isById && cancelledById) || cancelledByList;\n    return response;\n  }\n\n  if (\n    fulfilledByList.length &&\n    (fulfilledByList.length === responsesByList.length ||\n      cancelledByList.length + fulfilledByList.length === responsesByList.length)\n  ) {\n    response.fulfilled = true;\n    response.data = (isById && dataById) || dataByList;\n    return response;\n  }\n\n  return response;\n};\n\n/**\n * Return a combined selector response using a \"Promise.allSettled\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|*[]), pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsAllSettledResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    { cancelledByList, errorByList, fulfilledByList, pendingByList, dataById, dataByList, isById }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (\n      errorByList?.length + fulfilledByList?.length + cancelledByList?.length === dataByList?.length ||\n      errorByList?.length === dataByList?.length ||\n      fulfilledByList?.length === dataByList?.length ||\n      cancelledByList?.length === dataByList?.length\n    ) {\n      response.fulfilled = true;\n      response.data = (isById && dataById) || dataByList;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\n/**\n * Return a combined selector response using a \"Promise.any\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|*[]), pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsAnyResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    {\n      cancelledByList,\n      cancelledDataById,\n      cancelledDataByList,\n      errorByList,\n      errorDataById,\n      errorDataByList,\n      fulfilledByList,\n      fulfilledDataById,\n      fulfilledDataByList,\n      pendingByList,\n      responsesByList,\n      isById\n    }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (fulfilledByList?.length) {\n      let data = fulfilledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(fulfilledDataById);\n        data = (keyList?.[0] && fulfilledDataById[keyList[0]]) || undefined;\n      }\n\n      response.fulfilled = true;\n      response.data = data;\n      return response;\n    }\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (\n      errorByList?.length &&\n      (errorByList?.length === responsesByList?.length ||\n        cancelledByList?.length + errorByList?.length === responsesByList?.length)\n    ) {\n      response.message = helpers.aggregatedError(errorByList, 'useSelectorsAnyResponse');\n      response.error = true;\n      response.data = (isById && errorDataById) || errorDataByList;\n      return response;\n    }\n\n    if (cancelledByList?.length && cancelledByList?.length === responsesByList?.length) {\n      response.message = new Error('Cancelled useSelectorsAnyResponse');\n      response.cancelled = true;\n      response.data = (isById && cancelledDataById) || cancelledDataByList;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\n/**\n * Return a combined selector response using a \"Promise.race\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|*[]), pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsRaceResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    {\n      cancelledByList,\n      cancelledDataById,\n      cancelledDataByList,\n      errorByList,\n      errorDataById,\n      errorDataByList,\n      fulfilledByList,\n      fulfilledDataById,\n      fulfilledDataByList,\n      pendingByList,\n      responsesByList,\n      isById\n    }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (fulfilledByList?.length) {\n      let data = fulfilledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(fulfilledDataById);\n        data = (keyList?.[0] && fulfilledDataById[keyList[0]]) || undefined;\n      }\n\n      response.fulfilled = true;\n      response.data = data;\n      return response;\n    }\n\n    if (errorByList?.length) {\n      let data = errorDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(errorDataById);\n        data = (keyList?.[0] && errorDataById[keyList[0]]) || undefined;\n      }\n\n      response.message = new Error(\n        errorByList[0]?.message || `useSelectorsRaceResponse, ${JSON.stringify(errorByList[0])}`\n      );\n      response.error = true;\n      response.data = data;\n      return response;\n    }\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (cancelledByList?.length && cancelledByList?.length === responsesByList?.length) {\n      let data = cancelledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(cancelledDataById);\n        data = (keyList?.[0] && cancelledDataById[keyList[0]]) || undefined;\n      }\n\n      response.message = new Error('Cancelled useSelectorsRaceResponse');\n      response.cancelled = true;\n      response.data = data;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\nconst reactReduxHooks = {\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useSelectors,\n  useSelectorsResponse,\n  useSelectorsAllSettledResponse,\n  useSelectorsAnyResponse,\n  useSelectorsRaceResponse\n};\n\nexport {\n  reactReduxHooks as default,\n  reactReduxHooks,\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useSelectors,\n  useSelectorsResponse,\n  useSelectorsAllSettledResponse,\n  useSelectorsAnyResponse,\n  useSelectorsRaceResponse\n};\n","import { reactReduxHooks } from './useReactRedux';\n\nconst storeHooks = {\n  reactRedux: reactReduxHooks\n};\n\nexport { storeHooks as default, storeHooks, reactReduxHooks };\n","import _camelCase from 'lodash/camelCase';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common';\n\n/**\n * Pass through generate hash\n */\nconst { generateHash } = helpers;\n\n/**\n * A timeout cancel for function calls.\n *\n * @param {Function} func Callback to be executed or cancelled\n * @param {object} options\n * @param {number} options.timeout Function timeout in milliseconds\n * @param {string} options.errorMessage What the error message will read\n * @returns {Promise<*>}\n */\nconst timeoutFunctionCancel = (func, { timeout = 3000, errorMessage = 'function timeout' } = {}) => {\n  let clearTimer;\n\n  const timer = () =>\n    new Promise((_, reject) => {\n      clearTimer = window.setTimeout(reject, timeout, new Error(errorMessage));\n    });\n\n  const updatedFunc = async () => {\n    const response = await func();\n    window.clearTimeout(clearTimer);\n    return response;\n  };\n\n  const execFunction = () =>\n    Promise.race([timer(), updatedFunc()]).finally(() => {\n      window.clearTimeout(clearTimer);\n    });\n\n  return execFunction();\n};\n\n/**\n * Return objects with the keys camelCased. Normally applied to an array of objects.\n *\n * @param {object|Array|*} obj\n * @returns {object|Array|*}\n */\nconst camelCase = obj => {\n  if (Array.isArray(obj)) {\n    return obj.map(camelCase);\n  }\n\n  if (_isPlainObject(obj)) {\n    const updatedObj = {};\n\n    Object.entries(obj).forEach(([key, val]) => {\n      updatedObj[_camelCase(key)] = camelCase(val);\n    });\n\n    return updatedObj;\n  }\n\n  return obj;\n};\n\n/**\n * Apply data to a callback, pass original data on error.\n *\n * @param {Function} callback\n * @param {Array} data\n * @returns {{data: *, error}}\n */\nconst passDataToCallback = (callback, ...data) => {\n  let error;\n  let updatedData = data;\n\n  try {\n    updatedData = callback(...data);\n  } catch (e) {\n    error = e;\n  }\n\n  return { data: updatedData, error };\n};\n\n/**\n * A callback for schema validation, and after-the-fact casing adjustments.\n *\n * @param {object} options\n * @param {string} options.casing\n * @param {boolean} options.convert\n * @param {string} options.id\n * @param {object|Array} options.response\n * @param {*} options.schema\n * @returns {*|{}}\n */\nconst schemaResponse = ({ casing, convert = true, id = null, response, schema } = {}) => {\n  const { value, error = { details: [] } } = schema?.validate(response, { convert }) || {};\n\n  if (error.details.length && !helpers.TEST_MODE) {\n    console.error(\n      new Error(\n        `Passing original API response. Schema validation failed for ${id || '...'}: ${error.details\n          .map(({ context = {}, message, type }) => `${message}:${type}, ${JSON.stringify(context)}`)\n          .join(', ')}`\n      )\n    );\n  }\n\n  switch (casing) {\n    case 'camel':\n      return camelCase(value);\n    default:\n      return value;\n  }\n};\n\nconst serviceHelpers = {\n  camelCase,\n  generateHash,\n  passDataToCallback,\n  schemaResponse,\n  timeoutFunctionCancel\n};\n\nexport {\n  serviceHelpers as default,\n  serviceHelpers,\n  camelCase,\n  generateHash,\n  passDataToCallback,\n  schemaResponse,\n  timeoutFunctionCancel\n};\n","import axios, { CancelToken } from 'axios';\nimport LruCache from 'lru-cache';\nimport { serviceHelpers } from './helpers';\n\n/**\n * Set Axios XHR default timeout.\n */\nconst globalXhrTimeout = Number.parseInt(process.env.REACT_APP_AJAX_TIMEOUT, 10) || 60000;\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @private\n * @type {{}}\n */\nconst globalCancelTokens = {};\n\n/**\n * Cache Axios service call responses.\n *\n * @type {object}\n */\nconst globalResponseCache = new LruCache({\n  ttl: Number.parseInt(process.env.REACT_APP_AJAX_CACHE, 10) || 30000,\n  max: 100,\n  updateAgeOnGet: true\n});\n\n// ToDo: consider another way of hashing cacheIDs. base64 could get a little large depending on settings, i.e. md5\n/**\n * Set Axios configuration. This includes response schema validation and caching.\n * Call platform \"getUser\" auth method, and apply service config. Service configuration\n * includes the ability to cancel all and specific calls, cache and normalize a response\n * based on both a provided schema and a successful API response. The cache will refresh\n * its timeout on continuous calls. To reset it a user will either need to refresh the\n * page or wait the \"maxAge\".\n *\n * @param {object} config\n * @param {object} config.cache\n * @param {boolean} config.cancel\n * @param {string} config.cancelId\n * @param {object} config.params\n * @param {Array} config.schema\n * @param {Array} config.transform\n * @param {string|Function} config.url\n * @param {object} options\n * @param {string} options.cancelledMessage\n * @param {object} options.responseCache\n * @param {number} options.xhrTimeout\n * @returns {Promise<*>}\n */\nconst axiosServiceCall = async (\n  config = {},\n  { cancelledMessage = 'cancelled request', responseCache = globalResponseCache, xhrTimeout = globalXhrTimeout } = {}\n) => {\n  const updatedConfig = {\n    timeout: xhrTimeout,\n    ...config,\n    cache: undefined,\n    cacheResponse: config.cache,\n    method: config.method || 'get'\n  };\n  const responseTransformers = [];\n  const axiosInstance = axios.create();\n\n  // don't cache responses if \"get\" isn't used\n  updatedConfig.cacheResponse = updatedConfig.cacheResponse === true && updatedConfig.method === 'get';\n\n  // account for alterations to transforms, and other config props\n  const cacheId = (updatedConfig.cacheResponse === true && serviceHelpers.generateHash(updatedConfig)) || null;\n\n  // simple check to place responsibility on consumer, primarily used for testing\n  if (updatedConfig.exposeCacheId === true) {\n    updatedConfig.cacheId = cacheId;\n  }\n\n  if (updatedConfig.cancel === true) {\n    const cancelTokensId =\n      updatedConfig.cancelId || serviceHelpers.generateHash({ ...updatedConfig, data: undefined, params: undefined });\n\n    if (globalCancelTokens[cancelTokensId]) {\n      await globalCancelTokens[cancelTokensId].cancel(cancelledMessage);\n    }\n\n    globalCancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = globalCancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  if (updatedConfig.cacheResponse === true) {\n    const cachedResponse = responseCache.get(cacheId);\n\n    if (cachedResponse) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          ...cachedResponse,\n          status: 304,\n          statusText: 'Not Modified',\n          config: adapterConfig\n        });\n\n      return axiosInstance(updatedConfig);\n    }\n  }\n\n  if (updatedConfig.schema) {\n    responseTransformers.push(updatedConfig.schema);\n  }\n\n  if (updatedConfig.transform) {\n    responseTransformers.push(updatedConfig.transform);\n  }\n\n  responseTransformers.forEach(([successTransform, errorTransform]) => {\n    const transformers = [undefined, response => Promise.reject(response)];\n\n    if (successTransform) {\n      transformers[0] = response => {\n        const updatedResponse = { ...response };\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          successTransform,\n          updatedResponse.data,\n          updatedResponse.config\n        );\n\n        if (!normalizeError) {\n          updatedResponse.data = data;\n        }\n\n        return updatedResponse;\n      };\n    }\n\n    if (errorTransform) {\n      transformers[1] = response => {\n        const updatedResponse = { ...(response.response || response) };\n\n        if (updatedResponse?.message === cancelledMessage) {\n          return Promise.reject(updatedResponse);\n        }\n\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          errorTransform,\n          updatedResponse?.data || updatedResponse?.message,\n          updatedResponse.config\n        );\n\n        if (!normalizeError) {\n          updatedResponse.response = { ...updatedResponse, data };\n        }\n\n        return Promise.reject(updatedResponse);\n      };\n    }\n\n    axiosInstance.interceptors.response.use(...transformers);\n  });\n\n  if (updatedConfig.cacheResponse === true) {\n    axiosInstance.interceptors.response.use(\n      response => {\n        const updatedResponse = { ...response };\n        responseCache.set(cacheId, updatedResponse);\n        return updatedResponse;\n      },\n      response => Promise.reject(response)\n    );\n  }\n\n  if (typeof updatedConfig.url === 'function') {\n    const emulateCallback = updatedConfig.url;\n    updatedConfig.url = '/emulated';\n\n    let message = 'success, emulated';\n    let emulatedResponse;\n    let isSuccess = true;\n\n    try {\n      emulatedResponse = await serviceHelpers.timeoutFunctionCancel(emulateCallback, { timeout: xhrTimeout });\n    } catch (e) {\n      isSuccess = false;\n      message = e.message || e;\n    }\n\n    if (isSuccess) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          data: emulatedResponse,\n          status: 200,\n          statusText: message,\n          config: adapterConfig\n        });\n    } else {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.reject({ // eslint-disable-line\n          ...new Error(message),\n          message,\n          status: 418,\n          config: adapterConfig\n        });\n    }\n  }\n\n  return axiosInstance(updatedConfig);\n};\n\nconst serviceConfig = { axiosServiceCall, globalXhrTimeout, globalCancelTokens, globalResponseCache };\n\nexport {\n  serviceConfig as default,\n  serviceConfig,\n  axiosServiceCall,\n  globalXhrTimeout,\n  globalCancelTokens,\n  globalResponseCache\n};\n","import JoiBase from 'joi';\nimport JoiDate from '@joi/date';\nimport { schemaResponse } from '../common/helpers';\n\nconst Joi = JoiBase.extend(JoiDate);\n\n/**\n * User response item.\n *\n * @type {*} Joi schema\n */\nconst userResponseSchema = Joi.object()\n  .keys({\n    identity: Joi.object({\n      user: Joi.object({\n        is_org_admin: Joi.boolean().default(false)\n      })\n        .unknown(true)\n        .default({})\n    })\n      .unknown(true)\n      .default({}),\n    entitlements: Joi.object({\n      [process.env.REACT_APP_UI_NAME]: Joi.object({\n        is_entitled: Joi.boolean().default(false)\n      })\n        .unknown(true)\n        .default({})\n    })\n      .unknown(true)\n      .default({})\n  })\n  .unknown(true)\n  .default({});\n\n/**\n * Permissions response item.\n *\n * @type {*} Joi schema\n */\nconst permissionsItem = Joi.object({\n  permission: Joi.string().optional().allow(null),\n  resourceDefinitions: Joi.array().optional().default([])\n})\n  .unknown(true)\n  .default();\n\n/**\n * Authorize response.\n *\n * @type {*} Joi schema\n */\nconst permissionsResponseSchema = Joi.array().items(permissionsItem).default([]);\n\nconst platformSchemas = {\n  user: response => schemaResponse({ response, schema: userResponseSchema, id: 'User auth' }),\n  permissions: response => schemaResponse({ response, schema: permissionsResponseSchema, id: 'Permissions auth' })\n};\n\nexport { platformSchemas as default, platformSchemas };\n","import { rbacConfig } from '../../config';\nimport {\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES as OPERATION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES as RESOURCE_TYPES\n} from './platformConstants';\nimport { helpers } from '../../common';\n\n/**\n * Parse platform getUser response.\n *\n * @param {object} response\n * @returns {object}\n */\nconst user = response => {\n  const updatedResponse = {};\n  const {\n    [platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY]: identity = {},\n    [platformConstants.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS]: entitlements = {}\n  } = response || {};\n\n  updatedResponse.isAdmin =\n    identity?.[platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]?.[\n      platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n    ] || false;\n\n  updatedResponse.isEntitled =\n    entitlements?.[helpers.UI_NAME]?.[platformConstants.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED] ||\n    false;\n\n  return updatedResponse;\n};\n\n/**\n * Parse platform getUserPermissions response.\n *\n * @param {object} response\n * @param {object} options\n * @param {object} options.config Pass in a configuration object, RBAC\n * @returns {object}\n */\nconst userPermissions = (response, { config = rbacConfig } = {}) => {\n  const updatedResponse = {\n    permissions: {},\n    authorized: {}\n  };\n\n  response?.forEach(\n    ({\n      [platformConstants.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION]: permission,\n      [platformConstants.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]: definitions = []\n    }) => {\n      const [app = '', resource, operation] = permission?.split(':') || [];\n\n      if (!updatedResponse.permissions[app]) {\n        updatedResponse.permissions[app] = {\n          all: false,\n          resources: {}\n        };\n      }\n\n      if (resource === RESOURCE_TYPES.ALL && operation === OPERATION_TYPES.ALL) {\n        updatedResponse.permissions[app].all = true;\n      }\n\n      if (!updatedResponse.permissions[app].resources[resource]) {\n        updatedResponse.permissions[app].resources[resource] = {};\n      }\n\n      updatedResponse.permissions[app].resources[resource][operation] = definitions;\n    }\n  );\n\n  // Alias specific app permissions checks\n  Object.entries(config).forEach(([key, { permissions: resourcePermissions }]) => {\n    updatedResponse.authorized[key] = updatedResponse.permissions[key]?.all || false;\n\n    resourcePermissions.forEach(({ resource: res, operation: op }) => {\n      if (updatedResponse.permissions[key]?.resources?.[res]?.[op]) {\n        updatedResponse.authorized[key] = true;\n      }\n    });\n  });\n\n  return updatedResponse;\n};\n\nconst platformTransformers = {\n  user,\n  permissions: userPermissions\n};\n\nexport { platformTransformers as default, platformTransformers, user, userPermissions };\n","import _set from 'lodash/set';\nimport { rbacConfig } from '../../config';\nimport { axiosServiceCall } from '../common/serviceConfig';\nimport { platformSchemas } from './platformSchemas';\nimport { platformTransformers } from './platformTransformers';\nimport { helpers } from '../../common';\nimport {\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES as USER_PERMISSION_TYPES\n} from './platformConstants';\n\n/**\n * Basic user authentication.\n *\n * @param {object} options\n * @returns {Promise<*>}\n */\nconst getUser = async (options = {}) => {\n  const { schema = [platformSchemas.user], transform = [platformTransformers.user] } = options;\n  const { insights } = window;\n  return axiosServiceCall({\n    url: async () => {\n      try {\n        return (\n          (helpers.DEV_MODE &&\n            _set(\n              {},\n              [\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY,\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n              ],\n              process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n            )) ||\n          (await insights.chrome.auth.getUser())\n        );\n      } catch (e) {\n        throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n      }\n    },\n    schema,\n    transform\n  });\n};\n\n/**\n * Basic user permissions.\n *\n * @param {string} appName\n * @param {object} options\n * @returns {Promise<*>}\n */\nconst getUserPermissions = (appName = Object.keys(rbacConfig), options = {}) => {\n  const { schema = [platformSchemas.permissions], transform = [platformTransformers.permissions] } = options;\n  const updatedAppName = (Array.isArray(appName) && appName) || [appName];\n  const { insights } = window;\n  const platformMethod = name =>\n    (helpers.DEV_MODE && [\n      {\n        [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_ONE\n      },\n      {\n        [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_TWO\n      }\n    ]) ||\n    insights.chrome.getUserPermissions(name);\n\n  return axiosServiceCall({\n    url: async () => {\n      let userPermissions;\n\n      try {\n        const allPermissions = await Promise.all(updatedAppName.map(name => platformMethod(name)));\n\n        if (Array.isArray(allPermissions)) {\n          userPermissions = [...allPermissions.flat()];\n        }\n      } catch (e) {\n        throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n      }\n\n      return userPermissions;\n    },\n    schema,\n    transform\n  });\n};\n\n/**\n * Disables the Platform's global filter display.\n *\n * @param {boolean} isHidden\n * @returns {Promise<*>}\n */\nconst hideGlobalFilter = async (isHidden = true) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.hideGlobalFilter(isHidden);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Help initialize global platform methods.\n *\n * @returns {Promise<*>}\n */\nconst initializeChrome = async () => {\n  const { insights } = window;\n  try {\n    await insights.chrome.init();\n  } catch (e) {\n    throw new Error(`{ init } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Apply on \"app_navigation\" event. Return an un-listener.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => {\n  const { insights } = window;\n  try {\n    return insights.chrome.on('APP_NAVIGATION', callback);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Set application ID.\n *\n * @param {string} name\n * @returns {Promise<*>}\n */\nconst setAppName = (name = null) => {\n  const { insights } = window;\n  return axiosServiceCall({\n    url: async () => {\n      try {\n        await insights.chrome.identifyApp(name);\n      } catch (e) {\n        throw new Error(`{ identifyApp } = insights.chrome, ${e.message}`);\n      }\n    }\n  });\n};\n\n/**\n * Set app routes via the platform left-nav navigation.\n *\n * @param {string} id The navigation ID associated with internal route config, and external platform nav config\n * @param {object} options\n * @param {string} options.appName\n * @param {boolean} options.secondaryNav\n * @returns {Promise<*>}\n */\nconst setAppNav = async (id, { appName = helpers.UI_NAME, secondaryNav = true } = {}) => {\n  const { insights } = window;\n  try {\n    return await insights.chrome.appNavClick({ id, secondaryNav, parentId: appName });\n  } catch (e) {\n    throw new Error(`{ appNavClick } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = {\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n\nexport {\n  platformServices as default,\n  platformServices,\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platform/platformServices';\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Get an emulated and combined API response from the platforms \"getUser\" and \"getUserPermissions\" global methods.\n *\n * @param {string|Array} appName\n * @returns {Function}\n */\nconst authorizeUser = appName => dispatch =>\n  dispatch({\n    type: platformTypes.PLATFORM_USER_AUTH,\n    payload: Promise.all([platformServices.getUser(), platformServices.getUserPermissions(appName)])\n  });\n\n/**\n * Hide platform global filter.\n *\n * @param {boolean} isHidden\n * @returns {{Function}}\n */\nconst hideGlobalFilter = isHidden => ({\n  type: platformTypes.PLATFORM_GLOBAL_FILTER_HIDE,\n  payload: platformServices.hideGlobalFilter(isHidden)\n});\n\n/**\n * Apply platform method for initializing chrome, i.e. header, left-nav.\n *\n * @returns {{payload: Promise<void>, type: string}}\n */\nconst initializeChrome = () => ({\n  type: platformTypes.PLATFORM_INIT,\n  payload: platformServices.initializeChrome()\n});\n\n/**\n * Apply platform method for updating routing history on \"navigating\" with the left-nav.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_ON_NAV\n  });\n  return platformServices.onNavigation(callback);\n};\n\n/**\n * Apply platform method for setting the application name/identifier.\n *\n * @param {string} name\n * @returns {{payload: Promise<void>, meta: {data: {name: *}}, type: string}}\n */\nconst setAppName = name => ({\n  type: platformTypes.PLATFORM_APP_NAME,\n  payload: platformServices.setAppName(name),\n  meta: {\n    data: { name }\n  }\n});\n\n/**\n * Apply platform method for changing routes via the left-nav navigation.\n *\n * @param {string} id\n * @param {object} options\n * @param {string} options.appName\n * @param {boolean} options.secondaryNav\n * @returns {Function}\n */\nconst setAppNav =\n  (id, { appName, secondaryNav } = {}) =>\n  dispatch =>\n    dispatch({\n      type: platformTypes.PLATFORM_SET_NAV,\n      payload: platformServices.setAppNav(id, { appName, secondaryNav }),\n      meta: {\n        id,\n        appName,\n        secondaryNav\n      }\n    });\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  authorizeUser,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  authorizeUser,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n","import { axiosServiceCall } from './common/serviceConfig';\nimport { platformServices } from './platform/platformServices';\n\n/**\n * Apply a global custom service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  ...passedConfig\n});\n\n/**\n * Use a global Axios configuration.\n *\n * @param {object} config\n * @param {object} config.cache\n * @param {boolean} config.cancel\n * @param {string} config.cancelId\n * @param {object} config.params\n * @param {Array} config.schema\n * @param {Array} config.transform\n * @param {string|Function} config.url\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n  return axiosServiceCall(serviceConfig(config));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import JoiBase from 'joi';\nimport JoiDate from '@joi/date';\nimport { schemaResponse } from '../common/helpers';\nimport { rhsmConstants } from './rhsmConstants';\n\nconst Joi = JoiBase.extend(JoiDate);\n\n/**\n * Error response item.\n *\n * @type {*} Joi schema\n */\nconst errorItem = Joi.object({\n  code: Joi.string().default(null),\n  detail: Joi.string().default(null)\n}).unknown(true);\n\n/**\n * Error response.\n *\n * @type {*} Joi schema\n */\nconst errorResponseSchema = Joi.object()\n  .keys({\n    errors: Joi.array().items(errorItem).default([])\n  })\n  .unknown(true);\n\nconst linksSchema = Joi.object();\n\n/**\n * RHSM base response meta field.\n *\n * @type {*} Joi schema\n */\nconst metaResponseSchema = Joi.object()\n  .keys({\n    count: Joi.number().integer().default(0),\n    product: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_PRODUCT_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Capacity response meta field.\n *\n * @type {*} Joi schema\n */\nconst capacityMetaSchema = metaResponseSchema\n  .keys({\n    metric_id: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Capacity response item.\n *\n * @type {*} Joi schema\n */\nconst capacityItem = Joi.object({\n  date: Joi.date().utc().allow(null),\n  has_data: Joi.boolean().optional().allow(null),\n  has_infinite_quantity: Joi.boolean().optional().allow(null),\n  value: Joi.number().allow(null).default(0)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Capacity response.\n *\n * @type {*} Joi schema\n */\nconst capacityResponseSchema = Joi.object().keys({\n  data: Joi.array().items(capacityItem).default([]),\n  links: linksSchema.default({}),\n  meta: capacityMetaSchema.default({})\n});\n\n/**\n * Guests response meta field.\n *\n * @type {*} Joi schema\n */\nconst guestsMetaSchema = Joi.object()\n  .keys({\n    count: Joi.number().integer().default(0)\n  })\n  .unknown(true);\n\n/**\n * Guests response item.\n *\n * @type {*} Joi schema\n */\nconst guestsItem = Joi.object({\n  inventory_id: Joi.string().optional().allow(null),\n  display_name: Joi.string().optional().allow(null),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Guests response.\n *\n * @type {*} Joi schema\n */\nconst guestsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(guestsItem).default([]),\n  links: linksSchema.default({}),\n  meta: guestsMetaSchema.default({})\n});\n\n/**\n * Hosts response meta field.\n *\n * @type {*} Joi schema\n */\nconst hostsMetaSchema = metaResponseSchema;\n\n/**\n * Hosts response item.\n *\n * @type {*} Joi schema\n */\nconst hostsItem = Joi.object({\n  cloud_provider: Joi.string().lowercase().optional().allow(null),\n  display_name: Joi.string().optional().allow(null),\n  hardware_type: Joi.string().lowercase().optional().allow(null),\n  inventory_id: Joi.string().optional().allow(null),\n  measurement_type: Joi.string().lowercase().optional().allow(null),\n  number_of_guests: Joi.number().integer().default(0),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Hosts response.\n *\n * @type {*} Joi schema\n */\nconst hostsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(hostsItem).default([]),\n  links: linksSchema.default({}),\n  meta: hostsMetaSchema.default({})\n});\n\n/**\n * Instances response meta field.\n *\n * @type {*} Joi schema\n */\nconst instancesMetaSchema = metaResponseSchema\n  .keys({\n    measurements: Joi.array()\n      .items(Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)))\n      .default([])\n  })\n  .unknown(true);\n\n/**\n * Instances response item.\n *\n * @type {*} Joi schema\n */\nconst instancesItem = Joi.object({\n  inventory_id: Joi.string().optional().allow(null),\n  category: Joi.string().optional().allow(null),\n  display_name: Joi.string().optional().allow(null),\n  billing_provider: Joi.string().optional().allow(null),\n  billing_account_id: Joi.string().optional().allow(null),\n  measurements: Joi.array().default([]),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Instances response.\n *\n * @type {*} Joi schema\n */\nconst instancesResponseSchema = Joi.object().keys({\n  data: Joi.array().items(instancesItem).default([]),\n  links: linksSchema.default({}),\n  meta: instancesMetaSchema.default({})\n});\n\n/**\n * Subscriptions response meta field.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsMetaSchema = metaResponseSchema\n  .keys({\n    subscription_type: Joi.string().valid(null, ...Object.values(rhsmConstants.RHSM_API_RESPONSE_SUBSCRIPTION_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Subscriptions response item.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsItem = Joi.object({\n  has_infinite_quantity: Joi.boolean().optional().allow(null),\n  next_event_date: Joi.date().utc().allow(null),\n  product_name: Joi.string().optional().allow(null),\n  quantity: Joi.number().allow(null).default(0),\n  service_level: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_RESPONSE_SLA_TYPES)),\n  total_capacity: Joi.number().allow(null).default(0),\n  uom: Joi.string()\n    .lowercase()\n    .valid(...Object.values(rhsmConstants.RHSM_API_RESPONSE_UOM_TYPES))\n})\n  .unknown(true)\n  .default();\n\n/**\n * Subscriptions response.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(subscriptionsItem).default([]),\n  links: linksSchema.default({}),\n  meta: subscriptionsMetaSchema.default({})\n});\n\n/**\n * Tally and capacity metric response item.\n *\n * @type {*} Joi schema\n */\nconst tallyItem = Joi.object({\n  date: Joi.date().utc().allow(null),\n  has_data: Joi.boolean().optional().allow(null),\n  value: Joi.number().allow(null).default(0)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Tally response meta field.\n *\n * @type {*} Joi schema\n */\nconst tallyMetaSchema = metaResponseSchema\n  .keys({\n    has_cloudigrade_data: Joi.boolean().optional().allow(null),\n    has_cloudigrade_mismatch: Joi.boolean().optional().allow(null),\n    metric_id: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)),\n    total_monthly: tallyItem\n  })\n  .unknown(true);\n\n/**\n * Tally response.\n *\n * @type {*} Joi schema\n */\nconst tallyResponseSchema = Joi.object().keys({\n  data: Joi.array().items(tallyItem).default([]),\n  links: linksSchema.default({}),\n  meta: tallyMetaSchema.default({})\n});\n\nconst rhsmSchemas = {\n  capacity: response => schemaResponse({ response, schema: capacityResponseSchema, id: 'RHSM capacity' }),\n  errors: response => schemaResponse({ response, schema: errorResponseSchema, id: 'RHSM errors' }),\n  guests: response => schemaResponse({ response, casing: 'camel', schema: guestsResponseSchema, id: 'RHSM guests' }),\n  hosts: response => schemaResponse({ response, schema: hostsResponseSchema, id: 'RHSM hosts' }),\n  instances: response => schemaResponse({ response, schema: instancesResponseSchema, id: 'RHSM instances' }),\n  subscriptions: response =>\n    schemaResponse({ response, schema: subscriptionsResponseSchema, id: 'RHSM subscriptions' }),\n  tally: response => schemaResponse({ response, schema: tallyResponseSchema, id: 'RHSM tally' })\n};\n\nexport { rhsmSchemas as default, rhsmSchemas };\n","import moment from 'moment';\nimport {\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES as HOSTS_DATA_TYPES,\n  RHSM_API_RESPONSE_HOSTS_META_TYPES as HOSTS_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES as INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES as TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES as TALLY_CAPACITY_META_TYPES,\n  rhsmConstants\n} from './rhsmConstants';\nimport { dateHelpers } from '../../common';\n\n/**\n * Parse RHSM hosts response for caching.\n *\n * @param {object} response\n * @returns {object}\n */\nconst rhsmHosts = response => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n\n  updatedResponse.data = data.map(\n    ({\n      [HOSTS_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      [HOSTS_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n      ...dataResponse\n    }) => ({\n      [HOSTS_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      [HOSTS_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n      numberOfGuests,\n      subscriptionManagerId,\n      ...dataResponse\n    })\n  );\n\n  updatedResponse.meta = {\n    count: meta[HOSTS_META_TYPES.COUNT],\n    productId: meta[HOSTS_META_TYPES.PRODUCT]\n  };\n\n  return updatedResponse;\n};\n\n/**\n * FixMe: If RHSM Instances is deprecating Hosts we're missing a property, number_of_guests\n */\n/**\n * Parse RHSM instances response for caching.\n *\n * @param {object} response\n * @returns {object}\n */\nconst rhsmInstances = response => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const metaMeasurements = meta[INSTANCES_META_TYPES.MEASUREMENTS];\n\n  updatedResponse.data = data.map(\n    ({\n      [INSTANCES_DATA_TYPES.MEASUREMENTS]: measurements,\n      [INSTANCES_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n      [INSTANCES_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      ...dataResponse\n    }) => {\n      const updatedData = {\n        numberOfGuests,\n        subscriptionManagerId,\n        ...dataResponse\n      };\n\n      metaMeasurements?.forEach((measurement, index) => {\n        updatedData[measurement] = measurements[index];\n      });\n\n      return updatedData;\n    }\n  );\n\n  updatedResponse.meta = {\n    count: meta[INSTANCES_META_TYPES.COUNT],\n    productId: meta[INSTANCES_META_TYPES.PRODUCT]\n  };\n\n  return updatedResponse;\n};\n\n/**\n * ToDo: Confirm category meta response for Capacity\n * We're temporarily applying category from submitted params. API docs indicate\n * category only comes through on metric capacity?\n */\n/**\n * Parse RHSM tally response for caching.\n *\n * @param {object} response\n * @param {object} config\n * @param {boolean} config._isCapacity\n * @param {string} config.params\n * @returns {object}\n */\nconst rhsmTallyCapacity = (response, { _isCapacity, params } = {}) => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const currentDate = moment.utc(dateHelpers.getCurrentDate());\n  const currentDateStr = moment.utc(dateHelpers.getCurrentDate()).format('MM-D-YYYY');\n  let futureDateCount = 0;\n\n  updatedResponse.data = data.map(\n    (\n      {\n        [TALLY_CAPACITY_DATA_TYPES.DATE]: date,\n        [TALLY_CAPACITY_DATA_TYPES.VALUE]: value,\n        [TALLY_CAPACITY_DATA_TYPES.HAS_DATA]: hasData,\n        [TALLY_CAPACITY_DATA_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity\n      },\n      index\n    ) => {\n      const updatedDate = moment.utc(date);\n      const isCurrentDate = updatedDate.format('MM-D-YYYY') === currentDateStr;\n      const isFutureDate = updatedDate.diff(currentDate) > 0;\n\n      if (isFutureDate && !isCurrentDate) {\n        futureDateCount += 1;\n      }\n\n      return {\n        x: index,\n        y:\n          (_isCapacity === true && isFutureDate) ||\n          (_isCapacity === true && hasInfiniteQuantity === true) ||\n          (!_isCapacity && hasData === false && isFutureDate) ||\n          (!_isCapacity && hasData === false && isCurrentDate)\n            ? null\n            : value,\n        date,\n        hasData,\n        hasInfiniteQuantity,\n        isCurrentDate,\n        isFutureDate\n      };\n    }\n  );\n\n  /**\n   * Add an extra date to the first entry of the range to help Victory charts display.\n   */\n  if (futureDateCount === updatedResponse.data.length - 1) {\n    updatedResponse.data = [\n      {\n        ...updatedResponse.data[0],\n        x: 0,\n        isCurrentDate: false\n      },\n      ...updatedResponse.data\n    ].map((props, index) => ({ ...props, x: index }));\n  }\n\n  updatedResponse.meta = {\n    category: params?.[RHSM_API_QUERY_SET_TYPES.CATEGORY],\n    count: meta[TALLY_CAPACITY_META_TYPES.COUNT],\n    cloudigradeHasMismatch: meta?.[TALLY_CAPACITY_META_TYPES.HAS_CLOUDIGRADE_MISMATCH],\n    metricId: meta[TALLY_CAPACITY_META_TYPES.METRIC_ID],\n    productId: meta[TALLY_CAPACITY_META_TYPES.PRODUCT],\n    totalMonthlyDate: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.DATE],\n    totalMonthlyHasData: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.HAS_DATA],\n    totalMonthlyValue: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.VALUE]\n  };\n\n  return updatedResponse;\n};\n\nconst rhsmTransformers = {\n  hosts: rhsmHosts,\n  instances: rhsmInstances,\n  tallyCapacity: rhsmTallyCapacity\n};\n\nexport { rhsmTransformers as default, rhsmTransformers, rhsmHosts, rhsmInstances, rhsmTallyCapacity };\n","import { RHSM_API_QUERY_SET_TYPES } from './rhsmConstants';\n\n/**\n * ToDo: remove filterArchitectureVariant when the API supports architecture, variant params\n */\n/**\n * Patch for returning a made up API architecture, variant param as a product ID\n *\n * @param {string} id\n * @param {object} params\n * @returns {string}\n */\nconst filterArchitectureVariant = (id, params = {}) => {\n  const updatedId = id;\n\n  if (params?.[RHSM_API_QUERY_SET_TYPES.ARCHITECTURE]?.length) {\n    return params?.[RHSM_API_QUERY_SET_TYPES.ARCHITECTURE];\n  }\n\n  if (params?.[RHSM_API_QUERY_SET_TYPES.VARIANT]?.length) {\n    return params?.[RHSM_API_QUERY_SET_TYPES.VARIANT];\n  }\n\n  return updatedId;\n};\n\nconst rhsmHelpers = {\n  filterArchitectureVariant\n};\n\nexport { rhsmHelpers as default, rhsmHelpers, filterArchitectureVariant };\n","import { serviceCall } from '../config';\nimport { rhsmSchemas } from './rhsmSchemas';\nimport { helpers } from '../../common';\nimport { rhsmTransformers } from './rhsmTransformers';\nimport { rhsmHelpers } from './rhsmHelpers';\n\n/**\n * ToDo: remove rhsmHelpers.filterArchitectureVariant\n * We're using a temporary helper to emulate a param for architectures and/or variants.\n * When the api supports architecture and variant query params this needs to be refactored.\n */\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getApiVersion = (options = {}) => {\n  const { cache = false, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {string} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {string} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {object} links\n * @apiSuccess {object} meta\n * @apiSuccess {string} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {string} meta.product\n * - RHEL\n * @apiSuccess {number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 12\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 4\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000.057890,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"has_cloudigrade_data\": true,\n *           \"has_cloudigrade_mismatch\": true,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\",\n *         \"total_core_hours\": 30500.04,\n *         \"total_instance_hours\": 35\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-05-19T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.20,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-05-26T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.15,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-02T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.11,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-09T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.32,\n *           \"instance_hours\": 23\n *         },\n *         {\n *           \"date\": \"2020-06-16T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.42,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-23T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 999.06,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-30T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-08-04T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\",\n *         \"total_core_hours\": 200.03,\n *         \"total_instance_hours\": 26\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-08-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-09-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-10-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 400,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-11-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-12-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-01-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-02-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-03-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-04-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-05-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-06-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-08-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\",\n *         \"total_core_hours\": 2050.04\n *       }\n *     }\n *\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Sockets Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50.090125,\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": false,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Sockets\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Cores Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50.090125,\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": false,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Cores\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Transfer-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Transfer-gibibytes\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 1024,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Storage-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Storage-gibibyte\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2048,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Storage-gibibyte-months Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Storage-gibibyte-months\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2048,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Instance-hours Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Instance-hours\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2000,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/* Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string|Array} id String ID, or an array of identifiers to update a dotenv url path\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getGraphTally = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.tally, rhsmSchemas.errors],\n    transform = [rhsmTransformers.tallyCapacity]\n  } = options;\n  const updatedId = (typeof id === 'string' && [id]) || (Array.isArray(id) && id) || [];\n\n  let url = `${process.env.REACT_APP_SERVICES_RHSM_TALLY}`;\n  updatedId.forEach((value, index) => {\n    let updatedValue = value;\n    if (index === 0) {\n      updatedValue = rhsmHelpers.filterArchitectureVariant(value, params);\n    }\n\n    url = url.replace(`{${index}}`, updatedValue);\n  });\n\n  return serviceCall({\n    url,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id/:metric_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 100,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 100,\n *           \"has_data\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"product\": \"RHEL\",\n *         \"metric_id\": \"Sockets\",\n *         \"granularity\": \"daily\",\n *         \"service_level\": \"\",\n *         \"usage\": \"\",\n *         \"category\": \"\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string|Array} id String ID, or an array of identifiers to update a dotenv url path\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.capacity, rhsmSchemas.errors],\n    transform = [rhsmTransformers.tallyCapacity]\n  } = options;\n  const updatedId = (typeof id === 'string' && [id]) || (Array.isArray(id) && id) || [];\n\n  let url = `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}`;\n  updatedId.forEach((value, index) => {\n    let updatedValue = value;\n    if (index === 0) {\n      updatedValue = rhsmHelpers.filterArchitectureVariant(value, params);\n    }\n\n    url = url.replace(`{${index}}`, updatedValue);\n  });\n\n  return serviceCall({\n    url,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform,\n    _isCapacity: true\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 500\n * @api {get} /api/rhsm-subscriptions/v1/hosts/products/:product_id Get RHSM hosts/systems table/inventory data\n * @apiDescription Retrieve hosts/systems table/inventory data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"display_name\": \"ipsum.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-123456789012\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.05,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 70,\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6N\",\n *           \"cloud_provider\": \"AZURE\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.00,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"CLOUD\",\n *           \"measurement_type\": \"CLOUD\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6M\",\n *           \"cores\": 4,\n *           \"core_hours\": 1000.20,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 10,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"display_name\": \"dolor.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6L\",\n *           \"cores\": 4,\n *           \"core_hours\": 1001.60,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 1,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"display_name\": \"lorem.test.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YX\",\n *           \"cores\": 4,\n *           \"core_hours\": 999.60,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"display_name\": \"lorem.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YZ\",\n *           \"cores\": 0,\n *           \"core_hours\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"display_name\": \"lorem.another.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YA\",\n *           \"cores\": 0,\n *           \"core_hours\": 0.01,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-21T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YB\",\n *           \"cores\": 0,\n *           \"core_hours\": 999.61,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-22T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YC\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-23T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YD\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-24T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YEE\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-26T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YF\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-29T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 11\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.hosts, rhsmSchemas.errors],\n    transform = [rhsmTransformers.hosts]\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/hosts/:hypervisor_uuid/guests Get RHSM hosts/systems table/inventory guests data\n * @apiDescription Retrieve hosts/systems table/inventory guests data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"display_name\": \"guest01.example.com\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"display_name\": \"guest02.example.com\",\n *           \"subscription_manager_id\": \"b101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest03.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"display_name\": \"guest04.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest05.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest06.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest07.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest08.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest09.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest10.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 70\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory guests data.\n *\n * @param {string} id Subscription Manager ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getHostsInventoryGuests = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = false,\n    cancelId,\n    schema = [rhsmSchemas.guests, rhsmSchemas.errors],\n    transform = []\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_INVENTORY_GUESTS.replace('{0}', updatedId),\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 750\n * @api {get} /api/rhsm-subscriptions/v1/instances/products/:product_id Get RHSM instances table/inventory data\n * @apiDescription Retrieve instances table/inventory data.\n *\n * Reference [RHSM for instances table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"number_of_guests\": 70,\n *           \"billing_provider\": \"red hat\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx01\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"display_name\": \"rhv.example.com\",\n *           \"measurements\": [\n *              42,\n *              0.000003563,\n *              1\n *           ],\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"billing_provider\": \"azure\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx02\",\n *           \"inventory_id\": \"XXXXXX-b344-4778-831c-XXXXXXXX\",\n *           \"subscription_manager_id\": \"XXXXXX-5b00-42fa-XXXX-75801d45cc6d\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"measurements\": [\n *              20,\n *              null,\n *              1000\n *           ],\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"billing_provider\": \"Unknown\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx03\",\n *           \"inventory_id\": \"BBBBB-b344-4778-831c-BBBBBBB\",\n *           \"subscription_manager_id\": \"BBBBB-5b00-42fa-BBBBB-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              4000,\n *              10000.0000345678,\n *              3000\n *           ],\n *           \"last_seen\": \"2020-04-03T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3,\n *         \"measurements\": [\n *           \"Instance-hours\",\n *           \"Storage-gibibyte-months\",\n *           \"Transfer-gibibytes\"\n *         ],\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"Premium\",\n *         \"usage\": \"Production\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API instances data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getInstancesInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.instances, rhsmSchemas.errors],\n    transform = [rhsmTransformers.instances]\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_INSTANCES}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 0\n * @api {get} /api/rhsm-subscriptions/v1/subscriptions/products/:product_id Get RHSM subscriptions table/inventory data\n * @apiDescription Retrieve subscriptions table/inventory data.\n *\n * Reference [RHSM for subscriptions table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"sku\": \"RH00011\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium (Physical and 4 Virtual Nodes)(L3 Only)\",\n *           \"billing_provider\": \"red hat\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" },\n *              { \"id\": \"ipsum\", \"number\": \"1234567890\" },\n *              { \"id\": \"lorem\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 1,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\",\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"sku\": \"RH00010\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server\",\n *           \"billing_provider\": \"azure\",\n *           \"service_level\": \"Self-Support\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [],\n *           \"next_event_date\": \"2020-04-02T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 15,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\",\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"sku\": \"RH00009\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium\",\n *           \"billing_provider\": \"Unknown\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription End\",\n *           \"quantity\": 3000,\n *           \"physical_capacity\": 2,\n *           \"virtual_capacity\": 2,\n *           \"total_capacity\": 4,\n *           \"uom\": \"Cores\",\n *           \"has_infinite_quantity\": false\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3,\n *         \"subscription_type\": \"On-demand\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API subscriptions data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getSubscriptionsInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.subscriptions, rhsmSchemas.errors],\n    transform = []\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_SUBSCRIPTIONS}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\nconst rhsmServices = {\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getSubscriptionsInventory\n};\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport {\n  rhsmServices as default,\n  rhsmServices,\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getSubscriptionsInventory\n};\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsm/rhsmServices';\nimport { generateChartIds } from '../../components/graphCard/graphCardHelpers';\n\n/**\n * Get a RHSM response from multiple Tally, or Capacity, IDs and metrics.\n *\n * @param {object|Array} idMetric An object, or an Array of objects, in the form of { id: PRODUCT_ID, metric: METRIC_ID, isCapacity: boolean }\n * @param {object} query\n * @param {object} options\n * @param {string} options.cancelId\n * @returns {Function}\n */\nconst getGraphMetrics =\n  (idMetric = {}, query = {}, options = {}) =>\n  dispatch => {\n    const { cancelId = 'graphTally' } = options;\n    const multiMetric = (Array.isArray(idMetric) && idMetric) || [idMetric];\n    const multiDispatch = [];\n\n    multiMetric.forEach(({ id, metric, isCapacity, query: metricQuery }) => {\n      const methodService = isCapacity ? rhsmServices.getGraphCapacity : rhsmServices.getGraphTally;\n      const methodType = isCapacity ? rhsmTypes.GET_GRAPH_CAPACITY_RHSM : rhsmTypes.GET_GRAPH_TALLY_RHSM;\n      const methodCancelId = isCapacity ? 'graphCapacity' : cancelId;\n      const generatedId = generateChartIds({ isCapacity, metric, productId: id, query: metricQuery });\n\n      multiDispatch.push({\n        type: methodType,\n        payload: methodService(\n          [id, metric],\n          { ...query, ...metricQuery },\n          {\n            cancelId: `${methodCancelId}_${generatedId}`\n          }\n        ),\n        meta: {\n          id: generatedId,\n          query: { ...query, ...metricQuery },\n          notifications: {}\n        }\n      });\n    });\n\n    return Promise.all(dispatch(multiDispatch));\n  };\n\n/**\n * Get a hosts response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM,\n      payload: rhsmServices.getHostsInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a host's guest response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventoryGuests =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM,\n      payload: rhsmServices.getHostsInventoryGuests(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get an instances response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getInstancesInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM,\n      payload: rhsmServices.getInstancesInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a RHSM response from message reporting.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getMessageReports =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM,\n      payload: rhsmServices.getGraphReports(id, query, { cancelId: 'messageReport' }),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a subscriptions response from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getSubscriptionsInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM,\n      payload: rhsmServices.getSubscriptionsInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\nconst rhsmActions = {\n  getGraphMetrics,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n\nexport {\n  rhsmActions as default,\n  rhsmActions,\n  getGraphMetrics,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'iso-639-1';\nimport { serviceCall } from '../config';\nimport { helpers } from '../../common';\n\n/**\n * ToDo: Review moving the getLocale function under platformServices.\n * Also review using window.navigator.language as the primary pull for language.\n */\n/**\n * Return a browser locale, or fallback towards the platform locale cookie\n *\n * @returns {Promise<*>}\n */\nconst getLocale = () => {\n  const defaultLang = {\n    value: helpers.UI_LOCALE_DEFAULT,\n    key: helpers.UI_LOCALE_DEFAULT_DESC\n  };\n  const parseLang = value => {\n    const key = (value && LocaleCode.getName(value.split('-')[0])) || null;\n    return (key && { value, key }) || undefined;\n  };\n\n  return serviceCall({\n    url: async () => {\n      const cookieLang = await (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace(\n        '_',\n        '-'\n      );\n\n      return parseLang(cookieLang) || defaultLang;\n    }\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = (options = {}) => {\n  const { cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport { userServices as default, userServices, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/user/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_LOCALE,\n    payload: userServices.getLocale()\n  });\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn =\n  (query = {}) =>\n  dispatch =>\n    dispatch({\n      type: userTypes.UPDATE_USER_OPTIN,\n      payload: userServices.updateAccountOptIn(query),\n      meta: {\n        query,\n        notifications: {\n          rejected: {\n            variant: 'danger',\n            title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsErrorDescription'),\n            dismissable: true\n          },\n          fulfilled: {\n            variant: 'success',\n            title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsSuccessDescription'),\n            dismissable: true,\n            autoDismiss: false\n          }\n        }\n      }\n    });\n\nconst userActions = { getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport { userActions as default, userActions, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: {}, legend: {}, tally: {}, capacity: {}}}\n */\nconst initialState = {\n  capacity: {},\n  legend: {},\n  reportCapacity: {},\n  tally: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          [action.id]: action.value\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'capacity', type: rhsmTypes.GET_GRAPH_CAPACITY_RHSM },\n          { ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM },\n          { ref: 'tally', type: rhsmTypes.GET_GRAPH_TALLY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { rhsmTypes } from '../types/rhsmTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { inventoryTypes } from '../types';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{subscriptionsInventory: {}, instancesInventory: {}, tabs: {}, hostsInventory: {}, hostsGuests: {}}}\n */\nconst initialState = {\n  hostsInventory: {},\n  hostsGuests: {},\n  instancesInventory: {},\n  subscriptionsInventory: {},\n  tabs: {}\n};\n\n/**\n * Apply generated inventory observer/reducer for hosts/system and subscriptions inventory to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst inventoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case inventoryTypes.SET_INVENTORY_TAB:\n      return reduxHelpers.setStateProp(\n        'tabs',\n        {\n          ...action.tabs\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case inventoryTypes.CLEAR_INVENTORY_GUESTS:\n      return reduxHelpers.setStateProp(\n        'hostsGuests',\n        {\n          [action.id]: {}\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'hostsInventory', type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM },\n          { ref: 'hostsGuests', type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM },\n          { ref: 'instancesInventory', type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM },\n          { ref: 'subscriptionsInventory', type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ninventoryReducer.initialState = initialState;\n\nexport { inventoryReducer as default, initialState, inventoryReducer };\n","import { rhsmTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{report: {}}}\n */\nconst initialState = {\n  report: {}\n};\n\n/**\n * Generated daily observer/reducer for report to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst messagesReducer = (state = initialState, action) =>\n  reduxHelpers.generatedPromiseActionReducer(\n    [{ ref: 'report', type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM }],\n    state,\n    action\n  );\n\nmessagesReducer.initialState = initialState;\n\nexport { messagesReducer as default, initialState, messagesReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{filters: {}}}\n */\nconst initialState = {\n  filters: {}\n};\n\n/**\n * Apply user observer/reducer logic for toolbar to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst toolbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.toolbar.SET_ACTIVE_FILTERS:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            activeFilters: action.activeFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.toolbar.SET_FILTER_TYPE:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            currentFilter: action.currentFilter\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\ntoolbarReducer.initialState = initialState;\n\nexport { toolbarReducer as default, initialState, toolbarReducer };\n","import _get from 'lodash/get';\nimport { appTypes, platformTypes, userTypes } from '../types';\nimport { rhsmConstants } from '../../services/rhsm/rhsmConstants';\nimport { reduxHelpers } from '../common';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{auth: {}, optin: {}, locale: null, errors: {}}}\n */\nconst initialState = {\n  auth: {},\n  errors: {},\n  locale: {},\n  optin: {}\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(reduxHelpers.getDataFromResults(action), [rhsmConstants.RHSM_API_RESPONSE_ERRORS], []);\n\n        return reduxHelpers.setStateProp(\n          'errors',\n          {\n            error: true,\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            data: errorCodes.map(value => value[rhsmConstants.RHSM_API_RESPONSE_ERRORS_TYPES.CODE]),\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'locale', type: userTypes.USER_LOCALE },\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN },\n          { ref: 'auth', type: platformTypes.PLATFORM_USER_AUTH }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { routerHelpers } from '../../components/router';\nimport { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_SET_TYPES as RHSM_API_QUERY_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{graphTallyQuery: {}, inventoryHostsQuery: {}, inventorySubscriptionsQuery: {}, query: {},\n *     inventoryGuestsQuery: {}}}\n */\nconst initialState = {\n  query: {},\n  graphTallyQuery: {},\n  inventoryGuestsQuery: {},\n  inventoryHostsQuery: {},\n  inventorySubscriptionsQuery: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST:\n      const updateResetQueries = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n\n          delete productQuery[RHSM_API_QUERY_TYPES.DIRECTION];\n          delete productQuery[RHSM_API_QUERY_TYPES.SORT];\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateResetQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateResetQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST:\n      const updateClearQueries = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateClearQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateClearQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST:\n      const updateClearGuestQuery = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryGuestsQuery: updateClearGuestQuery(state.inventoryGuestsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            ...action.clearFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [action.filter]: action.value\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY]:\n      return reduxHelpers.setStateProp(\n        'graphTallyQuery',\n        {\n          [action.viewId]: {\n            ...state.graphTallyQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.GRANULARITY]: action[RHSM_API_QUERY_TYPES.GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.START_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.START_DATE]: action[RHSM_API_QUERY_TYPES.START_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.END_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.END_DATE]: action[RHSM_API_QUERY_TYPES.END_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.BILLING_PROVIDER]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.BILLING_PROVIDER]: action[RHSM_API_QUERY_TYPES.BILLING_PROVIDER]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SLA]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.SLA]: action[RHSM_API_QUERY_TYPES.SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.UOM]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.UOM]: action[RHSM_API_QUERY_TYPES.UOM]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.USAGE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.USAGE]: action[RHSM_API_QUERY_TYPES.USAGE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryGuestsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryGuestsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryGuestsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryGuestsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: action[RHSM_API_QUERY_TYPES.DISPLAY_NAME]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport inventoryReducer from './inventoryReducer';\nimport messagesReducer from './messagesReducer';\nimport toolbarReducer from './toolbarReducer';\nimport userReducer from './userReducer';\nimport viewReducer from './viewReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  inventory: inventoryReducer,\n  messages: messagesReducer,\n  toolbar: toolbarReducer,\n  user: userReducer,\n  view: viewReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport {\n  reduxReducers as default,\n  reduxReducers,\n  graphReducer,\n  inventoryReducer,\n  messagesReducer,\n  toolbarReducer,\n  userReducer,\n  viewReducer\n};\n","import { platformConstants as platformApiTypes } from '../../services/platform/platformConstants';\n\n/**\n * Modify actions' payload for privacy.\n *\n * @param {object} action\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeActionHeaders = ({ payload, ...action }) => {\n  if (payload) {\n    let updatedPayload = { ...payload, headers: {} };\n\n    if (Array.isArray(payload)) {\n      updatedPayload = payload.map(({ headers, ...obj }) => ({ ...obj, headers: {} }));\n    }\n\n    return { payload: updatedPayload, ...action };\n  }\n\n  return { ...action };\n};\n\n/**\n * Modify actions' payload data for privacy.\n *\n * @param {object} action\n * @param {string} action.type\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeData = ({ type, payload, ...action }) => {\n  const removeUserIdentity = obj => {\n    if (obj?.data?.user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]) {\n      return {\n        ...obj,\n        data: {\n          ...obj.data,\n          user: {\n            ...obj.data.user,\n            [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]: {\n              ...obj.data.user[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY],\n              [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]: {}\n            }\n          }\n        }\n      };\n    }\n\n    return undefined;\n  };\n\n  const updatedPayload = removeUserIdentity(payload) || payload;\n  const updatedAction = removeUserIdentity(action) || action;\n\n  if (updatedPayload) {\n    return { type, payload: updatedPayload, ...updatedAction };\n  }\n\n  return { type, ...updatedAction };\n};\n\n/**\n * Return existing sessionStorage log.\n *\n * @param {string} id\n * @param {number} limit\n * @returns {Array}\n */\nconst getActions = (id, limit) => {\n  const { sessionStorage } = window;\n  const item = sessionStorage.getItem(id);\n  let parsedItems = (item && (JSON.parse(item) || {})?.actions) || [];\n\n  if (parsedItems?.length && limit > 0) {\n    parsedItems = parsedItems.slice(limit * -1);\n  }\n\n  return parsedItems;\n};\n\n/**\n * Store actions against an id in sessionStorage.\n *\n * @param {object} action\n * @param {object} config\n * @param {number} config.id\n * @param {number} config.limit\n */\nconst recordAction = (action, { id, limit, ...config }) => {\n  const { navigator, sessionStorage } = window;\n  const items = getActions(id, limit) || [];\n  const priorItem = items[items.length - 1];\n  const updatedAction = sanitizeData(sanitizeActionHeaders(action));\n  const actionObj = {\n    diff: 0,\n    timestamp: Date.now(),\n    action: updatedAction\n  };\n\n  if (priorItem && priorItem.timestamp) {\n    actionObj.diff = actionObj.timestamp - priorItem.timestamp;\n  }\n\n  items.push(actionObj);\n  sessionStorage.setItem(\n    id,\n    JSON.stringify({\n      browser: navigator.userAgent,\n      timestamp: new Date().toLocaleString(),\n      ...config,\n      actions: items\n    })\n  );\n};\n\n/**\n * Expose settings and record middleware.\n *\n * @param {object} config\n * @returns {Function}\n */\nconst actionRecordMiddleware =\n  (config = {}) =>\n  () =>\n  next =>\n  action => {\n    recordAction(action, {\n      id: 'actionRecordMiddleware/v1',\n      limit: 100,\n      ...config\n    });\n\n    return next(action);\n  };\n\nexport { actionRecordMiddleware as default, actionRecordMiddleware };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { multiActionMiddleware } from './multiActionMiddleware';\nimport { statusMiddleware } from './statusMiddleware';\nimport { actionRecordMiddleware } from './actionRecordMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  multiActionMiddleware,\n  promiseMiddleware,\n  actionRecordMiddleware({\n    id: process.env.REACT_APP_UI_LOGGER_ID,\n    app: { version: process.env.REACT_APP_UI_VERSION }\n  }),\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @property {string} statusSuffix\n * @property {string} rangeSuffix\n * @property {string} rangeFiller\n * @property {string} statusDelimiter\n * @property {boolean} statusRange\n * @property {boolean} dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","/**\n * Allow passing an array of actions for batch dispatch.\n *\n * @param {object} store\n * @returns {Function}\n */\nconst multiActionMiddleware = store => next => action =>\n  (Array.isArray(action) && action.map(a => store.dispatch(a))) || next(action);\n\nexport { multiActionMiddleware as default, multiActionMiddleware };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Create a Redux store.\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX };\n","const SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","const CLEAR_INVENTORY_GUESTS = 'CLEAR_INVENTORY_GUESTS';\nconst SET_INVENTORY_TAB = 'SET_INVENTORY_TAB';\n\n/**\n * Inventory action, reducer types.\n *\n * @type {{CLEAR_INVENTORY_GUESTS: string, SET_INVENTORY_TAB: string}}\n */\nconst inventoryTypes = {\n  CLEAR_INVENTORY_GUESTS,\n  SET_INVENTORY_TAB\n};\n\nexport { inventoryTypes as default, inventoryTypes, CLEAR_INVENTORY_GUESTS, SET_INVENTORY_TAB };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_GLOBAL_FILTER_HIDE = 'PLATFORM_GLOBAL_FILTER_HIDE';\nconst PLATFORM_INIT = 'PLATFORM_INIT';\nconst PLATFORM_APP_NAME = 'PLATFORM_APP_NAME';\nconst PLATFORM_ON_NAV = 'PLATFORM_ON_NAV';\nconst PLATFORM_SET_NAV = 'PLATFORM_SET_NAV';\nconst PLATFORM_USER_AUTH = 'PLATFORM_USER_AUTH';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_APP_NAME: string, PLATFORM_USER_AUTH: string, PLATFORM_GLOBAL_FILTER_HIDE: string,\n *     PLATFORM_INIT: string, PLATFORM_SET_NAV: string, PLATFORM_CLEAR_NOTIFICATIONS: string,\n *     PLATFORM_ADD_NOTIFICATION: string, PLATFORM_REMOVE_NOTIFICATION: string, PLATFORM_ON_NAV: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV,\n  PLATFORM_USER_AUTH\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV,\n  PLATFORM_USER_AUTH\n};\n","import { RHSM_API_QUERY_SET_TYPES as RHSM_API_QUERY_TYPES } from '../../services/rhsm/rhsmConstants';\n\nconst SET_QUERY = 'SET_QUERY';\nconst SET_QUERY_CLEAR = 'SET_QUERY_CLEAR';\nconst SET_QUERY_CLEAR_INVENTORY_LIST = 'SET_QUERY_CLEAR_INVENTORY_LIST';\nconst SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST = 'SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST';\nconst SET_QUERY_RESET_INVENTORY_LIST = 'SET_QUERY_RESET_INVENTORY_LIST';\n\n/**\n * Query types associated with across ALL queries.\n */\nconst SET_QUERY_RHSM_TYPES = {\n  [RHSM_API_QUERY_TYPES.BILLING_PROVIDER]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.BILLING_PROVIDER}`,\n  [RHSM_API_QUERY_TYPES.END_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.END_DATE}`,\n  [RHSM_API_QUERY_TYPES.GRANULARITY]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.GRANULARITY}`,\n  [RHSM_API_QUERY_TYPES.SLA]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.SLA}`,\n  [RHSM_API_QUERY_TYPES.START_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.START_DATE}`,\n  [RHSM_API_QUERY_TYPES.UOM]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.UOM}`,\n  [RHSM_API_QUERY_TYPES.USAGE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.USAGE}`\n};\n\n/**\n * Inventory query types associated with only GUESTS' queries.\n */\nconst SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_GUESTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_GUESTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Inventory query types associated with only HOSTS' and INSTANCES' queries.\n */\nconst SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DISPLAY_NAME}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Inventory query types associated with only SUBSCRIPTIONS' queries.\n */\nconst SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Query/filter reducer types.\n *\n * @type {{SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES: object, SET_QUERY_RHSM_TYPES: object,\n *     SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES: object, SET_QUERY_CLEAR: string, SET_QUERY_CLEAR_INVENTORY_LIST: string,\n *     SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES: object, SET_QUERY: string, SET_QUERY_RESET_INVENTORY_LIST: string,\n *     SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST: string}}\n */\nconst queryTypes = {\n  SET_QUERY,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n\nexport {\n  queryTypes as default,\n  queryTypes,\n  SET_QUERY,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n","const DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_LOCALE: string, GET_USER_OPTIN: string,\n *     UPDATE_USER_OPTIN: string, DELETE_USER_OPTIN: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { inventoryTypes } from './inventoryTypes';\nimport { platformTypes } from './platformTypes';\nimport { queryTypes } from './queryTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  inventory: inventoryTypes,\n  platform: platformTypes,\n  query: queryTypes,\n  rhsm: rhsmTypes,\n  toolbar: toolbarTypes,\n  user: userTypes\n};\n\nexport {\n  reduxTypes as default,\n  reduxTypes,\n  appTypes,\n  graphTypes,\n  inventoryTypes,\n  platformTypes,\n  queryTypes,\n  rhsmTypes,\n  toolbarTypes,\n  userTypes\n};\n","const SET_ACTIVE_FILTERS = 'SET_ACTIVE_FILTERS';\nconst SET_FILTER_TYPE = 'SET_FILTER_TYPE';\n\n/**\n * Filter, toolbar reducer types.\n *\n * @type {{SET_FILTER_TYPE: string, SET_ACTIVE_FILTERS: string}}\n */\nconst toolbarTypes = {\n  SET_ACTIVE_FILTERS,\n  SET_FILTER_TYPE\n};\n\nexport { toolbarTypes as default, toolbarTypes, SET_ACTIVE_FILTERS, SET_FILTER_TYPE };\n","const GET_GRAPH_CAPACITY_RHSM = 'GET_GRAPH_CAPACITY_RHSM';\nconst GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst GET_GRAPH_TALLY_RHSM = 'GET_GRAPH_TALLY_RHSM';\nconst GET_HOSTS_INVENTORY_RHSM = 'GET_HOSTS_INVENTORY_RHSM';\nconst GET_HOSTS_INVENTORY_GUESTS_RHSM = 'GET_HOSTS_INVENTORY_GUESTS_RHSM';\nconst GET_INSTANCES_INVENTORY_RHSM = 'GET_INSTANCES_INVENTORY_RHSM';\nconst GET_MESSAGE_REPORTS_RHSM = 'GET_MESSAGE_REPORTS_RHSM';\nconst GET_SUBSCRIPTIONS_INVENTORY_RHSM = 'GET_SUBSCRIPTIONS_INVENTORY_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, GET_MESSAGE_REPORTS_RHSM: string, GET_HOSTS_INVENTORY_GUESTS_RHSM: string,\n *     GET_GRAPH_CAPACITY_RHSM: string, GET_SUBSCRIPTIONS_INVENTORY_RHSM: string, GET_HOSTS_INVENTORY_RHSM: string,\n *     GET_INSTANCES_INVENTORY_RHSM: string, GET_GRAPH_TALLY_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n","/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string, RESOURCE_DEFS: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\n// ToDo: clean up this app name piece, these facets come through the helpers and src/config/rbac.json\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES = {\n  SUBSCRIPTIONS: process.env.REACT_APP_UI_NAME\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES = {\n  ALL: '*'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES = {\n  ALL: '*',\n  READ: 'read',\n  WRITE: 'write'\n};\n\nconst platformConstants = {\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n\nexport {\n  platformConstants as default,\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n","/**\n * RHSM path IDs for product RHEL variants.\n *\n * @type {{RHEL_ARM: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string, RHEL_X86: string}}\n */\nconst RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES = {\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86'\n};\n\n/**\n * RHSM path IDs for product Satellite variants.\n *\n * @type {{SATELLITE_SERVER: string, SATELLITE_CAPSULE: string}}\n */\nconst RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES = {\n  SATELLITE_CAPSULE: 'Satellite Capsule',\n  SATELLITE_SERVER: 'Satellite Server'\n};\n\n/**\n * RHSM path IDs for products.\n *\n * @type {{RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string, RHODS: string, RHOSAK: string,\n *     RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string,\n *     RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string, RHEL_SERVER: string, RHEL_IBM_Z: string, RHACS: string,\n *     RHEL_IBM_POWER: string}}\n */\nconst RHSM_API_PATH_PRODUCT_TYPES = {\n  ...RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES,\n  ...RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHACS: 'rhacs',\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHODS: 'rhods',\n  RHOSAK: 'rhosak',\n  OPENSHIFT: 'OpenShift Container Platform',\n  OPENSHIFT_METRICS: 'OpenShift-metrics',\n  OPENSHIFT_DEDICATED_METRICS: 'OpenShift-dedicated-metrics',\n  SATELLITE: 'Satellite'\n};\n\n/**\n * RHSM path IDs for metrics.\n *\n * @type {{CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     TRANSFER_GIBIBYTES: string, CORE_SECONDS: string, STORAGE_GIBIBYTE_MONTHS: string}}\n */\nconst RHSM_API_PATH_METRIC_TYPES = {\n  CORES: 'Cores',\n  SOCKETS: 'Sockets',\n  CORE_SECONDS: 'Core-seconds',\n  INSTANCE_HOURS: 'Instance-hours',\n  STORAGE_GIBIBYTES: 'Storage-gibibytes',\n  STORAGE_GIBIBYTE_MONTHS: 'Storage-gibibyte-months',\n  TRANSFER_GIBIBYTES: 'Transfer-gibibytes'\n};\n\n/**\n * RHSM response data type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_DATA = 'data';\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * RHSM response general meta types.\n *\n * @type {{PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count',\n  PRODUCT: 'product'\n};\n\n/**\n * RHSM response errors type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERRORS = 'errors';\n\n/**\n * RHSM response errors types.\n *\n * @type {{CODE: string}}\n */\nconst RHSM_API_RESPONSE_ERRORS_TYPES = {\n  CODE: 'code'\n};\n\n/**\n * RHSM response error codes.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERRORS_CODE_TYPES = {\n  GENERIC: 'SUBSCRIPTIONS1003',\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM response Hosts DATA types.\n *\n * @type {{MEASUREMENT_TYPE: string, CORES: string, CORE_HOURS: string, HARDWARE_TYPE: string,\n *     SUBSCRIPTION_MANAGER_ID: string, INSTANCE_HOURS: string, SOCKETS: string, INVENTORY_ID: string, NUMBER_OF_GUESTS: string,\n *     DISPLAY_NAME: string, CLOUD_PROVIDER: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_HOSTS_DATA_TYPES = {\n  CORE_HOURS: 'core_hours',\n  CORES: 'cores',\n  CLOUD_PROVIDER: 'cloud_provider',\n  DISPLAY_NAME: 'display_name',\n  HARDWARE_TYPE: 'hardware_type',\n  INSTANCE_HOURS: 'instance_hours',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT_TYPE: 'measurement_type',\n  NUMBER_OF_GUESTS: 'number_of_guests',\n  SOCKETS: 'sockets',\n  SUBSCRIPTION_MANAGER_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response Hosts META types.\n *\n * @type {{PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_HOSTS_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES\n};\n\n/**\n * FixMe: Appears we combined future guests used with instances. Investigate moving \"INVENTORY_ID\" and \"SUBSCRIPTION_MANAGER_ID\".\n * They're current associated with \"hosts\" guests. Need to also determine if this is something that needs to be added to \"instances\"\n * or if keeping them added to guests only is enough.\n */\n/**\n * RHSM response Instance DATA types.\n *\n * @type {{MEASUREMENTS: string, BILLING_ACCOUNT_ID: string, SUBSCRIPTION_MANAGER_ID: string, INVENTORY_ID: string,\n *     NUMBER_OF_GUESTS: string, BILLING_PROVIDER: string, DISPLAY_NAME: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_DATA_TYPES = {\n  BILLING_PROVIDER: 'billing_provider',\n  BILLING_ACCOUNT_ID: 'billing_account_id',\n  DISPLAY_NAME: 'display_name',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENTS: 'measurements',\n  NUMBER_OF_GUESTS: 'number_of_guests',\n  SUBSCRIPTION_MANAGER_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response Instances META types.\n *\n * @type {{MEASUREMENTS: string, PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  MEASUREMENTS: 'measurements'\n};\n\n/**\n * RHSM response Subscriptions DATA types.\n *\n * @type {{BILLING_ACCOUNT_ID: string, QUANTITY: string, SUBSCRIPTION_MANAGER_ID: string, INVENTORY_ID: string,\n *     NUMBER_OF_GUESTS: string, HAS_INFINITE_QUANTITY: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string, DISPLAY_NAME: string, MEASUREMENTS: string, UOM: string, NEXT_EVENT_DATE: string,\n *     BILLING_PROVIDER: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES = {\n  ...RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  HAS_INFINITE_QUANTITY: 'has_infinite_quantity',\n  NEXT_EVENT_DATE: 'next_event_date',\n  PRODUCT_NAME: 'product_name',\n  QUANTITY: 'quantity',\n  SERVICE_LEVEL: 'service_level',\n  TOTAL_CAPACITY: 'total_capacity',\n  UOM: 'uom'\n};\n\n/**\n * RHSM response Subscriptions META types.\n *\n * @type {{PRODUCT: string, SUBSCRIPTION_TYPE: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  SUBSCRIPTION_TYPE: 'subscription_type'\n};\n\n/**\n * RHSM response Tally DATA types.\n *\n * @type {{DATE: string, HAS_DATA: string, VALUE: string, HAS_INFINITE_QUANTITY: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES = {\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_DATA: 'has_data',\n  HAS_INFINITE_QUANTITY: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response Tally META types.\n *\n * @type {{TOTAL_MONTHLY: string, DATE: string, PRODUCT: string, HAS_CLOUDIGRADE_DATA: string,\n *     HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string, METRIC_ID: string, COUNT: string, VALUE: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_CLOUDIGRADE_DATA: 'has_cloudigrade_data',\n  HAS_CLOUDIGRADE_MISMATCH: 'has_cloudigrade_mismatch',\n  HAS_DATA: 'has_data',\n  METRIC_ID: 'metric_id',\n  TOTAL_MONTHLY: 'total_monthly'\n};\n\n/**\n * RHSM response, query parameters for GRANULARITY.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_RESPONSE_GRANULARITY_TYPES = {\n  DAILY: 'Daily',\n  WEEKLY: 'Weekly',\n  MONTHLY: 'Monthly',\n  QUARTERLY: 'Quarterly'\n};\n\n/**\n * ToDo: Activate available provider type as it becomes available 202205\n * (just uncomment)\n */\n/**\n * RHSM response, query parameters for BILLING_PROVIDER\n *\n * @type {{AZURE: string, GCP: string, RED_HAT: string, NONE: string, AWS: string, ORACLE: string}}\n */\nconst RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES = {\n  RED_HAT: 'red hat',\n  AWS: 'aws'\n  // GCP: 'gcp',\n  // AZURE: 'azure',\n  // ORACLE: 'oracle',\n  // NONE: ''\n};\n\n/**\n * RHSM response, query parameters for SLA.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_RESPONSE_SLA_TYPES = {\n  PREMIUM: 'Premium',\n  STANDARD: 'Standard',\n  SELF: 'Self-Support',\n  NONE: ''\n};\n\n/**\n * RHSM response, general parameters for subscription types\n *\n * @type {{ANNUAL: string, ON_DEMAND: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTION_TYPES = {\n  ANNUAL: 'Annual',\n  ON_DEMAND: 'On-demand'\n};\n\n/**\n * RHSM response, query parameters for UOM.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_RESPONSE_UOM_TYPES = {\n  CORES: 'cores',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM response, query parameters for USAGE.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_RESPONSE_USAGE_TYPES = {\n  PRODUCTION: 'Production',\n  DEVELOPMENT: 'Development/Test',\n  DISASTER: 'Disaster Recovery',\n  UNSPECIFIED: ''\n};\n\n/**\n * RHSM query/search parameter CATEGORY type values for TALLY/CAPACITY.\n *\n * @type {{CLOUD: string, PHYSICAL: string, HYPERVISOR: string, VIRTUAL: string}}\n */\nconst RHSM_API_QUERY_CATEGORY_TYPES = {\n  CLOUD: 'cloud',\n  HYPERVISOR: 'hypervisor',\n  PHYSICAL: 'physical',\n  VIRTUAL: 'virtual'\n};\n\nconst RHSM_API_QUERY_GRANULARITY_TYPES = RHSM_API_RESPONSE_GRANULARITY_TYPES;\n\n/**\n * ToDo: Remove RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES once hosts is fully deprecated\n * These sort params are focused on the hosts api.\n */\n/**\n * RHSM API query/search parameter SORT type values for HOSTS.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, INSTANCE_HOURS: string, SOCKETS: string, MEASUREMENT: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES = {\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  HARDWARE: 'hardware_type',\n  INSTANCE_HOURS: 'instance_hours',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for general inventory displays.\n *\n * @type {{CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string, TRANSFER_GIBIBYTES: string,\n *     BILLING_PROVIDER: string, CORE_SECONDS: string, STORAGE_GIBIBYTE_MONTHS: string, LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_TYPES = {\n  ...RHSM_API_PATH_METRIC_TYPES,\n  BILLING_PROVIDER: 'billing_provider',\n  LAST_SEEN: 'last_seen',\n  NAME: 'display_name'\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES = {\n  ASCENDING: 'asc',\n  DESCENDING: 'desc'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for SUBSCRIPTIONS.\n *\n * @type {{QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string, NEXT_EVENT_DATE: string,\n *     TOTAL_CAPACITY: string, PRODUCT_NAME: string, SKU: string, SERVICE_LEVEL: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES = {\n  NEXT_EVENT_DATE: 'next_event_date',\n  NEXT_EVENT_TYPE: 'next_event_type',\n  PRODUCT_NAME: 'product_name',\n  QUANTITY: 'quantity',\n  SKU: 'sku',\n  SERVICE_LEVEL: 'service_level',\n  TOTAL_CAPACITY: 'total_capacity',\n  USAGE: 'usage'\n};\n\nconst RHSM_API_QUERY_BILLING_PROVIDER_TYPES = RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES;\n\nconst RHSM_API_QUERY_SLA_TYPES = RHSM_API_RESPONSE_SLA_TYPES;\n\nconst RHSM_API_QUERY_UOM_TYPES = RHSM_API_RESPONSE_UOM_TYPES;\n\nconst RHSM_API_QUERY_USAGE_TYPES = RHSM_API_RESPONSE_USAGE_TYPES;\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{BILLING_ACCOUNT_ID: string, DIRECTION: string, END_DATE: string, SLA: string, LIMIT: string,\n *     START_DATE: string, VARIANT: string, DISPLAY_NAME: string, UOM: string, USAGE: string, CATEGORY: string,\n *     ARCHITECTURE: string, SORT: string, OFFSET: string, BILLING_PROVIDER: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  ARCHITECTURE: 'architecture',\n  BILLING_PROVIDER: 'billing_provider',\n  BILLING_ACCOUNT_ID: 'billing_account_id',\n  CATEGORY: 'category',\n  DIRECTION: 'dir',\n  DISPLAY_NAME: 'display_name_contains',\n  END_DATE: 'ending',\n  LIMIT: 'limit',\n  OFFSET: 'offset',\n  SLA: 'sla',\n  SORT: 'sort',\n  START_DATE: 'beginning',\n  UOM: 'uom',\n  USAGE: 'usage',\n  VARIANT: 'variant'\n};\n\n/**\n * RHSM query parameter options for TALLY, CAPACITY endpoints.\n *\n * @type {{GRANULARITY: string, USAGE: string, CATEGORY: string, END_DATE: string, SLA: string, START_DATE: string,\n *     BILLING_PROVIDER: string}}\n */\nconst RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES = {\n  ARCHITECTURE: 'architecture',\n  BILLING_PROVIDER: 'billing_provider',\n  CATEGORY: 'category',\n  END_DATE: 'ending',\n  GRANULARITY: 'granularity',\n  SLA: 'sla',\n  START_DATE: 'beginning',\n  USAGE: 'usage',\n  VARIANT: 'variant'\n};\n\n/**\n * Aggregate all query set types.\n *\n * @type {{UOM: string, GRANULARITY: string, USAGE: string, DIRECTION: string, SORT: string, END_DATE: string,\n *     OFFSET: string, SLA: string, LIMIT: string, START_DATE: string, DISPLAY_NAME: string}}\n */\nconst RHSM_API_QUERY_SET_TYPES = {\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES\n};\n\n/**\n * Product display types.\n *\n * @type {{LEGACY: string, DUAL_AXES: string, PARTIAL: string, HOURLY: string}}\n */\nconst RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES = {\n  DUAL_AXES: 'dual-axes',\n  HOURLY: 'hourly',\n  LEGACY: 'legacy',\n  PARTIAL: 'partial'\n};\n\n/**\n * RHSM constants.\n *\n * @type {{RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES: {GRANULARITY: string, USAGE: string, CATEGORY: string, END_DATE: string, SLA: string,\n *     START_DATE: string, BILLING_PROVIDER: string}, RHSM_API_RESPONSE_DATA: string,\n *     RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES: {PRODUCT: string, SUBSCRIPTION_TYPE: string, COUNT: string},\n *     RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES: {SATELLITE_SERVER: string, SATELLITE_CAPSULE: string},\n *     RHSM_API_PATH_METRIC_TYPES: {CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string, TRANSFER_GIBIBYTES: string,\n *     CORE_SECONDS: string, STORAGE_GIBIBYTE_MONTHS: string}, RHSM_API_RESPONSE_INSTANCES_META_TYPES: {MEASUREMENTS: string, PRODUCT: string,\n *     COUNT: string}, RHSM_API_RESPONSE_INSTANCES_DATA_TYPES: {MEASUREMENTS: string, BILLING_ACCOUNT_ID: string, SUBSCRIPTION_MANAGER_ID: string,\n *     INVENTORY_ID: string, NUMBER_OF_GUESTS: string, BILLING_PROVIDER: string, DISPLAY_NAME: string, LAST_SEEN: string},\n *     RHSM_API_RESPONSE_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES: {RHEL_ARM: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string, RHEL_X86: string},\n *     RHSM_API_RESPONSE_HOSTS_META_TYPES: {PRODUCT: string, COUNT: string}, RHSM_API_RESPONSE_META_TYPES: {PRODUCT: string, COUNT: string},\n *     RHSM_API_RESPONSE_ERRORS_CODE_TYPES: {GENERIC: string, OPTIN: string}, RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string,\n *     QUARTERLY: string, DAILY: string, MONTHLY: string}, RHSM_API_RESPONSE_UOM_TYPES: {CORES: string, SOCKETS: string},\n *     RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES: {BILLING_ACCOUNT_ID: string, QUANTITY: string, SUBSCRIPTION_MANAGER_ID: string,\n *     INVENTORY_ID: string, NUMBER_OF_GUESTS: string, HAS_INFINITE_QUANTITY: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string, DISPLAY_NAME: string, MEASUREMENTS: string, UOM: string, NEXT_EVENT_DATE: string, BILLING_PROVIDER: string,\n *     LAST_SEEN: string}, RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES: {ASCENDING: string, DESCENDING: string},\n *     RHSM_API_RESPONSE_SUBSCRIPTION_TYPES: {ANNUAL: string, ON_DEMAND: string}, RHSM_API_QUERY_INVENTORY_SORT_TYPES: {CORES: string,\n *     STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string, TRANSFER_GIBIBYTES: string, BILLING_PROVIDER: string,\n *     CORE_SECONDS: string, STORAGE_GIBIBYTE_MONTHS: string, LAST_SEEN: string, NAME: string}, RHSM_API_PATH_PRODUCT_TYPES: {RHEL_ARM: string,\n *     OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string, RHODS: string, RHOSAK: string, RHEL_COMPUTE_NODE: string,\n *     RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, RHEL: string,\n *     SATELLITE_CAPSULE: string, RHEL_SERVER: string, RHEL_IBM_Z: string, RHACS: string, RHEL_IBM_POWER: string},\n *     RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES: {AZURE: string, GCP: string, RED_HAT: string, NONE: string, AWS: string, ORACLE: string},\n *     RHSM_API_RESPONSE_ERRORS_TYPES: {CODE: string}, RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES: {DATE: string, HAS_DATA: string,\n *     VALUE: string, HAS_INFINITE_QUANTITY: string}, RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES: {TOTAL_MONTHLY: string, DATE: string,\n *     PRODUCT: string, HAS_CLOUDIGRADE_DATA: string, HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string, METRIC_ID: string, COUNT: string,\n *     VALUE: string}, RHSM_API_QUERY_BILLING_PROVIDER_TYPES: {AZURE: string, GCP: string, RED_HAT: string, NONE: string, AWS: string,\n *     ORACLE: string}, RHSM_API_QUERY_CATEGORY_TYPES: {CLOUD: string, PHYSICAL: string, HYPERVISOR: string, VIRTUAL: string},\n *     RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string},\n *     RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_QUERY_SET_INVENTORY_TYPES: {BILLING_ACCOUNT_ID: string, DIRECTION: string, END_DATE: string, SLA: string, LIMIT: string,\n *     START_DATE: string, VARIANT: string, DISPLAY_NAME: string, UOM: string, USAGE: string, CATEGORY: string, ARCHITECTURE: string,\n *     SORT: string, OFFSET: string, BILLING_PROVIDER: string}, RHSM_API_RESPONSE_HOSTS_DATA_TYPES: {MEASUREMENT_TYPE: string, CORES: string,\n *     CORE_HOURS: string, HARDWARE_TYPE: string, SUBSCRIPTION_MANAGER_ID: string, INSTANCE_HOURS: string, SOCKETS: string,\n *     INVENTORY_ID: string, NUMBER_OF_GUESTS: string, DISPLAY_NAME: string, CLOUD_PROVIDER: string, LAST_SEEN: string},\n *     RHSM_API_RESPONSE_ERRORS: string, RHSM_API_QUERY_UOM_TYPES: {CORES: string, SOCKETS: string}, RHSM_API_RESPONSE_META: string,\n *     RHSM_API_RESPONSE_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string},\n *     RHSM_API_QUERY_SET_TYPES: {UOM: string, GRANULARITY: string, USAGE: string, DIRECTION: string, SORT: string, END_DATE: string,\n *     OFFSET: string, SLA: string, LIMIT: string, START_DATE: string, DISPLAY_NAME: string},\n *     RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES: {QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string, NEXT_EVENT_DATE: string,\n *     TOTAL_CAPACITY: string, PRODUCT_NAME: string, SKU: string, SERVICE_LEVEL: string}, RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES: {LEGACY: string,\n *     DUAL_AXES: string, PARTIAL: string, HOURLY: string}, RHSM_API_RESPONSE_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string,\n *     DEVELOPMENT: string, PRODUCTION: string}, RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string,\n *     INSTANCE_HOURS: string, SOCKETS: string, MEASUREMENT: string, LAST_SEEN: string, NAME: string}}}\n */\nconst rhsmConstants = {\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_ERRORS,\n  RHSM_API_RESPONSE_ERRORS_TYPES,\n  RHSM_API_RESPONSE_ERRORS_CODE_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES,\n  RHSM_API_RESPONSE_HOSTS_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTION_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_BILLING_PROVIDER_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES\n};\n\nexport {\n  rhsmConstants as default,\n  rhsmConstants,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_ERRORS,\n  RHSM_API_RESPONSE_ERRORS_TYPES,\n  RHSM_API_RESPONSE_ERRORS_CODE_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES,\n  RHSM_API_RESPONSE_HOSTS_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTION_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_BILLING_PROVIDER_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES\n};\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var map = {\n\t\"./authentication/authentication.js\": [\n\t\t67719\n\t],\n\t\"./authentication/authenticationContext.js\": [\n\t\t98944\n\t],\n\t\"./bannerMessages/bannerMessages.js\": [\n\t\t87585,\n\t\t1858,\n\t\t7585\n\t],\n\t\"./bannerMessages/bannerMessagesContext.js\": [\n\t\t31824,\n\t\t1858,\n\t\t1824\n\t],\n\t\"./chart/chart.js\": [\n\t\t60930\n\t],\n\t\"./chart/chartAxisLabel.js\": [\n\t\t76395\n\t],\n\t\"./chart/chartContext.js\": [\n\t\t98326\n\t],\n\t\"./chart/chartElements.js\": [\n\t\t54096\n\t],\n\t\"./chart/chartHelpers.js\": [\n\t\t61026\n\t],\n\t\"./chart/chartIcon.js\": [\n\t\t1138\n\t],\n\t\"./chart/chartLegend.js\": [\n\t\t52902\n\t],\n\t\"./chart/chartTooltip.js\": [\n\t\t78213\n\t],\n\t\"./form/checkbox.js\": [\n\t\t34467,\n\t\t4291,\n\t\t7235,\n\t\t2181,\n\t\t1302\n\t],\n\t\"./form/formHelpers.js\": [\n\t\t44044,\n\t\t4044\n\t],\n\t\"./form/formState.js\": [\n\t\t90384,\n\t\t384\n\t],\n\t\"./form/select.js\": [\n\t\t49844\n\t],\n\t\"./form/textInput.js\": [\n\t\t18710,\n\t\t8710\n\t],\n\t\"./graphCard/graphCard.js\": [\n\t\t10608,\n\t\t1858,\n\t\t136,\n\t\t1799,\n\t\t608\n\t],\n\t\"./graphCard/graphCardChart.js\": [\n\t\t91799,\n\t\t1858,\n\t\t136,\n\t\t1799,\n\t\t1339\n\t],\n\t\"./graphCard/graphCardChartLegend.js\": [\n\t\t64418,\n\t\t1858,\n\t\t136,\n\t\t4418\n\t],\n\t\"./graphCard/graphCardChartTitleTooltip.js\": [\n\t\t99171,\n\t\t1858,\n\t\t136,\n\t\t939\n\t],\n\t\"./graphCard/graphCardChartTooltip.js\": [\n\t\t44024,\n\t\t1858,\n\t\t4024\n\t],\n\t\"./graphCard/graphCardContext.js\": [\n\t\t25394,\n\t\t1858,\n\t\t136,\n\t\t5394\n\t],\n\t\"./graphCard/graphCardHelpers.js\": [\n\t\t78139\n\t],\n\t\"./graphCard/graphCardMetricTotals.js\": [\n\t\t29407,\n\t\t1858,\n\t\t136,\n\t\t9407\n\t],\n\t\"./i18n/i18n.js\": [\n\t\t83109\n\t],\n\t\"./i18n/i18nHelpers.js\": [\n\t\t32643\n\t],\n\t\"./inventoryCard/inventoryCard.js\": [\n\t\t57276,\n\t\t1858,\n\t\t5242,\n\t\t7276,\n\t\t8905\n\t],\n\t\"./inventoryCard/inventoryCardContext.js\": [\n\t\t42896,\n\t\t1858,\n\t\t2896\n\t],\n\t\"./inventoryCard/inventoryCardHelpers.js\": [\n\t\t12243,\n\t\t2243\n\t],\n\t\"./inventoryCard/inventoryCardHosts.js\": [\n\t\t83341,\n\t\t1858,\n\t\t5242,\n\t\t7276,\n\t\t7864\n\t],\n\t\"./inventoryCardSubscriptions/inventoryCardSubscriptions.js\": [\n\t\t16696,\n\t\t1858,\n\t\t5242,\n\t\t7276,\n\t\t9222\n\t],\n\t\"./inventoryCardSubscriptions/inventoryCardSubscriptionsContext.js\": [\n\t\t62881,\n\t\t1858,\n\t\t2881\n\t],\n\t\"./inventoryGuests/inventoryGuests.js\": [\n\t\t15242,\n\t\t1858,\n\t\t5242,\n\t\t7297\n\t],\n\t\"./inventoryGuests/inventoryGuestsContext.js\": [\n\t\t32293,\n\t\t1858,\n\t\t2293\n\t],\n\t\"./inventoryTabs/inventoryTab.js\": [\n\t\t80931,\n\t\t931\n\t],\n\t\"./inventoryTabs/inventoryTabs.js\": [\n\t\t69051,\n\t\t9051\n\t],\n\t\"./loader/loader.js\": [\n\t\t1797\n\t],\n\t\"./messageView/messageView.js\": [\n\t\t79719\n\t],\n\t\"./minHeight/minHeight.js\": [\n\t\t91339,\n\t\t353\n\t],\n\t\"./optinView/optinView.js\": [\n\t\t649,\n\t\t4311\n\t],\n\t\"./pageLayout/pageColumns.js\": [\n\t\t5937\n\t],\n\t\"./pageLayout/pageHeader.js\": [\n\t\t58816\n\t],\n\t\"./pageLayout/pageLayout.js\": [\n\t\t52422\n\t],\n\t\"./pageLayout/pageMessages.js\": [\n\t\t54803\n\t],\n\t\"./pageLayout/pageSection.js\": [\n\t\t99781\n\t],\n\t\"./pageLayout/pageToolbar.js\": [\n\t\t89484\n\t],\n\t\"./pagination/pagination.js\": [\n\t\t68900,\n\t\t8900\n\t],\n\t\"./pagination/paginationHelpers.js\": [\n\t\t65020,\n\t\t5020\n\t],\n\t\"./productView/productView.js\": [\n\t\t29175,\n\t\t1858,\n\t\t136,\n\t\t5242,\n\t\t7276,\n\t\t1799,\n\t\t3557\n\t],\n\t\"./productView/productViewContext.js\": [\n\t\t51858,\n\t\t1858\n\t],\n\t\"./productView/productViewMissing.js\": [\n\t\t91233,\n\t\t1233\n\t],\n\t\"./router/index.js\": [\n\t\t94976\n\t],\n\t\"./router/redirect.js\": [\n\t\t57304\n\t],\n\t\"./router/router.js\": [\n\t\t27097\n\t],\n\t\"./router/routerContext.js\": [\n\t\t43301\n\t],\n\t\"./router/routerHelpers.js\": [\n\t\t97712\n\t],\n\t\"./table/table.js\": [\n\t\t78697\n\t],\n\t\"./table/tableEmpty.js\": [\n\t\t30817\n\t],\n\t\"./table/tableSkeleton.js\": [\n\t\t62540\n\t],\n\t\"./tabs/tabs.js\": [\n\t\t70031,\n\t\t31\n\t],\n\t\"./toolbar/toolbar.js\": [\n\t\t92227,\n\t\t1858,\n\t\t136,\n\t\t2227\n\t],\n\t\"./toolbar/toolbarContext.js\": [\n\t\t83280,\n\t\t1858,\n\t\t136,\n\t\t3280\n\t],\n\t\"./toolbar/toolbarFieldArchitecture.js\": [\n\t\t32948,\n\t\t1858,\n\t\t2948\n\t],\n\t\"./toolbar/toolbarFieldBillingProvider.js\": [\n\t\t31663,\n\t\t1858,\n\t\t1663\n\t],\n\t\"./toolbar/toolbarFieldCategory.js\": [\n\t\t93597,\n\t\t1858,\n\t\t3597\n\t],\n\t\"./toolbar/toolbarFieldDisplayName.js\": [\n\t\t89517,\n\t\t1858,\n\t\t9517\n\t],\n\t\"./toolbar/toolbarFieldGranularity.js\": [\n\t\t2738,\n\t\t1858,\n\t\t2738\n\t],\n\t\"./toolbar/toolbarFieldRangedMonthly.js\": [\n\t\t65876,\n\t\t1858,\n\t\t5876\n\t],\n\t\"./toolbar/toolbarFieldSelectCategory.js\": [\n\t\t70136,\n\t\t1858,\n\t\t136\n\t],\n\t\"./toolbar/toolbarFieldSla.js\": [\n\t\t33267,\n\t\t1858,\n\t\t3267\n\t],\n\t\"./toolbar/toolbarFieldUom.js\": [\n\t\t74097,\n\t\t1858,\n\t\t4097\n\t],\n\t\"./toolbar/toolbarFieldUsage.js\": [\n\t\t49928,\n\t\t1858,\n\t\t9928\n\t],\n\t\"./toolbar/toolbarFieldVariant.js\": [\n\t\t22622,\n\t\t1858,\n\t\t2622\n\t],\n\t\"./tooltip/tooltip.js\": [\n\t\t3969\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 58908;\nmodule.exports = webpackAsyncContext;"],"names":["module","exports","App","getLocale","useAliasDispatch","useDispatch","useAliasSelector","useSelector","dispatch","locale","user","data","value","platformNotifications","useMount","helpers","NotificationsPortal","I18n","Router","defaultProps","reduxActions","storeHooks","noop","Function","prototype","noopPromise","Promise","resolve","PROD_MODE","process","UI_WINDOW_ID","aggregatedError","errors","message","err","name","window","AggregateError","Error","Array","isArray","isEmulated","browserExpose","obj","options","limit","id","generateHash","anyValue","method","cryptoSha1","JSON","stringify","_isPlainObject","Object","entries","sort","a","b","localeCompare","key","toString","generateId","prefix","Math","ceil","random","isDate","date","call","isPromise","test","noopTranslate","components","updatedKey","updatedValue","keys","length","updatedComponents","numberDisplay","Number","isNaN","numbro","DEV_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_NOTIFICATIONS","UI_DISABLED_TABLE","UI_DISABLED_TABLE_HOSTS","UI_DISABLED_TABLE_INSTANCES","UI_DISABLED_TABLE_SUBSCRIPTIONS","UI_DISABLED_TOOLBAR","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LINK_CONTACT_US","UI_LINK_LEARN_MORE","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","UI_LOCALE_DEFAULT","UI_LOCALE_DEFAULT_DESC","UI_LOGGER_ID","UI_LOGGER_FILE","UI_NAME","UI_PATH","UI_VERSION","getCurrentDate","moment","toDate","REACT_APP_DEBUG_DEFAULT_DATETIME","setRangedDateTime","subtract","measurement","endOfMeasurement","startDate","startOf","endDate","endOf","currentDateTime","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","rangedYearDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedMonthDateTime","month","currentYear","parseInt","year","keyDateTimeRanges","listDateTimeRanges","startDateUpdated","endDateUpdated","format","dateTime","titleYear","title","titleIndex","isNextYear","_title","toLowerCase","add","translate","context","push","reverse","isCurrent","current","undefined","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats","timestampTimeFormats","timeLong","yearTimeLong","timeShort","yearTimeShort","timestampUTCTimeFormats","downloadData","fileName","fileType","reject","document","navigator","URL","blob","Blob","type","msSaveBlob","anchorTag","createElement","href","createObjectURL","style","display","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","error","debugLog","sessionStorage","replace","parse","getItem","Authentication","appName","children","isDisabled","t","useAliasGetAuthorization","useGetAuthorization","pending","authorized","errorCodes","errorStatus","isAuthorized","AuthenticationContext","description","pageTitle","icon","BinocularsIcon","includes","rhsmConstants","Redirect","route","routerHelpers","serviceName","DEFAULT_CONTEXT","React","useAuthContext","useContext","authorizeUser","hideGlobalFilter","initializeChrome","onNavigation","setAppName","useHistory","useAliasHistory","routerHooks","useSelectorsResponse","useAliasSelectorsResponse","useState","unregister","setUnregister","history","selector","auth","fulfilled","responses","event","navId","useUnmount","app","status","useSession","useAliasAuthContext","session","Chart","chartLegend","chartTooltip","dataSets","padding","themeColor","xAxisChartLabel","yAxisChartLabel","xAxisFixLabelOverlap","xAxisLabelIncrement","xAxisTickFormat","yAxisTickFormat","xValueFormat","yValueFormat","setContext","dataSetsToggle","setDataSetsToggle","containerRef","useRef","tooltipRef","chartWidth","target","width","height","dimensions","setDimensions","useEffect","isElementResize","ResizeObserver","element","removeObserver","handler","clientHeight","clientWidth","innerHeight","innerWidth","resizeObserver","observe","unobserve","addEventListener","removeEventListener","useResizeObserver","toggledDataSets","tooltipDataSetLookUp","maxX","maxY","individualMaxY","xAxisProps","yAxisProps","isMultiYAxis","chartElementsProps","domain","domainPadding","chartSettings","filter","chartHelpers","content","chartDomain","hasData","tickValues","bottom","left","right","top","updatedSettings","chartContainerRef","chartTooltipRef","ChartContext","className","ref","ChartElements","ChartLegend","chartAxisLabel","axis","index","x","y","text","xmlns","useChartContext","useToggleData","useAliasChartContext","contextDataSetsToggle","onHide","useCallback","prevState","onRevert","onToggle","updatedToggle","getIsToggled","chartElements","stackedChartElements","chartTypeDefaults","containerComponent","xAxis","yAxis","VictoryVoronoiCursorContainer","createContainer","TooltipLabelComponent","cursorDimension","voronoiDimension","labels","labelComponent","dx","dy","centerOffset","flyoutStyle","fill","stroke","voronoiPadding","values","mouseFollowTooltips","updatedXAxisProps","label","AxisLabelComponent","axisLabelComponent","C","animate","map","axisProps","updatedAxisProps","orientation","setChartElement","chartType","props","ChartTypeVariant","Component","component","elements","stackedElements","duration","ChartArea","onLoad","interpolation","ChartLine","ChartThreshold","area","line","threshold","generateMaxXY","individualDataSetsMaxY","combinedDataSetMaxX","combinedDataSetsMaxY","isStacked","forEach","max","dataSetMaxY","generateDomains","updatedChartDomain","updatedPadding","generatedDomain","floored","pow","floor","log10","generateElementsProps","chartTypeVariant","elementsById","stackedElementsById","dataSet","strokeDasharray","strokeWidth","dataColorStroke","chartElementProps","themeVariant","datum","xValue","yValue","isMultiAxis","updatedProps","generateTooltipData","itemsByKey","color","_cloneDeep","mockDatum","tooltip","generateXAxisProps","xAxisPropDefaults","reduce","acc","concat","tickFormat","tick","xAxisLabel","tickIndex","indexOf","previousItem","nextItem","item","generateYAxisProps","yAxisPropDefaults","tickLabels","updatedMaxY","generateAxisProps","xAxisDataSet","fixLabelOverlap","dependentAxis","showGrid","yAxisDataSets","yAxisUseDataSet","xAxisUseDataSet","slice","getSize","size","parseFloat","ChartIcon","symbol","svgProps","iconProps","fontProps","fontSize","emSvgSize","viewBox","role","x1","y1","x2","y2","EyeIcon","EyeSlashIcon","SquareIcon","setIcon","legendProps","chart","hide","revert","toggle","isToggled","marginLeft","marginRight","minChartWidth","getXCoordinate","tooltipWidth","minWidth","getYCoordinate","tooltipHeight","updatedMultiplier","heightMultiplier","tailPosition","containerBounds","querySelector","getBoundingClientRect","tooltipBounds","isOutsideGraphBottom","isOutsideGraphLeft","isOutsideGraphRight","isOutsideGraphTop","updatedClassName","SelectDirection","DropdownDirection","SelectPosition","DropdownPosition","Select","state","isExpanded","selected","selectField","onSelect","titleSelection","variant","updatedOptions","optionsIndex","findIndex","option","SelectVariant","updateSelected","opt","setState","mockUpdatedOptions","mockTarget","selectedIndex","checked","mockEvent","currentTarget","persist","expanded","this","formatOptions","prevProps","selectedOptions","_isEqual","domElement","dataAttributes","activateOptions","isSelected","convertedOption","textContent","_findIndex","find","activeOption","parentRef","setAttribute","ariaLabel","direction","isFlipEnabled","isToggleText","maxHeight","placeholder","position","toggleIcon","pfSelectOptions","menuAppendTo","selections","isOpen","placeholderText","btoa","down","generateChartIds","isCapacity","metric","productId","query","metricCategory","RHSM_API_QUERY_SET_TYPES","generateIsToolbarFilter","generateChartSettings","filters","settings","graphCardSettings","standaloneFiltersSettings","groupedFiltersSettings","isStandalone","actions","filterSettings","updatedChartType","isThreshold","baseFilterSettings","isToolbarFilter","chartColorGreenDark","metrics","updatedGroupedFiltersSettings","getChartXAxisLabelIncrement","getTooltipDate","momentDate","callback","previousDate","formattedDate","isNewYear","average","mantissa","trimMantissa","lowPrecision","toUpperCase","generateExtendedChartSettings","graphCardHelpers","fallbackLng","loadPath","initialized","setInitialized","i18next","XHR","use","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","e","EMPTY_CONTEXT","translateKey","emptyContextValue","updatedValues","updatedTranslateKey","splitContext","split","updatedContext","flat","lastContext","pop","join","i18nKey","translateComponent","withTranslation","i18n","displayName","i18nHelpers","Loader","skeletonProps","tableProps","SkeletonSize","TableSkeleton","PageLayout","PageHeader","MessageView","PageSection","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","EmptyStateBody","PageColumns","Flex","alignItems","sm","spaceItems","child","FlexItem","grow","productLabel","justifyContent","Button","isInline","ExternalLinkAltIcon","iconPosition","PageMessages","PageToolbar","default","hash","search","forcePath","isForced","routes","url","baseName","pathName","matchedRoutePath","path","matchedRoute","location","pathJoin","updatedRoutes","setUpdatedRoutes","redirectDefault","setRedirectDefault","activateOnErrorRoute","activateOnError","all","disabled","View","Route","exact","strict","render","routeProps","routeConfig","URLSearchParams","decodeURIComponent","parsedSearch","Set","param","v","updatedLocation","routeDetail","errorRoute","routeItem","RouterContext","results","redirect","fallback","Switch","to","useRouterContext","useRouteDetail","useAliasRouterContext","platformLandingRedirect","platformModalRedirect","dynamicBaseName","pathname","applicationName","dynamicBasePath","basePath","paths","updatedPath","from","hasLead","generateProductGroups","config","routesConfig","productGroups","pathParameter","productParameter","generateRoutes","getErrorRoute","getRouteConfigByPath","basePathDirs","str","configs","allConfigs","configsById","allConfigsById","findConfig","dir","configPath","aliases","configItem","updatedConfigItem","RegExp","decodedDir","decodeURI","firstMatch","getRouteConfig","navRouteItem","returnDefault","routeHref","viewParameter","importView","p","Table","isCollapsible","isSortable","sortBy","updatedColumnHeaders","updatedRows","onCollapse","fullWidth","cells","expandedContent","onSort","updatedIndex","i","column","header","setRowData","columnHeaders","rows","customizer","valueA","valueB","_isEqualWith","updatedSort","rowObj","parent","cell","columnHeader","sortActive","sortDirection","tempColumnHeader","transforms","sortable","SortByDirection","borders","isHeader","summary","pfTableProps","emptyTable","TableEmpty","SearchIcon","TableHeader","TableBody","Grid","GridItem","span","renderTable","tableHeading","colCount","colWidth","rowCount","updatedHeader","cellWidth","updatedRowCount","Tooltip","isNoWrap","distance","enableFlip","entryDelay","exitDelay","TooltipPosition","productGroup","RHSM_API_PATH_PRODUCT_TYPES","productDisplay","DISPLAY_TYPES","viewId","productArchitectures","RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES","RHSM_API_QUERY_UOM_TYPES","toISOString","graphTallyQuery","inventoryHostsQuery","INVENTORY_SORT_TYPES","SORT_DIRECTION_TYPES","inventorySubscriptionsQuery","SUBSCRIPTIONS_SORT_TYPES","initialGraphFilters","RHSM_API_PATH_METRIC_TYPES","chartColorBlueLight","chartColorBlueDark","CATEGORY_TYPES","chartColorCyanLight","chartColorCyanDark","chartColorPurpleLight","chartColorPurpleDark","chartColorOrangeLight","chartColorOrangeDark","initialGraphSettings","isDisabledLegendClick","initialGuestsFilters","inventoryId","inventory","lastSeen","DateFormat","initialInventoryFilters","INVENTORY_TYPES","numberOfGuests","updatedDisplayName","count","cloudProvider","measurementType","isWrappable","initialInventorySettings","initialSubscriptionsInventoryFilters","SUBSCRIPTIONS_INVENTORY_TYPES","uom","hasInfiniteQuantity","totalCapacity","nextEventDate","initialToolbarFilters","productContextFilterUom","initialOption","isOptional","isCardTitleDescription","displayContent","meta","totalMonthlyValue","total","coreHours","toFixed","instanceHours","RHSM_API_QUERY_INVENTORY_SORT_TYPES","RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES","provider","SUBSCRIPTIONS_INVENTORY_META_TYPES","subscriptionType","isSecondary","productVariants","RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES","rhelConfig","productConfig","isSearchable","openshiftContainerConfig","openshiftMetricsConfig","openshiftDedicatedConfig","rhacsConfig","rhodsConfig","rhosakConfig","satelliteProductConfig","isSetAppNav","useHistoryRRD","pathLocation","historyState","useLocation","useParams","useRouteMatch","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","setResponseSchemas","schemas","initialValue","schema","generated","getSingleResponseFromResultArray","updatedResults","payload","response","updatedResultsMessage","firstErrorResponse","_get","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","formattedStatus","trim","getDateFromResults","getStatusFromResults","setStateProp","prop","initialState","reset","console","warn","singlePromiseDataResponseFromArray","reduxHelpers","HTTP_STATUS_RANGE","setApiQuery","setNormalizedResponse","parsedResponses","customResponseEntry","customResponseValue","keyPrefix","keyCase","updatedData","generatedSchema","parsedResponse","dataObj","keyCaseType","customEntry","customValue","update","updatedDataObj","generatedData","casedDataObjKey","dataObjKey","dataObjValue","_camelCase","_snakeCase","val","isInteger","generatedPromiseActionReducer","types","action","expandedTypes","subVal","whichType","expandMetaTypes","updatedMeta","fromEntries","baseState","errorMessage","setId","errorResponse","cancelled","getDataFromResults","useSelectors","selectors","equality","shallowEqual","useReactReduxSelector","updatedSelectors","selectorIds","multiSelector","createSelector","listMultiSelectorResponse","undefinedMultiSelectorResponse","idMultiSelectorResponse","useAliasSelectors","customResponse","selectorResponse","isSelectorResponseArray","cancelledById","cancelledByList","cancelledDataById","cancelledDataByList","errorByList","errorById","errorDataById","errorDataByList","fulfilledByList","fulfilledById","fulfilledDataById","fulfilledDataByList","pendingByList","responsesById","responsesByList","dataById","dataByList","idList","updatedSelectorResponse","updatedResponse","isById","list","assign","reactReduxHooks","dispatchEvent","store","useSelectorsAllSettledResponse","baseResponse","useSelectorsAnyResponse","keyList","useSelectorsRaceResponse","reactRedux","camelCase","updatedObj","schemaResponse","casing","convert","validate","details","serviceHelpers","passDataToCallback","timeoutFunctionCancel","func","clearTimer","timeout","timer","_","updatedFunc","clearTimeout","execFunction","race","finally","globalXhrTimeout","globalCancelTokens","globalResponseCache","LruCache","ttl","updateAgeOnGet","axiosServiceCall","cancelledMessage","responseCache","xhrTimeout","updatedConfig","cache","cacheResponse","responseTransformers","axiosInstance","axios","cacheId","exposeCacheId","cancel","cancelTokensId","cancelId","params","CancelToken","cancelToken","token","cachedResponse","get","adapter","adapterConfig","transform","successTransform","errorTransform","transformers","interceptors","set","emulateCallback","isSuccess","emulatedResponse","Joi","JoiBase","JoiDate","userResponseSchema","object","identity","is_org_admin","boolean","unknown","entitlements","is_entitled","permissionsItem","permission","string","optional","allow","resourceDefinitions","array","permissionsResponseSchema","items","platformSchemas","permissions","platformTransformers","platformConstants","isAdmin","isEntitled","rbacConfig","definitions","resource","operation","resources","RESOURCE_TYPES","OPERATION_TYPES","resourcePermissions","res","op","getUser","insights","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","isHidden","setAppNav","secondaryNav","appNavClick","parentId","platformServices","getUserPermissions","updatedAppName","platformMethod","USER_PERMISSION_TYPES","REACT_APP_DEBUG_PERMISSION_APP_ONE","REACT_APP_DEBUG_PERMISSION_APP_TWO","allPermissions","userPermissions","on","identifyApp","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","platformTypes","serviceConfig","passedConfig","headers","serviceCall","errorItem","code","detail","errorResponseSchema","linksSchema","metaResponseSchema","number","integer","product","valid","capacityMetaSchema","metric_id","capacityItem","utc","has_data","has_infinite_quantity","capacityResponseSchema","links","guestsMetaSchema","guestsItem","inventory_id","display_name","subscription_manager_id","last_seen","guestsResponseSchema","hostsMetaSchema","hostsItem","cloud_provider","lowercase","hardware_type","measurement_type","number_of_guests","hostsResponseSchema","instancesMetaSchema","measurements","instancesItem","category","billing_provider","billing_account_id","instancesResponseSchema","subscriptionsMetaSchema","subscription_type","subscriptionsItem","next_event_date","product_name","quantity","service_level","total_capacity","subscriptionsResponseSchema","tallyItem","tallyMetaSchema","has_cloudigrade_data","has_cloudigrade_mismatch","total_monthly","tallyResponseSchema","rhsmSchemas","capacity","guests","hosts","instances","subscriptions","tally","rhsmTransformers","HOSTS_DATA_TYPES","subscriptionManagerId","HOSTS_META_TYPES","metaMeasurements","INSTANCES_META_TYPES","INSTANCES_DATA_TYPES","tallyCapacity","_isCapacity","currentDate","currentDateStr","futureDateCount","TALLY_CAPACITY_DATA_TYPES","updatedDate","isCurrentDate","isFutureDate","diff","TALLY_CAPACITY_META_TYPES","cloudigradeHasMismatch","metricId","totalMonthlyDate","totalMonthlyHasData","rhsmHelpers","updatedId","rhsmServices","getApiVersion","getGraphCapacity","getGraphReports","getGraphTally","getHostsInventory","getHostsInventoryGuests","getInstancesInventory","getSubscriptionsInventory","rhsmActions","getGraphMetrics","idMetric","multiMetric","multiDispatch","metricQuery","methodService","methodType","rhsmTypes","methodCancelId","generatedId","notifications","getMessageReports","userServices","defaultLang","Cookies","cookieLang","LocaleCode","deleteAccountOptIn","getAccountOptIn","updateAccountOptIn","userActions","userTypes","rejected","dismissable","autoDismiss","platform","rhsm","legend","reportCapacity","graphReducer","graphTypes","hostsInventory","hostsGuests","instancesInventory","subscriptionsInventory","tabs","inventoryReducer","inventoryTypes","report","messagesReducer","toolbarReducer","reduxTypes","activeFilters","currentFilter","optin","userReducer","appTypes","actionStatus","inventoryGuestsQuery","viewReducer","updateResetQueries","queryIds","updatedQuery","queryId","productQuery","RHSM_API_QUERY_TYPES","updateClearQueries","updateClearGuestQuery","clearFilters","reducers","graph","messages","toolbar","view","reduxReducers","combineReducers","recordAction","parsedItems","getActions","priorItem","updatedAction","removeUserIdentity","platformApiTypes","updatedPayload","sanitizeData","sanitizeActionHeaders","actionObj","timestamp","Date","now","setItem","browser","userAgent","toLocaleString","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","next","httpStatus","payloadConfig","range","statusMiddleware","promiseMiddleware","actionRecordMiddleware","version","notificationsMiddleware","createStore","applyMiddleware","STATUS_4XX","STATUS_5XX","SET_GRAPH_LEGEND","CLEAR_INVENTORY_GUESTS","SET_INVENTORY_TAB","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_GLOBAL_FILTER_HIDE","PLATFORM_INIT","PLATFORM_APP_NAME","PLATFORM_ON_NAV","PLATFORM_SET_NAV","PLATFORM_USER_AUTH","queryTypes","SET_QUERY","SET_QUERY_CLEAR","SET_QUERY_CLEAR_INVENTORY_LIST","SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST","SET_QUERY_RESET_INVENTORY_LIST","SET_QUERY_RHSM_TYPES","SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_LOCALE","USER_LOGOUT","SET_ACTIVE_FILTERS","SET_FILTER_TYPE","GET_GRAPH_CAPACITY_RHSM","GET_GRAPH_REPORT_CAPACITY_RHSM","GET_GRAPH_TALLY_RHSM","GET_HOSTS_INVENTORY_RHSM","GET_HOSTS_INVENTORY_GUESTS_RHSM","GET_INSTANCES_INVENTORY_RHSM","GET_MESSAGE_REPORTS_RHSM","GET_SUBSCRIPTIONS_INVENTORY_RHSM","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","RESOURCE_DEFS","PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES","ALL","PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES","READ","WRITE","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES","SUBSCRIPTIONS","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","SATELLITE_CAPSULE","SATELLITE_SERVER","RHACS","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHODS","RHOSAK","OPENSHIFT","OPENSHIFT_METRICS","OPENSHIFT_DEDICATED_METRICS","SATELLITE","CORES","SOCKETS","CORE_SECONDS","INSTANCE_HOURS","STORAGE_GIBIBYTES","STORAGE_GIBIBYTE_MONTHS","TRANSFER_GIBIBYTES","RHSM_API_RESPONSE_META_TYPES","COUNT","PRODUCT","RHSM_API_RESPONSE_HOSTS_DATA_TYPES","CORE_HOURS","CLOUD_PROVIDER","DISPLAY_NAME","HARDWARE_TYPE","INVENTORY_ID","LAST_SEEN","MEASUREMENT_TYPE","NUMBER_OF_GUESTS","SUBSCRIPTION_MANAGER_ID","RHSM_API_RESPONSE_HOSTS_META_TYPES","RHSM_API_RESPONSE_INSTANCES_DATA_TYPES","BILLING_PROVIDER","BILLING_ACCOUNT_ID","MEASUREMENTS","RHSM_API_RESPONSE_INSTANCES_META_TYPES","RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES","HAS_INFINITE_QUANTITY","NEXT_EVENT_DATE","PRODUCT_NAME","QUANTITY","SERVICE_LEVEL","TOTAL_CAPACITY","UOM","RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES","SUBSCRIPTION_TYPE","RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES","DATE","VALUE","HAS_DATA","RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES","HAS_CLOUDIGRADE_DATA","HAS_CLOUDIGRADE_MISMATCH","METRIC_ID","TOTAL_MONTHLY","RHSM_API_RESPONSE_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES","RED_HAT","AWS","RHSM_API_RESPONSE_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","RHSM_API_RESPONSE_UOM_TYPES","RHSM_API_RESPONSE_USAGE_TYPES","PRODUCTION","DEVELOPMENT","DISASTER","UNSPECIFIED","RHSM_API_QUERY_CATEGORY_TYPES","CLOUD","HYPERVISOR","PHYSICAL","VIRTUAL","RHSM_API_QUERY_GRANULARITY_TYPES","RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES","HARDWARE","MEASUREMENT","NAME","RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES","ASCENDING","DESCENDING","NEXT_EVENT_TYPE","SKU","USAGE","RHSM_API_QUERY_BILLING_PROVIDER_TYPES","RHSM_API_QUERY_SLA_TYPES","RHSM_API_QUERY_USAGE_TYPES","RHSM_API_QUERY_SET_INVENTORY_TYPES","ARCHITECTURE","CATEGORY","DIRECTION","END_DATE","LIMIT","OFFSET","SLA","SORT","START_DATE","VARIANT","RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES","GRANULARITY","RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES","DUAL_AXES","HOURLY","LEGACY","PARTIAL","RHSM_API_RESPONSE_DATA","RHSM_API_RESPONSE_META","RHSM_API_RESPONSE_ERRORS","RHSM_API_RESPONSE_ERRORS_TYPES","CODE","RHSM_API_RESPONSE_ERRORS_CODE_TYPES","GENERIC","OPTIN","RHSM_API_RESPONSE_SUBSCRIPTION_TYPES","ANNUAL","ON_DEMAND","webpackContext","req","webpackContextResolve","__webpack_require__","o","webpackAsyncContext","then","ids"],"sourceRoot":""}
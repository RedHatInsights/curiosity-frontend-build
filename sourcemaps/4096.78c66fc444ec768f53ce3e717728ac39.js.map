{"version":3,"file":"js/4096.1649183165880.4ecaeb09dfee3e7574a9.js","mappings":"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","sources":["webpack:///./src/components/chart/chartAxisLabel.js","webpack:///./src/components/chart/chartContext.js","webpack:///./src/components/chart/chartElements.js","webpack:///./src/components/chart/chartTooltip.js"],"sourcesContent":["import React from 'react';\n\n/**\n * Note: Victory Charts components require a form of extended \"something\" applied by the consuming component.\n * This leads to odd implementations, like returning a function component.\n */\n/**\n * Return a compatible Victory tooltip component.\n *\n * @param {object} params\n * @param {string} params.axis\n * @param {number} params.index\n * @returns {Function}\n */\nconst chartAxisLabel =\n  ({ axis, index = 0 } = {}) =>\n  ({ x, y, text }) => // eslint-disable-line\n    (\n      <g>\n        <foreignObject x={0} y={0} width=\"100%\" height=\"100%\">\n          <div\n            className={`curiosity-chartarea__axis-label-container curiosity-chartarea__axis-label-container-${axis} curiosity-chartarea__axis-label-container-${axis}-${index}`}\n            style={{ top: `${y ?? 0}px` }}\n            xmlns=\"http://www.w3.org/1999/xhtml\"\n          >\n            <div className=\"curiosity-chartarea__axis-label-container-content\">{text}</div>\n          </div>\n        </foreignObject>\n      </g>\n    );\n\nexport { chartAxisLabel as default, chartAxisLabel };\n","import React, { useCallback, useContext } from 'react';\nimport { helpers } from '../../common';\n\n/**\n * Chart context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [\n  { chartContainerRef: helpers.noop, chartSettings: {}, chartTooltipRef: helpers.noop, dataSetsToggle: [] },\n  helpers.noop\n];\n\nconst ChartContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated chart context.\n *\n * @returns {React.Context<{}>}\n */\nconst useChartContext = () => useContext(ChartContext);\n\n/**\n * ToDo: reevaluate this alternative pattern of passing hooks as options, helps testing\n */\n/**\n * Track, show, and hide chart data layers.\n *\n * @param {object} options\n * @param {Function} options.useChartContext\n * @returns {{onRevert: Function, onToggle: Function, getIsToggled: Function, dataSetsToggle: object,\n *     onHide: Function}}\n */\nconst useToggleData = ({ useChartContext: useAliasChartContext = useChartContext } = {}) => {\n  const { dataSetsToggle: contextDataSetsToggle = [] } = useAliasChartContext();\n  const [dataSetsToggle, setDataSetsToggle] = contextDataSetsToggle;\n\n  /**\n   * Hide a graph layer.\n   *\n   * @type {(function(*): void)|*}\n   */\n  const onHide = useCallback(\n    id => {\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: true }));\n    },\n    [setDataSetsToggle]\n  );\n\n  // ToDo: re-evaluate useCallback here.\n  /**\n   * Reset graph layers.\n   *\n   * @type {(function(): void)|*}\n   */\n  const onRevert = useCallback(() => {\n    setDataSetsToggle(() => ({}));\n  }, [setDataSetsToggle]);\n\n  /**\n   * Hide/show graph layers.\n   *\n   * @type {function(*): boolean}\n   */\n  const onToggle = useCallback(\n    id => {\n      const updatedToggle = !dataSetsToggle?.[id];\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: updatedToggle }));\n      return updatedToggle;\n    },\n    [dataSetsToggle, setDataSetsToggle]\n  );\n\n  // ToDo: review return undefined if doesn't exist\n  /**\n   * Graph layer status.\n   *\n   * @type {function(*): boolean}\n   */\n  const getIsToggled = useCallback(id => dataSetsToggle?.[id] || false, [dataSetsToggle]);\n\n  return {\n    ...{ dataSetsToggle },\n    onHide,\n    onRevert,\n    onToggle,\n    getIsToggled\n  };\n};\n\nconst context = {\n  ChartContext,\n  DEFAULT_CONTEXT,\n  useChartContext,\n  useToggleData\n};\n\nexport { context as default, context, ChartContext, DEFAULT_CONTEXT, useChartContext, useToggleData };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VictoryStack as ChartStack, VictoryTooltip as ChartCursorTooltip } from 'victory';\nimport { createContainer } from 'victory-create-container';\nimport { Chart, ChartArea, ChartAxis, ChartContainer, ChartLine, ChartThreshold } from '@patternfly/react-charts';\nimport { useChartContext } from './chartContext';\nimport { chartTooltip } from './chartTooltip';\nimport { chartAxisLabel } from './chartAxisLabel';\n\n/**\n * Generate a compatible Victory chart element/facet component.\n *\n * @param {object} props\n * @param {object} props.chartTypeDefaults\n * @returns {Node}\n */\nconst ChartElements = ({ chartTypeDefaults }) => {\n  const { chartSettings = {}, chartContainerRef, chartTooltipRef } = useChartContext();\n  const {\n    chartDomain,\n    chartElementsProps,\n    chartWidth,\n    hasData,\n    padding,\n    themeColor,\n    xAxisProps = {},\n    yAxisProps = []\n  } = chartSettings;\n\n  let containerComponent = <ChartContainer />;\n  let xAxis = null;\n  let yAxis = null;\n  let chartElements = [];\n  let stackedChartElements = [];\n\n  if (hasData) {\n    /**\n     * Note: both cursor and voronoiDimension attrs required if the need is to have...\n     * the tooltip populate consistently without being \"near\" a chart element y axis point\n     */\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const TooltipLabelComponent = chartTooltip({ chartSettings, chartContainerRef, chartTooltipRef });\n\n    containerComponent = (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        voronoiDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={\n          <ChartCursorTooltip\n            dx={0}\n            dy={0}\n            centerOffset={{ x: 0, y: 0 }}\n            flyoutStyle={{ fill: 'transparent', stroke: 'transparent' }}\n            labelComponent={<TooltipLabelComponent />}\n          />\n        }\n        voronoiPadding={(padding && Object.values(padding).sort()?.[0]) || 0}\n        mouseFollowTooltips\n      />\n    );\n  }\n\n  /**\n   * Generate X Axis\n   */\n  if (Object.keys(xAxisProps).length) {\n    const updatedXAxisProps = {\n      ...xAxisProps\n    };\n\n    if (updatedXAxisProps.label) {\n      const AxisLabelComponent = chartAxisLabel({ axis: 'x' });\n      updatedXAxisProps.axisLabelComponent = <AxisLabelComponent />;\n    }\n\n    xAxis = <ChartAxis {...updatedXAxisProps} animate={false} />;\n  }\n\n  /**\n   * Generate Y Axis\n   */\n  if (Array.isArray(yAxisProps)) {\n    yAxis = yAxisProps.map((axisProps, index) => {\n      const updatedAxisProps = {\n        ...axisProps\n      };\n\n      if (updatedAxisProps.label) {\n        const AxisLabelComponent = chartAxisLabel({ axis: 'y', index });\n        updatedAxisProps.axisLabelComponent = <AxisLabelComponent />;\n      }\n\n      return <ChartAxis key={`yaxis-${axisProps.orientation}`} {...updatedAxisProps} animate={false} />;\n    });\n  }\n\n  const setChartElement = ({ chartType, props }) => {\n    const { component: Component, ...defaultProps } = chartTypeDefaults[chartType] || chartTypeDefaults.area;\n    return <Component {...{ ...defaultProps, ...props }} />;\n  };\n\n  chartElements = chartElementsProps?.elements.map(setChartElement);\n  stackedChartElements = chartElementsProps?.stackedElements.map(setChartElement);\n\n  return (\n    <Chart\n      animate={{ duration: 0 }}\n      width={chartWidth}\n      themeColor={themeColor}\n      {...{ padding, containerComponent, ...chartDomain }}\n    >\n      {xAxis}\n      {yAxis}\n      {chartElements}\n      <ChartStack>{stackedChartElements}</ChartStack>\n    </Chart>\n  );\n};\n\nChartElements.propTypes = {\n  chartTypeDefaults: PropTypes.objectOf(\n    PropTypes.shape({\n      component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      interpolation: PropTypes.oneOf(['monotoneX', 'step'])\n    })\n  )\n};\n\nChartElements.defaultProps = {\n  chartTypeDefaults: {\n    area: {\n      component: ChartArea,\n      animate: {\n        duration: 250,\n        onLoad: { duration: 250 }\n      },\n      interpolation: 'monotoneX'\n    },\n    line: {\n      component: ChartLine,\n      animate: {\n        duration: 250,\n        onLoad: { duration: 250 }\n      },\n      interpolation: 'monotoneX'\n    },\n    threshold: {\n      component: ChartThreshold,\n      animate: {\n        duration: 100,\n        onLoad: { duration: 100 }\n      },\n      interpolation: 'step'\n    }\n  }\n};\n\nexport { ChartElements as default, ChartElements };\n","import React from 'react';\nimport { helpers } from '../../common';\n\n/**\n * Note: Victory Charts components require a form of extended \"something\" applied by the consuming component.\n * This leads to odd implementations, like returning a function component.\n */\n/**\n * FixMe: The right graph boundary for tooltips is dependent on Voronoi container padding.\n * A limitation exists where Voronoi containers can only have a single padding setting. This means we use\n * the lowest number value from the \"padding\" setting. The repercussion is the right boundary either has to\n * be the lowest padding value, or equal to the lowest padding from any of the other dimensions, ie. top,\n * bottom, left.\n */\n/**\n * Return a compatible Victory tooltip component.\n *\n * @param {object} params\n * @param {object} params.chartSettings\n * @param {Function} params.chartContainerRef\n * @param {Function} params.chartTooltipRef\n * @param {number} params.minChartWidth\n * @returns {Function}\n */\nconst chartTooltip = ({\n  chartSettings = {},\n  chartContainerRef = helpers.noop,\n  chartTooltipRef = helpers.noop,\n  minChartWidth = 500\n} = {}) => {\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip x coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getXCoordinate = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return x + padding - tooltipWidth / 2;\n    }\n\n    return x > width / 2 ? x - tooltipWidth + padding : x + padding;\n  };\n\n  /**\n   * Return a tooltip y coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.y\n   * @param {number} params.height\n   * @param {number} params.tooltipHeight\n   * @param {number} params.width\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getYCoordinate = ({ y, height, tooltipHeight, width, padding = 15, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth) {\n      return y > height / 2 ? y - tooltipHeight - padding : y + padding;\n    }\n\n    return height * 0.25;\n  };\n\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip tail position CSS class.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const tailPosition = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return 'middle';\n    }\n\n    return x > width / 2 ? 'right' : 'left';\n  };\n\n  return ({ x, y, datum = {} }) => { // eslint-disable-line\n    const { padding = {}, tooltipDataSetLookUp = {} } = chartSettings;\n\n    const containerRef = chartContainerRef();\n    const tooltipRef = chartTooltipRef();\n    const updatedPadding = { bottom: 0, left: 0, right: 0, top: 0, ...padding };\n    const content = tooltipDataSetLookUp?.[datum.x]?.tooltip || '';\n    const containerBounds = containerRef?.current?.querySelector('svg')?.getBoundingClientRect() || {\n      width: 0,\n      height: 0\n    };\n\n    const tooltipBounds = tooltipRef?.current?.getBoundingClientRect() || { width: 0, height: 0 };\n\n    if (content) {\n      const isOutsideGraphBottom = y > containerBounds.height - updatedPadding.bottom;\n      const isOutsideGraphLeft = x < updatedPadding.left;\n      const isOutsideGraphRight = x > containerBounds.width - updatedPadding.right;\n      const isOutsideGraphTop = y < updatedPadding.top;\n      const updatedClassName = `${(tooltipBounds.height <= 0 && 'fadein') || ''}`;\n\n      return (\n        <g>\n          <foreignObject\n            x={getXCoordinate({ x, width: containerBounds.width, tooltipWidth: tooltipBounds.width })}\n            y={getYCoordinate({\n              y,\n              height: containerBounds.height,\n              tooltipHeight: tooltipBounds.height,\n              width: containerBounds.width\n            })}\n            width=\"100%\"\n            height=\"100%\"\n          >\n            <div\n              className={`curiosity-chartarea__tooltip-container ${updatedClassName}`}\n              ref={tooltipRef}\n              style={{\n                display:\n                  ((isOutsideGraphBottom || isOutsideGraphLeft || isOutsideGraphRight || isOutsideGraphTop) &&\n                    'none') ||\n                  'inline-block'\n              }}\n              xmlns=\"http://www.w3.org/1999/xhtml\"\n            >\n              <div\n                className={`curiosity-chartarea__tooltip curiosity-chartarea__tooltip-${tailPosition({\n                  x,\n                  y,\n                  width: containerBounds.width,\n                  tooltipWidth: tooltipBounds.width\n                })}`}\n              >\n                {content}\n              </div>\n            </div>\n          </foreignObject>\n        </g>\n      );\n    }\n\n    return <g />;\n  };\n};\n\nexport { chartTooltip as default, chartTooltip };\n"],"names":["chartAxisLabel","axis","index","x","y","text","width","height","className","style","top","xmlns","DEFAULT_CONTEXT","chartContainerRef","helpers","chartSettings","chartTooltipRef","dataSetsToggle","ChartContext","React","useChartContext","useContext","useToggleData","useAliasChartContext","contextDataSetsToggle","setDataSetsToggle","onHide","useCallback","id","prevState","onRevert","onToggle","updatedToggle","getIsToggled","context","ChartElements","chartElements","stackedChartElements","chartTypeDefaults","chartDomain","chartElementsProps","chartWidth","hasData","padding","themeColor","xAxisProps","yAxisProps","containerComponent","xAxis","yAxis","VictoryVoronoiCursorContainer","createContainer","TooltipLabelComponent","chartTooltip","cursorDimension","voronoiDimension","labels","obj","labelComponent","dx","dy","centerOffset","flyoutStyle","fill","stroke","voronoiPadding","Object","values","sort","mouseFollowTooltips","keys","length","updatedXAxisProps","label","AxisLabelComponent","axisLabelComponent","C","animate","Array","isArray","map","axisProps","updatedAxisProps","key","orientation","setChartElement","chartType","props","area","Component","component","defaultProps","elements","stackedElements","duration","ChartArea","onLoad","interpolation","line","ChartLine","threshold","ChartThreshold","minChartWidth","getXCoordinate","tooltipWidth","minWidth","getYCoordinate","tooltipHeight","tailPosition","datum","tooltipDataSetLookUp","containerRef","tooltipRef","updatedPadding","bottom","left","right","content","tooltip","containerBounds","current","querySelector","getBoundingClientRect","tooltipBounds","isOutsideGraphBottom","isOutsideGraphLeft","isOutsideGraphRight","isOutsideGraphTop","updatedClassName","ref","display"],"sourceRoot":""}
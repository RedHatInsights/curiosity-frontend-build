{"version":3,"file":"js/5724.595f2d4193a5bf3143e6.js","mappings":"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AO0U,KAAK3V,EACpB,EACAg2D,EAAel1D,QAAUo1D,EACzB74D,EAAOC,QAAU04D,EACjBA,EAAenzD,GAAK,K,wBCnSpB,IAAI7C,EAAM,CACT,qCAAsC,CACrC,OAED,4CAA6C,CAC5C,OAED,qCAAsC,CACrC,MACA,MAED,4CAA6C,CAC5C,MACA,MAED,mBAAoB,CACnB,OAED,4BAA6B,CAC5B,OAED,0BAA2B,CAC1B,OAED,2BAA4B,CAC3B,OAED,0BAA2B,CAC1B,OAED,uBAAwB,CACvB,MAED,yBAA0B,CACzB,OAED,0BAA2B,CAC1B,OAED,qBAAsB,CACrB,MACA,KACA,KACA,KACA,MAED,wBAAyB,CACxB,OAED,mBAAoB,CACnB,OAED,sBAAuB,CACtB,MACA,MAED,2BAA4B,CAC3B,MACA,KACA,IACA,KACA,KAED,gCAAiC,CAChC,MACA,KACA,IACA,MAED,sCAAuC,CACtC,MACA,KACA,IACA,MAED,4CAA6C,CAC5C,MACA,KACA,IACA,KAED,uCAAwC,CACvC,MACA,MAED,kCAAmC,CAClC,MACA,KACA,IACA,MAED,kCAAmC,CAClC,OAED,uCAAwC,CACvC,MACA,KACA,IACA,MAED,iBAAkB,CACjB,OAED,wBAAyB,CACxB,OAED,mCAAoC,CACnC,MACA,MAED,0CAA2C,CAC1C,MACA,MAED,qDAAsD,CACrD,MACA,KACA,IACA,KACA,MAED,4DAA6D,CAC5D,KACA,KACA,IACA,MAED,6DAA8D,CAC7D,MACA,KACA,IACA,KACA,KACA,MAED,oEAAqE,CACpE,MACA,KACA,IACA,KACA,MAED,uCAAwC,CACvC,MACA,KACA,IACA,MAED,8CAA+C,CAC9C,MACA,KACA,IACA,MAED,kCAAmC,CAClC,MACA,KAED,mCAAoC,CACnC,MACA,MAED,qBAAsB,CACrB,MAED,+BAAgC,CAC/B,OAED,2BAA4B,CAC3B,MACA,MAED,2BAA4B,CAC3B,KAED,8BAA+B,CAC9B,MAED,6BAA8B,CAC7B,OAED,6BAA8B,CAC7B,OAED,+BAAgC,CAC/B,OAED,8BAA+B,CAC9B,OAED,8BAA+B,CAC9B,OAED,6BAA8B,CAC7B,MACA,MAED,oCAAqC,CACpC,MACA,MAED,+BAAgC,CAC/B,MACA,KACA,IACA,KACA,KACA,KACA,KACA,MAED,sCAAuC,CACtC,MACA,MAED,sCAAuC,CACtC,MACA,MAED,oBAAqB,CACpB,OAED,qBAAsB,CACrB,OAED,4BAA6B,CAC5B,OAED,4BAA6B,CAC5B,OAED,mBAAoB,CACnB,OAED,wBAAyB,CACxB,OAED,0BAA2B,CAC1B,OAED,2BAA4B,CAC3B,OAED,iBAAkB,CACjB,MACA,IAED,uBAAwB,CACvB,MACA,KACA,IACA,KACA,MAED,8BAA+B,CAC9B,MACA,KACA,IACA,MAED,2CAA4C,CAC3C,MACA,MAED,oCAAqC,CACpC,MACA,MAED,uCAAwC,CACvC,MACA,MAED,uCAAwC,CACvC,KACA,MAED,wCAAyC,CACxC,MACA,MAED,yCAA0C,CACzC,MACA,MAED,0CAA2C,CAC1C,MACA,KACA,KAED,+BAAgC,CAC/B,MACA,MAED,+BAAgC,CAC/B,MACA,MAED,iCAAkC,CACjC,MACA,MAED,mCAAoC,CACnC,MACA,MAED,6BAA8B,CAC7B,MACA,KACA,MAED,uBAAwB,CACvB,OAGF,SAASq2D,EAAoBJ,GAC5B,IAAIE,EAAoBC,EAAEp2D,EAAKi2D,GAC9B,OAAOp1D,QAAQC,UAAUw1D,MAAK,WAC7B,IAAI1qD,EAAI,IAAIvJ,MAAM,uBAAyB4zD,EAAM,KAEjD,MADArqD,EAAEqyC,KAAO,mBACHryC,CACP,IAGD,IAAI2qD,EAAMv2D,EAAIi2D,GAAMpzD,EAAK0zD,EAAI,GAC7B,OAAO11D,QAAQ86C,IAAI4a,EAAI77C,MAAM,GAAG1a,IAAIm2D,EAAoBvqD,IAAI0qD,MAAK,WAChE,OAAOH,EAAoBtzD,EAC5B,GACD,CACAwzD,EAAoB1gD,KAAO,WAAa,OAAO1U,OAAO0U,KAAK3V,EAAM,EACjEq2D,EAAoBxzD,GAAK,MACzBxF,EAAOC,QAAU+4D,C,wBC1UjB,IAAIr2D,EAAM,CACT,kCAAmC,MACnC,kCAAmC,KACnC,gCAAiC,MACjC,qBAAsB,MACtB,oBAAqB,MACrB,qBAAsB,MACtB,oBAAqB,KACrB,yBAA0B,OAI3B,SAASg2D,EAAeC,GACvB,IAAIpzD,EAAKqzD,EAAsBD,GAC/B,OAAOE,EAAoBtzD,EAC5B,CACA,SAASqzD,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEp2D,EAAKi2D,GAAM,CACpC,IAAIrqD,EAAI,IAAIvJ,MAAM,uBAAyB4zD,EAAM,KAEjD,MADArqD,EAAEqyC,KAAO,mBACHryC,CACP,CACA,OAAO5L,EAAIi2D,EACZ,CACAD,EAAergD,KAAO,WACrB,OAAO1U,OAAO0U,KAAK3V,EACpB,EACAg2D,EAAel1D,QAAUo1D,EACzB74D,EAAOC,QAAU04D,EACjBA,EAAenzD,GAAK,K","sources":["webpack:///./config/build.empty.js","webpack:///./src/app.js","webpack:///./src/common/helpers.js","webpack:///./src/common/dateHelpers.js","webpack:///./src/common/downloadHelpers.js","webpack:///./src/components/authentication/authentication.js","webpack:///./src/components/authentication/authenticationContext.js","webpack:///./src/components/chart/chart.js","webpack:///./src/components/chart/chartAxisLabel.js","webpack:///./src/components/chart/chartContext.js","webpack:///./src/components/chart/chartElements.js","webpack:///./src/components/chart/chartHelpers.js","webpack:///./src/components/chart/chartIcon.js","webpack:///./src/components/chart/chartLegend.js","webpack:///./src/components/chart/chartTooltip.js","webpack:///./src/components/form/formHelpers.js","webpack:///./src/components/form/select.js","webpack:///./src/components/graphCard/graphCardHelpers.js","webpack:///./src/components/i18n/i18n.js","webpack:///./src/components/i18n/i18nHelpers.js","webpack:///./src/components/loader/loader.js","webpack:///./src/components/messageView/messageView.js","webpack:///./src/components/optinView/optinView.js","webpack:///./src/components/pageLayout/pageColumns.js","webpack:///./src/components/pageLayout/pageHeader.js","webpack:///./src/components/pageLayout/pageLayout.js","webpack:///./src/components/pageLayout/pageMessages.js","webpack:///./src/components/pageLayout/pageSection.js","webpack:///./src/components/pageLayout/pageToolbar.js","webpack:///./src/components/router/router.js","webpack:///./src/components/router/routerContext.js","webpack:///./src/components/router/routerHelpers.js","webpack:///./src/components/table/table.js","webpack:///./src/components/table/tableEmpty.js","webpack:///./src/components/table/tableHelpers.js","webpack:///./src/components/table/tableSkeleton.js","webpack:///./src/components/tooltip/tooltip.js","webpack:///./src/config/products.js","webpack:///./src/config/routes.js","webpack:///./src/config/product.openshiftContainer.js","webpack:///./src/config/product.openshiftDedicated.js","webpack:///./src/config/product.openshiftMetrics.js","webpack:///./src/config/product.rhacs.js","webpack:///./src/config/product.rhel.js","webpack:///./src/config/product.rhods.js","webpack:///./src/config/product.rosa.js","webpack:///./src/config/product.satellite.js","webpack:///./src/hooks/useWindow.js","webpack:///./src/redux/common/reduxHelpers.js","webpack:///./src/redux/hooks/useReactRedux.js","webpack:///./src/redux/hooks/index.js","webpack:///./src/services/common/helpers.js","webpack:///./src/services/common/serviceConfig.js","webpack:///./src/services/platform/platformSchemas.js","webpack:///./src/services/platform/platformTransformers.js","webpack:///./src/services/platform/platformServices.js","webpack:///./src/redux/actions/platformActions.js","webpack:///./src/services/config.js","webpack:///./src/services/rhsm/rhsmSchemas.js","webpack:///./src/services/rhsm/rhsmTransformers.js","webpack:///./src/services/rhsm/rhsmHelpers.js","webpack:///./src/services/rhsm/rhsmServices.js","webpack:///./src/redux/actions/rhsmActions.js","webpack:///./src/services/user/userServices.js","webpack:///./src/redux/actions/userActions.js","webpack:///./src/redux/actions/index.js","webpack:///./src/redux/reducers/graphReducer.js","webpack:///./src/redux/reducers/inventoryReducer.js","webpack:///./src/redux/reducers/messagesReducer.js","webpack:///./src/redux/reducers/toolbarReducer.js","webpack:///./src/redux/reducers/userReducer.js","webpack:///./src/redux/reducers/viewReducer.js","webpack:///./src/redux/reducers/index.js","webpack:///./src/redux/middleware/actionRecordMiddleware.js","webpack:///./src/redux/middleware/index.js","webpack:///./src/redux/middleware/statusMiddleware.js","webpack:///./src/redux/middleware/multiActionMiddleware.js","webpack:///./src/redux/store.js","webpack:///./src/redux/types/appTypes.js","webpack:///./src/redux/types/graphTypes.js","webpack:///./src/redux/types/inventoryTypes.js","webpack:///./src/redux/types/platformTypes.js","webpack:///./src/redux/types/queryTypes.js","webpack:///./src/redux/types/toolbarTypes.js","webpack:///./src/redux/types/userTypes.js","webpack:///./src/redux/types/index.js","webpack:///./src/redux/types/messageTypes.js","webpack:///./src/redux/types/rhsmTypes.js","webpack:///./src/services/platform/platformConstants.js","webpack:///./src/services/rhsm/rhsmConstants.js","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/components/ lazy ^\\.\\/.*\\.js$ exclude: \\.test\\.js$ namespace object","webpack:///./src/config/ sync nonrecursive product\\.[\\d\\D]+\\.js$/"],"sourcesContent":["// Used as an empty module to save bundle size\nmodule.exports = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMount } from 'react-use';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { reduxActions, storeHooks } from './redux';\nimport { I18n } from './components/i18n/i18n';\nimport { Router } from './components/router';\nimport Authentication from './components/authentication/authentication';\nimport { helpers } from './common';\n\n/**\n * @memberof Base\n * @module App\n */\n\n/**\n * ToDo: Investigate replacing NotificationsPortal\n * NotificationsPortal takes down the entire app when the parent Redux store is unavailable.\n */\n/**\n * Curiosity application start.\n * - Loads locale\n * - Provides authentication\n *\n * @param {object} props\n * @param {Function} props.getLocale\n * @param {Function} props.useDispatch\n * @param {Function} props.useSelector\n * @returns {React.ReactNode}\n */\nconst App = ({ getLocale, useDispatch: useAliasDispatch, useSelector: useAliasSelector }) => {\n  const dispatch = useAliasDispatch();\n  const { value: locale } = useAliasSelector(({ user }) => user?.locale?.data, {});\n  let platformNotifications = null;\n\n  useMount(() => {\n    if (!locale) {\n      dispatch(getLocale());\n    }\n  });\n\n  if (!helpers.UI_DISABLED_NOTIFICATIONS) {\n    platformNotifications = <NotificationsPortal />;\n  }\n\n  return (\n    <I18n locale={locale}>\n      {platformNotifications}\n      <Authentication>\n        <Router />\n      </Authentication>\n    </I18n>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelector: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: reduxActions.user.getLocale,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelector: storeHooks.reactRedux.useSelector\n};\n\nexport { App as default, App };\n","import numbro from 'numbro';\nimport cryptoSha1 from 'crypto-js/sha1';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isPlainObject from 'lodash/isPlainObject';\n\n/**\n * @memberof Helpers\n * @module General\n */\n\n/**\n * Fill for AggregatedError\n *\n * @param {Array|*} errors An array of errors\n * @param {string|*} message\n * @param {object} options\n * @param {string} options.name\n * @returns {Error|window.AggregateError<Error>}\n */\nconst aggregatedError = (errors, message, { name = 'AggregateError' } = {}) => {\n  const { AggregateError, Error } = window;\n  let err;\n\n  if (AggregateError) {\n    err = new AggregateError(errors, message);\n  } else {\n    err = new Error(message);\n    err.name = name;\n    err.errors = (Array.isArray(errors) && errors) || [errors];\n    err.isEmulated = true;\n  }\n  return err;\n};\n\n/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n/**\n * Check if \"is a Date\"\n *\n * @param {Date|*} date\n * @returns {boolean}\n */\nconst isDate = date => Object.prototype.toString.call(date) === '[object Date]';\n\n/**\n * Check if \"is a Promise\", \"Promise like\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => /^\\[object (Promise|Async|AsyncFunction)]/.test(Object.prototype.toString.call(obj));\n\n/**\n * Generate a consistent hash\n *\n * @param {*|object} anyValue\n * @param {object} options\n * @param {Function} options.method\n * @returns {*|string}\n */\nconst generateHash = (anyValue, { method = cryptoSha1 } = {}) =>\n  method(\n    JSON.stringify({\n      value:\n        (_isPlainObject(anyValue) &&\n          JSON.stringify(\n            Object.entries(anyValue).sort(([a], [b]) => a.localeCompare(b)),\n            (key, value) => {\n              if (value !== anyValue && _isPlainObject(value)) {\n                return JSON.stringify(Object.entries(value).sort(([a], [b]) => a.localeCompare(b)) || []);\n              }\n              if (typeof value === 'function') {\n                return value.toString();\n              }\n              return value;\n            }\n          )) ||\n        `${typeof anyValue}${anyValue?.toString() || anyValue}`\n    })\n  ).toString();\n\n/**\n * Simple memoize, cache based arguments with adjustable limit.\n *\n * @param {Function} func\n * @param {object} options\n * @param {number} options.cacheLimit\n * @returns {Function}\n */\nconst memo = (func, { cacheLimit = 1 } = {}) => {\n  // eslint-disable-next-line func-names\n  const ized = function () {\n    const cache = [];\n\n    return (...args) => {\n      const key = JSON.stringify({ value: [...args].map(arg => (typeof arg === 'function' && arg.toString()) || arg) });\n      const keyIndex = cache.indexOf(key);\n\n      if (keyIndex < 0) {\n        const result = func.call(null, ...args);\n        cache.unshift(key, result);\n        cache.length = cacheLimit * 2;\n        return cache[1];\n      }\n\n      return cache[keyIndex + 1];\n    };\n  };\n\n  return ized();\n};\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * ToDo: review adding \"locale\" for numbro\n */\n/**\n * Convenience wrapper for numbro. Numbro assumes all values passed to it conform as \"number\".\n * This allows us to optional chain the function results.\n *\n * @param {*} value\n * @returns {numbro.Numbro|*}\n */\nconst numberDisplay = value => {\n  if (typeof value !== 'number' || Number.isNaN(value)) {\n    return value;\n  }\n  return numbro(value);\n};\n\n/**\n * Recursive object and props freeze/immutable.\n * Used from deep-freeze-strict, an older npm package, license - public domain\n * https://bit.ly/3HR4XWP and https://bit.ly/3Ye4S6B\n *\n * @param {object} obj\n * @returns {*}\n */\nconst objFreeze = obj => {\n  Object.freeze(obj);\n\n  const oIsFunction = typeof obj === 'function';\n  const hasOwnProp = Object.prototype.hasOwnProperty;\n\n  Object.getOwnPropertyNames(obj).forEach(prop => {\n    if (\n      hasOwnProp.call(obj, prop) &&\n      (oIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true) &&\n      obj[prop] !== null &&\n      (typeof obj[prop] === 'object' || typeof obj[prop] === 'function') &&\n      !Object.isFrozen(obj[prop])\n    ) {\n      objFreeze(obj[prop]);\n    }\n  });\n\n  return obj;\n};\n\n/**\n * Quick set data as \"immutable-like\". Typically used to pass object and array data through configuration callbacks.\n *\n * @param {*} data\n * @param {object} options\n * @param {boolean} options.isClone Clone your data before mutating it.\n * @returns {*}\n */\nconst setImmutableData = memo(\n  (data, { isClone = false } = {}) => (isClone && objFreeze(_cloneDeep(data))) || objFreeze(data)\n);\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * FixMe: Replace, or alias towards UI_DEPLOY_PATH_PREFIX, this dotenv parameter if/when \"beta\" and \"preview\" are normalized.\n */\n/**\n * Patch for compensating for platform updates where a mismatch between \"beta\" and \"preview\" for redirects means\n * that the same prefix can no longer be used for both additional remote resources and links. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_LINK_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_LINK_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable platform notifications.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_NOTIFICATIONS = process.env.REACT_APP_UI_DISABLED_NOTIFICATIONS === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the current instances inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_INSTANCES = process.env.REACT_APP_UI_DISABLED_TABLE_INSTANCES === 'true';\n\n/**\n * Disable the current subscriptions inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_SUBSCRIPTIONS = process.env.REACT_APP_UI_DISABLED_TABLE_SUBSCRIPTIONS === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * Disable the group variant filter aspect of the toolbar.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR_GROUP_VARIANT = process.env.REACT_APP_UI_DISABLED_TOOLBAR_GROUP_VARIANT === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * A url, or uri, for \"contact us\".\n *\n * @type {string}\n */\nconst UI_LINK_CONTACT_US = process.env.REACT_APP_UI_LINK_CONTACT_US;\n\n/**\n * A url, or uri, for \"learn more\".\n *\n * @type {string}\n */\nconst UI_LINK_LEARN_MORE = process.env.REACT_APP_UI_LINK_LEARN_MORE;\n\n/**\n * A url, or uri, for \"recommend actions\"\n *\n * @type {string}\n */\nconst UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS = process.env.REACT_APP_UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS;\n\n/**\n * UI locale default.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG;\n\n/**\n * UI locale default description.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT_DESC = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI state logging file name.\n *\n * @type {string}\n */\nconst UI_LOGGER_FILE = process.env.REACT_APP_UI_LOGGER_FILE || 'debug_log_{0}.json';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @param {boolean} options.limit\n * @param {string} options.id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  aggregatedError,\n  browserExpose,\n  generateHash,\n  generateId,\n  isDate,\n  isPromise,\n  memo,\n  noop,\n  noopPromise,\n  numberDisplay,\n  objFreeze,\n  setImmutableData,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DEPLOY_PATH_LINK_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_NOTIFICATIONS,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TABLE_INSTANCES,\n  UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  UI_DISABLED_TOOLBAR,\n  UI_DISABLED_TOOLBAR_GROUP_VARIANT,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LINK_CONTACT_US,\n  UI_LINK_LEARN_MORE,\n  UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS,\n  UI_LOCALE_DEFAULT,\n  UI_LOCALE_DEFAULT_DESC,\n  UI_LOGGER_ID,\n  UI_LOGGER_FILE,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../services/rhsm/rhsmConstants';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * @memberof Helpers\n * @module Dates\n */\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && moment.utc('20190720').toDate()) ||\n  (helpers.DEV_MODE &&\n    process.env.REACT_APP_DEBUG_DEFAULT_DATETIME &&\n    moment.utc(process.env.REACT_APP_DEBUG_DEFAULT_DATETIME).toDate()) ||\n  moment.utc().toDate();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @param {Date} params.date Start date, typically the current date.\n * @param {number} params.subtract Number of granularity type to subtract from the current date.\n * @param {string} params.measurement Granularity type.\n * @param {string} params.endOfMeasurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement, endOfMeasurement = 'days' }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf(endOfMeasurement).toDate()\n});\n\nconst currentDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 1, measurement: 'days' });\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\nconst rangedYearDateTime = setRangedDateTime({\n  date: getCurrentDate(),\n  subtract: 11,\n  measurement: 'months',\n  endOfMeasurement: 'months'\n});\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case 'CURRENT':\n      return { ...currentDateTime };\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Generate a list of months for use in a select list.\n *\n * @param {string} month\n * @returns {{keyDateTimeRanges: {}, listDateTimeRanges: Array}|*|undefined}\n */\nconst getRangedMonthDateTime = month => {\n  const currentYear = Number.parseInt(moment.utc(getCurrentDate()).year(), 10);\n  const { startDate, endDate } = { ...rangedYearDateTime };\n  const keyDateTimeRanges = {};\n  let listDateTimeRanges = [];\n\n  const startDateUpdated = moment.utc(startDate);\n  const endDateUpdated = moment.utc(endDate);\n\n  while (endDateUpdated > startDateUpdated || startDateUpdated.format('M') === endDateUpdated.format('M')) {\n    const dateTime = {\n      value: {\n        startDate: startDateUpdated.toDate()\n      }\n    };\n\n    const titleYear = startDateUpdated.format('MMMM YYYY');\n    const title = startDateUpdated.format('MMMM');\n    const titleIndex = startDateUpdated.format('M');\n    const isNextYear = currentYear !== Number.parseInt(startDateUpdated.year(), 10);\n\n    dateTime.title = (isNextYear && titleYear) || title;\n    dateTime._title = title.toLowerCase();\n    dateTime.value.endDate = moment.utc(startDateUpdated).endOf('month').toDate();\n\n    startDateUpdated.add(1, 'month');\n\n    dateTime.title = translate('curiosity-toolbar.label', { context: ['granularityRangedMonthly', dateTime.title] });\n    keyDateTimeRanges[title.toLowerCase()] = { ...dateTime };\n    keyDateTimeRanges[titleIndex] = { ...dateTime };\n    listDateTimeRanges.push(dateTime);\n  }\n\n  listDateTimeRanges = listDateTimeRanges.reverse();\n  listDateTimeRanges[0] = {\n    ...listDateTimeRanges[0],\n    isCurrent: true,\n    _title: 'current',\n    title: translate('curiosity-toolbar.label', { context: ['granularityRangedMonthly', 'current'] })\n  };\n\n  keyDateTimeRanges.current = { ...listDateTimeRanges[0] };\n\n  if (month) {\n    return keyDateTimeRanges?.[month] || undefined;\n  }\n\n  return { keyDateTimeRanges, listDateTimeRanges };\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\n/**\n * Consistent timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampTimeFormats = {\n  timeLong: 'MMMM D h:mm:ss A',\n  yearTimeLong: 'MMMM D YYYY h:mm:ss A',\n  timeShort: 'MMM D h:mm A',\n  yearTimeShort: 'MMM D YYYY h:mm A'\n};\n\n/**\n * Consistent UTC timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampUTCTimeFormats = {\n  timeLong: 'DD MMMM HH:mm:ss UTC',\n  yearTimeLong: 'DD MMMM YYYY HH:mm:ss UTC',\n  timeShort: 'DD MMM HH:mm UTC',\n  yearTimeShort: 'DD MMM YYYY HH:mm UTC'\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { dateHelpers } from './dateHelpers';\n\n/**\n * @memberof Helpers\n * @module Downloads\n */\n\n/**\n * Download data to a file\n *\n * @param {object} options\n * @param {string} options.data\n * @param {string} options.fileName\n * @param {string} options.fileType\n * @returns {Promise}\n */\nconst downloadData = options => {\n  const { data = '', fileName = 'download.txt', fileType = 'text/plain' } = options || {};\n  return new Promise((resolve, reject) => {\n    try {\n      const { document, navigator, URL } = window;\n      const blob = new Blob([data], { type: fileType });\n\n      if (navigator?.msSaveBlob) {\n        navigator.msSaveBlob(blob, fileName);\n        resolve({ fileName, data });\n      } else {\n        const anchorTag = document.createElement('a');\n\n        anchorTag.href = URL.createObjectURL(blob);\n        anchorTag.style.display = 'none';\n        anchorTag.download = fileName;\n\n        document.body.appendChild(anchorTag);\n\n        anchorTag.click();\n\n        setTimeout(() => {\n          document.body.removeChild(anchorTag);\n          URL.revokeObjectURL(blob);\n          resolve({ fileName, data });\n        }, 250);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\n/**\n * Download the debug log file.\n */\nconst debugLog = async () => {\n  try {\n    const { sessionStorage } = window;\n    const fileName = `${helpers.UI_LOGGER_FILE}`.replace(\n      '{0}',\n      moment(dateHelpers.getCurrentDate()).format('YYYYMMDD_HHmmss')\n    );\n    const data = JSON.stringify(JSON.parse(sessionStorage.getItem(`${helpers.UI_LOGGER_ID}`)), null, 2);\n\n    await downloadData({ data, fileName, fileType: 'application/json' });\n  } catch (e) {\n    throw new Error(`debuglog error, ${e.message}`);\n  }\n};\n\nconst downloadHelpers = {\n  downloadData,\n  debugLog\n};\n\nhelpers.browserExpose({ debugLog }, { limit: false });\n\nexport { downloadHelpers as default, downloadHelpers, downloadData, debugLog };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { Maintenance } from '@redhat-cloud-services/frontend-components/Maintenance';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { routerHelpers } from '../router';\nimport { rhsmConstants } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\nimport { MessageView } from '../messageView/messageView';\nimport { OptinView } from '../optinView/optinView';\nimport { translate } from '../i18n/i18n';\nimport { AuthenticationContext, useGetAuthorization } from './authenticationContext';\n\n/**\n * Authentication component wrapper.\n *\n * @memberof Components\n * @module Authentication\n * @property {module} AuthenticationContext\n */\n\n/**\n * An authentication pass-through component.\n *\n * @param {object} props\n * @param {string} props.appName\n * @param {React.ReactNode} props.children\n * @param {boolean} props.isDisabled\n * @param {Function} props.t\n * @param {Function} props.useGetAuthorization\n * @returns {React.ReactNode}\n */\nconst Authentication = ({ appName, children, isDisabled, t, useGetAuthorization: useAliasGetAuthorization }) => {\n  const { pending, data = {} } = useAliasGetAuthorization();\n  const { authorized = {}, errorCodes, errorStatus } = data;\n  const { [appName]: isAuthorized } = authorized;\n\n  const renderContent = () => {\n    if (isDisabled) {\n      return (\n        <MessageView>\n          <Maintenance description={t('curiosity-auth.maintenanceCopy', '...')} />\n        </MessageView>\n      );\n    }\n\n    if (isAuthorized) {\n      return children;\n    }\n\n    if (pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (errorCodes && errorCodes.includes(rhsmConstants.RHSM_API_RESPONSE_ERRORS_CODE_TYPES.OPTIN)) ||\n      errorStatus === 418\n    ) {\n      return <OptinView />;\n    }\n\n    return (\n      <MessageView>\n        <NotAuthorized serviceName={helpers.UI_DISPLAY_NAME} />\n      </MessageView>\n    );\n  };\n\n  return <AuthenticationContext.Provider value={data}>{renderContent()}</AuthenticationContext.Provider>;\n};\n\n/**\n * Prop types.\n *\n * @type {{useGetAuthorization: Function, children: React.ReactNode, appName: string, isDisabled: boolean}}\n */\nAuthentication.propTypes = {\n  appName: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  useGetAuthorization: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useGetAuthorization: Function, t: Function, appName: string, isDisabled: boolean}}\n */\nAuthentication.defaultProps = {\n  appName: routerHelpers.appName,\n  isDisabled: helpers.UI_DISABLED,\n  t: translate,\n  useGetAuthorization\n};\n\nexport { Authentication as default, Authentication };\n","import React, { useContext } from 'react';\nimport { useMount } from 'react-use';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { reduxActions, storeHooks } from '../../redux';\nimport { helpers } from '../../common';\nimport { routerHelpers } from '../router';\n\n/**\n * @memberof Authentication\n * @module AuthenticationContext\n */\n\n/**\n * Authentication context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst AuthenticationContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated authentication context.\n *\n * @returns {React.Context<{}>}\n */\nconst useAuthContext = () => useContext(AuthenticationContext);\n\n/**\n * Initialize an app, and return a combined state store that includes authorization, locale, and API errors\n *\n * @param {object} options\n * @param {string} options.appName\n * @param {Function} options.authorizeUser\n * @param {Function} options.hideGlobalFilter\n * @param {Function} options.useChrome\n * @param {Function} options.useDispatch\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: {errorCodes, errorStatus: *, locale}, pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useGetAuthorization = ({\n  appName = routerHelpers.appName,\n  authorizeUser = reduxActions.platform.authorizeUser,\n  hideGlobalFilter = reduxActions.platform.hideGlobalFilter,\n  useChrome: useAliasChrome = useChrome,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const dispatch = useAliasDispatch();\n  const { updateDocumentTitle = helpers.noop } = useAliasChrome();\n  const { data, error, fulfilled, pending, responses } = useAliasSelectorsResponse([\n    { id: 'auth', selector: ({ user }) => user?.auth },\n    { id: 'locale', selector: ({ user }) => user?.locale },\n    {\n      id: 'errors',\n      selector: ({ user }) => (user?.errors?.error === true && user.errors) || { fulfilled: true, data: [] }\n    }\n  ]);\n\n  useMount(async () => {\n    await dispatch(authorizeUser());\n    updateDocumentTitle(appName);\n    dispatch([hideGlobalFilter()]);\n  });\n\n  const [user = {}, app = {}] = (Array.isArray(data.auth) && data.auth) || [];\n  const errorStatus = (error && responses?.id?.errors?.status) || null;\n\n  return {\n    data: {\n      ...user,\n      ...app,\n      locale: data.locale,\n      errorCodes: data.errors,\n      errorStatus\n    },\n    error,\n    fulfilled,\n    pending\n  };\n};\n\n/**\n * Return session data from authentication context.\n *\n * @param {Function} useAliasAuthContext\n * @returns {{errorCodes, errorStatus: *, locale}}\n */\nconst useSession = ({ useAuthContext: useAliasAuthContext = useAuthContext } = {}) => {\n  const session = useAliasAuthContext();\n  return {\n    ...session\n  };\n};\n\nconst context = {\n  AuthenticationContext,\n  DEFAULT_CONTEXT,\n  useAuthContext,\n  useGetAuthorization,\n  useSession\n};\n\nexport {\n  context as default,\n  context,\n  AuthenticationContext,\n  DEFAULT_CONTEXT,\n  useAuthContext,\n  useGetAuthorization,\n  useSession\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ChartThemeColor } from '@patternfly/react-charts';\nimport { ChartContext } from './chartContext';\nimport { ChartElements } from './chartElements';\nimport { ChartLegend } from './chartLegend';\nimport { chartHelpers, ChartTypeVariant } from './chartHelpers';\nimport { useResizeObserver } from '../../hooks/useWindow';\n\n/**\n * PF Charts/Victory area, and line, charts generator.\n *\n * @memberof Components\n * @module Chart\n * @property {module} ChartAxisLabel\n * @property {module} ChartContext\n * @property {module} ChartElements\n * @property {module} ChartHelpers\n * @property {module} ChartIcon\n * @property {module} ChartLegend\n * @property {module} ChartTooltip\n */\n\n/**\n * Return a chart and elements with a context provider.\n *\n * @param {object} props\n * @param {React.ReactNode|Function} props.chartLegend\n * @param {React.ReactNode|Function} props.chartTooltip\n * @param {Array} props.dataSets\n * @param {object} props.padding\n * @param {string} props.themeColor\n * @param {React.ReactNode|Function} props.xAxisChartLabel\n * @param {React.ReactNode|Function} props.yAxisChartLabel\n * @param {boolean} props.xAxisFixLabelOverlap\n * @param {number} props.xAxisLabelIncrement\n * @param {Function} props.xAxisTickFormat\n * @param {Function} props.yAxisTickFormat\n * @param {Function} props.xValueFormat\n * @param {Function} props.yValueFormat\n * @returns {React.ReactNode}\n */\nconst Chart = ({\n  chartLegend,\n  chartTooltip,\n  dataSets,\n  padding,\n  themeColor,\n  xAxisChartLabel,\n  yAxisChartLabel,\n  xAxisFixLabelOverlap,\n  xAxisLabelIncrement,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  xValueFormat,\n  yValueFormat\n}) => {\n  const [context, setContext] = useState();\n  const [dataSetsToggle, setDataSetsToggle] = useState({});\n  const containerRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const { width: chartWidth } = useResizeObserver(containerRef);\n\n  useEffect(() => {\n    /**\n     * Aggregate chart related settings.\n     *\n     * @returns {{isMultiYAxis: boolean, padding: object, chartDomain: {domain: {y: Array}}, tooltipDataSetLookUp: {},\n     *     xAxisProps: object, themeColor: string, maxY: (object|number), hasData: boolean, maxX: number,\n     *     yAxisProps: Array, chartElementsProps: {elementsById: object, stackedElements: Array,\n     *     stackedElementsById: object, elements: Array}}}\n     */\n    const updateChartSettings = () => {\n      const toggledDataSets = dataSets.filter(({ id }) => !dataSetsToggle[id]);\n\n      const tooltipDataSetLookUp = chartHelpers.generateTooltipData({\n        content: chartTooltip,\n        dataSets: toggledDataSets\n      });\n\n      const { maxX, maxY } = chartHelpers.generateMaxXY({ dataSets: toggledDataSets });\n      const { individualMaxY } = chartHelpers.generateMaxXY({ dataSets });\n      const { xAxisProps, yAxisProps } = chartHelpers.generateAxisProps({\n        dataSets,\n        individualMaxY,\n        maxX,\n        maxY,\n        xAxisChartLabel,\n        yAxisChartLabel,\n        xAxisFixLabelOverlap,\n        xAxisLabelIncrement,\n        xAxisTickFormat,\n        yAxisTickFormat\n      });\n\n      const isMultiYAxis = yAxisProps.length > 1;\n      const chartElementsProps = chartHelpers.generateElementsProps({\n        dataSets: toggledDataSets,\n        maxX,\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        xValueFormat,\n        yValueFormat\n      });\n      const { domain, padding: domainPadding } = chartHelpers.generateDomains({\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        padding\n      });\n      const hasData = !!xAxisProps.tickValues;\n      const updatedPadding = { bottom: 0, left: 0, right: 0, top: 0, ...padding, ...domainPadding };\n\n      return {\n        xAxisProps,\n        yAxisProps,\n        chartDomain: { domain },\n        chartElementsProps,\n        hasData,\n        isMultiYAxis,\n        maxX,\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        padding: updatedPadding,\n        themeColor,\n        tooltipDataSetLookUp\n      };\n    };\n\n    const chartSettings = updateChartSettings();\n    const updatedSettings = {\n      chartContainerRef: () => containerRef,\n      chartSettings: { ...chartSettings, chartLegend, chartWidth, dataSets },\n      chartTooltipRef: () => tooltipRef,\n      dataSetsToggle: [dataSetsToggle, setDataSetsToggle]\n    };\n\n    setContext(updatedSettings);\n  }, [\n    chartLegend,\n    chartTooltip,\n    chartWidth,\n    dataSets,\n    dataSetsToggle,\n    padding,\n    setContext,\n    themeColor,\n    xAxisChartLabel,\n    yAxisChartLabel,\n    xAxisFixLabelOverlap,\n    xAxisLabelIncrement,\n    yAxisTickFormat,\n    xAxisTickFormat,\n    xValueFormat,\n    yValueFormat\n  ]);\n\n  return (\n    <ChartContext.Provider value={context}>\n      <div\n        className=\"curiosity-chartarea uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        data-test=\"curiosity-chartarea\"\n        ref={containerRef}\n      >\n        {chartWidth > 0 && (\n          <React.Fragment>\n            <ChartElements />\n            <ChartLegend />\n          </React.Fragment>\n        )}\n      </div>\n    </ChartContext.Provider>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{chartTooltip: React.ReactNode|Function, xValueFormat: Function, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: Function, themeColor: string, chartLegend: React.ReactNode|Function,\n *     yAxisTickFormat: Function, dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number,\n *     yValueFormat: Function}}\n */\nChart.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      chartType: PropTypes.oneOf([...Object.values(ChartTypeVariant)]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      xAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      yAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      xAxisUseDataSet: PropTypes.bool,\n      yAxisUseDataSet: PropTypes.bool\n    })\n  ),\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  yAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func,\n  xValueFormat: PropTypes.func,\n  yValueFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartTooltip: React.ReactNode|Function, xValueFormat: Function, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: Function, themeColor: string, chartLegend: React.ReactNode|Function,\n *     yAxisTickFormat: Function, dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number,\n *     yValueFormat: Function}}\n */\nChart.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  dataSets: [],\n  padding: {\n    bottom: 75,\n    left: 55,\n    right: 55,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisChartLabel: null,\n  yAxisChartLabel: null,\n  xAxisFixLabelOverlap: true,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null,\n  xValueFormat: null,\n  yValueFormat: null\n};\n\nexport { Chart as default, Chart, ChartTypeVariant };\n","import React from 'react';\n\n/**\n * @memberof Chart\n * @module ChartAxisLabel\n */\n\n/**\n * Note: Victory Charts components require a form of extended \"something\" applied by the consuming component.\n * This leads to odd implementations, like returning a function component.\n */\n/**\n * Allow, and return, SVG compatible HTML for axis labels.\n *\n * @param {object} params\n * @param {string} params.axis\n * @param {number} params.index\n * @returns {Function}\n */\nconst chartAxisLabel =\n  ({ axis, index = 0 } = {}) =>\n  ({ x, y, text }) => // eslint-disable-line\n    (\n      <g>\n        <foreignObject x={0} y={0} width=\"100%\" height=\"100%\">\n          <div\n            className={`curiosity-chartarea__axis-label-container curiosity-chartarea__axis-label-container-${axis} curiosity-chartarea__axis-label-container-${axis}-${index}`}\n            style={{ top: `${y ?? 0}px` }}\n            xmlns=\"http://www.w3.org/1999/xhtml\"\n          >\n            <div className=\"curiosity-chartarea__axis-label-container-content\">{text}</div>\n          </div>\n        </foreignObject>\n      </g>\n    );\n\nexport { chartAxisLabel as default, chartAxisLabel };\n","import React, { useCallback, useContext } from 'react';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Chart\n * @module ChartContext\n */\n\n/**\n * Chart context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [\n  { chartContainerRef: helpers.noop, chartSettings: {}, chartTooltipRef: helpers.noop, dataSetsToggle: [] },\n  helpers.noop\n];\n\nconst ChartContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated chart context.\n *\n * @returns {React.Context<{}>}\n */\nconst useChartContext = () => useContext(ChartContext);\n\n/**\n * ToDo: reevaluate this alternative pattern of passing hooks as options, helps testing\n */\n/**\n * Track, show, and hide chart data layers.\n *\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n * @param {object} options\n * @param {Function} options.useChartContext\n * @returns {{onRevert: Function, onToggle: Function, getIsToggled: Function, dataSetsToggle: object,\n *     onHide: Function}}\n */\nconst useToggleData = ({ useChartContext: useAliasChartContext = useChartContext } = {}) => {\n  const { dataSetsToggle: contextDataSetsToggle = [] } = useAliasChartContext();\n  const [dataSetsToggle, setDataSetsToggle] = contextDataSetsToggle;\n\n  /**\n   * Hide a graph layer.\n   *\n   * @event onHide\n   */\n  const onHide = useCallback(\n    id => {\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: true }));\n    },\n    [setDataSetsToggle]\n  );\n\n  /**\n   * Reset graph layers.\n   *\n   * @event onRevert\n   */\n  const onRevert = useCallback(() => {\n    setDataSetsToggle(() => ({}));\n  }, [setDataSetsToggle]);\n\n  /**\n   * Hide/show graph layers.\n   *\n   * @event onToggle\n   * @returns boolean;\n   */\n  const onToggle = useCallback(\n    id => {\n      const updatedToggle = !dataSetsToggle?.[id];\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: updatedToggle }));\n      return updatedToggle;\n    },\n    [dataSetsToggle, setDataSetsToggle]\n  );\n\n  /**\n   * Graph layer status.\n   *\n   * @callback getIsToggled\n   * @returns boolean|*\n   */\n  const getIsToggled = useCallback(id => dataSetsToggle?.[id] || false, [dataSetsToggle]);\n\n  return {\n    ...{ dataSetsToggle },\n    onHide,\n    onRevert,\n    onToggle,\n    getIsToggled\n  };\n};\n\nconst context = {\n  ChartContext,\n  DEFAULT_CONTEXT,\n  useChartContext,\n  useToggleData\n};\n\nexport { context as default, context, ChartContext, DEFAULT_CONTEXT, useChartContext, useToggleData };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VictoryStack as ChartStack, VictoryTooltip as ChartCursorTooltip } from 'victory';\nimport { createContainer } from 'victory-create-container';\nimport { Chart, ChartArea, ChartAxis, ChartContainer, ChartLine, ChartThreshold } from '@patternfly/react-charts';\nimport { useChartContext } from './chartContext';\nimport { chartTooltip } from './chartTooltip';\nimport { chartAxisLabel } from './chartAxisLabel';\nimport { ChartTypeVariant } from './chartHelpers';\n\n/**\n * @memberof Chart\n * @module ChartElements\n */\n\n/**\n * Aggregate, generate, a compatible Victory chart element/facet component.\n *\n * @param {object} props\n * @param {object} props.chartTypeDefaults\n * @returns {React.ReactNode}\n */\nconst ChartElements = ({ chartTypeDefaults }) => {\n  const { chartSettings = {}, chartContainerRef, chartTooltipRef } = useChartContext();\n  const {\n    chartDomain,\n    chartElementsProps,\n    chartWidth,\n    hasData,\n    padding,\n    themeColor,\n    xAxisProps = {},\n    yAxisProps = []\n  } = chartSettings;\n\n  let containerComponent = <ChartContainer />;\n  let xAxis = null;\n  let yAxis = null;\n  let chartElements = [];\n  let stackedChartElements = [];\n\n  if (hasData) {\n    /**\n     * Note: both cursor and voronoiDimension attrs required if the need is to have...\n     * the tooltip populate consistently without being \"near\" a chart element y axis point\n     */\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const TooltipLabelComponent = chartTooltip({ chartSettings, chartContainerRef, chartTooltipRef });\n\n    containerComponent = (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        voronoiDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={\n          <ChartCursorTooltip\n            dx={0}\n            dy={0}\n            centerOffset={{ x: 0, y: 0 }}\n            flyoutStyle={{ fill: 'transparent', stroke: 'transparent' }}\n            labelComponent={<TooltipLabelComponent />}\n          />\n        }\n        voronoiPadding={(padding && Object.values(padding).sort()?.[0]) || 0}\n        mouseFollowTooltips\n      />\n    );\n  }\n\n  /**\n   * Generate X Axis\n   */\n  if (Object.keys(xAxisProps).length) {\n    const updatedXAxisProps = {\n      ...xAxisProps\n    };\n\n    if (updatedXAxisProps.label) {\n      const AxisLabelComponent = chartAxisLabel({ axis: 'x' });\n      updatedXAxisProps.axisLabelComponent = <AxisLabelComponent />;\n    }\n\n    xAxis = <ChartAxis {...updatedXAxisProps} animate={false} />;\n  }\n\n  /**\n   * Generate Y Axis\n   */\n  if (Array.isArray(yAxisProps)) {\n    yAxis = yAxisProps.map((axisProps, index) => {\n      const updatedAxisProps = {\n        ...axisProps\n      };\n\n      if (updatedAxisProps.label) {\n        const AxisLabelComponent = chartAxisLabel({ axis: 'y', index });\n        updatedAxisProps.axisLabelComponent = <AxisLabelComponent />;\n      }\n\n      return <ChartAxis key={`yaxis-${axisProps.orientation}`} {...updatedAxisProps} animate={false} />;\n    });\n  }\n\n  const setChartElement = ({ chartType, props }) => {\n    const { component: Component, ...defaultProps } =\n      chartTypeDefaults[chartType] || chartTypeDefaults[ChartTypeVariant.area];\n    return <Component {...{ ...defaultProps, ...props }} />;\n  };\n\n  chartElements = chartElementsProps?.elements.map(setChartElement);\n  stackedChartElements = chartElementsProps?.stackedElements.map(setChartElement);\n\n  return (\n    <Chart\n      animate={{ duration: 0 }}\n      width={chartWidth}\n      themeColor={themeColor}\n      {...{ padding, containerComponent, ...chartDomain }}\n    >\n      {xAxis}\n      {yAxis}\n      {chartElements}\n      <ChartStack>{stackedChartElements}</ChartStack>\n    </Chart>\n  );\n};\n\n/**\n * Prop types\n *\n * @type {{chartTypeDefaults:{}}}\n */\nChartElements.propTypes = {\n  chartTypeDefaults: PropTypes.objectOf(\n    PropTypes.shape({\n      component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      interpolation: PropTypes.oneOf(['monotoneX', 'step'])\n    })\n  )\n};\n\n/**\n * Default props\n *\n * @type {{chartTypeDefaults:{}}}\n */\nChartElements.defaultProps = {\n  chartTypeDefaults: {\n    [ChartTypeVariant.area]: {\n      component: ChartArea,\n      animate: {\n        duration: 250,\n        onLoad: { duration: 250 }\n      },\n      interpolation: 'monotoneX'\n    },\n    [ChartTypeVariant.line]: {\n      component: ChartLine,\n      animate: {\n        duration: 250,\n        onLoad: { duration: 250 }\n      },\n      interpolation: 'monotoneX'\n    },\n    [ChartTypeVariant.threshold]: {\n      component: ChartThreshold,\n      animate: {\n        duration: 100,\n        onLoad: { duration: 100 }\n      },\n      interpolation: 'step'\n    }\n  }\n};\n\nexport { ChartElements as default, ChartElements };\n","import React from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Chart\n * @module ChartHelpers\n */\n\n/**\n * Available chart types\n *\n * @type {{area: string, line: string, threshold: string}}\n */\nconst ChartTypeVariant = {\n  area: 'area',\n  line: 'line',\n  threshold: 'threshold'\n};\n\n/**\n * Generate max X and Y values from datasets.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @returns {{individualMaxY: object, maxY: number, maxX: number}}\n */\nconst generateMaxXY = ({ dataSets = [] } = {}) => {\n  const individualDataSetsMaxY = {};\n  let combinedDataSetMaxX = 0;\n  let combinedDataSetsMaxY = 0;\n\n  dataSets\n    .filter(({ isStacked }) => isStacked === true)\n    .forEach(({ data }) => {\n      if (Array.isArray(data)) {\n        combinedDataSetsMaxY += Math.max(...data.map(value => value?.y ?? 0));\n      }\n    });\n\n  dataSets.forEach(({ id, data }) => {\n    let dataSetMaxY = 0;\n\n    if (Array.isArray(data)) {\n      combinedDataSetMaxX = data.length > combinedDataSetMaxX ? data.length : combinedDataSetMaxX;\n\n      dataSetMaxY = Math.max(...data.map(value => value?.y ?? 0));\n      combinedDataSetsMaxY = dataSetMaxY > combinedDataSetsMaxY ? dataSetMaxY : combinedDataSetsMaxY;\n    }\n\n    if (id) {\n      individualDataSetsMaxY[id] = dataSetMaxY;\n    }\n  });\n\n  return {\n    maxX: combinedDataSetMaxX,\n    maxY: combinedDataSetsMaxY,\n    individualMaxY: individualDataSetsMaxY\n  };\n};\n\n/**\n * Generate Y axis domain ranges from dataSets, ignore X axis.\n *\n * @param {object} params\n * @param {number|object} params.maxY\n * @param {object} params.padding\n * @returns {{ domain: { y: Array }, padding: {object} }}\n */\nconst generateDomains = ({ maxY, padding = {} } = {}) => {\n  const updatedChartDomain = {};\n  const updatedPadding = { ...padding };\n  const generatedDomain = {};\n\n  if (Object.values(maxY).length) {\n    generatedDomain.y = [0, 1.25];\n  } else if (maxY >= 0.1) {\n    const floored = Math.pow(10, Math.floor(Math.log10(maxY || 10)));\n    generatedDomain.y = [0, Math.ceil((maxY + 1) / floored) * floored];\n  } else if (maxY < 0.1) {\n    generatedDomain.y = [0, maxY + maxY / 4 || 10];\n  } else {\n    generatedDomain.y = [0, 10];\n  }\n\n  if (maxY < 0.01) {\n    updatedPadding.left += generatedDomain.y.toString().length;\n    updatedPadding.right += generatedDomain.y.toString().length;\n  }\n\n  if (Object.keys(generatedDomain).length) {\n    updatedChartDomain.domain = generatedDomain;\n  }\n\n  return {\n    ...updatedChartDomain,\n    padding: updatedPadding\n  };\n};\n\n/**\n * Generate chart element props.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {number} params.maxX\n * @param {number} params.maxY\n * @param {Function} params.xValueFormat\n * @param {Function} params.yValueFormat\n * @param {object} options\n * @param {object} options.chartTypeVariant\n * @returns {{elementsById: object, stackedElements: Array, stackedElementsById: object, elements: Array}}\n */\nconst generateElementsProps = (\n  { dataSets = [], maxX, maxY, xValueFormat, yValueFormat } = {},\n  { chartTypeVariant = ChartTypeVariant } = {}\n) => {\n  const elements = [];\n  const stackedElements = [];\n  const elementsById = {};\n  const stackedElementsById = {};\n\n  dataSets.forEach(dataSet => {\n    const { animate, chartType, data, fill, id, isStacked, interpolation, stroke, strokeDasharray, strokeWidth } =\n      dataSet;\n\n    if (data?.length) {\n      const dataColorStroke = {\n        data: {}\n      };\n\n      if (fill && chartType !== chartTypeVariant.line && chartType !== chartTypeVariant.threshold) {\n        dataColorStroke.data.fill = fill;\n      }\n\n      if (stroke) {\n        dataColorStroke.data.stroke = stroke;\n      }\n\n      if (strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = strokeDasharray;\n      }\n\n      if (strokeWidth) {\n        dataColorStroke.data.strokeWidth = strokeWidth;\n      }\n\n      const defaultProps = {};\n\n      if (animate) {\n        defaultProps.animate = animate;\n      }\n\n      if (interpolation) {\n        defaultProps.interpolation = interpolation;\n      }\n\n      const chartElementProps = {\n        ...defaultProps,\n        key: `chart-${dataSet.id}-${chartType || ''}`,\n        name: `chart-${dataSet.id}-${chartType || ''}`,\n        data: dataSet.data,\n        style: { ...(dataSet.style || {}), ...dataColorStroke },\n        themeColor: dataSet.themeColor,\n        themeVariant: dataSet.themeVariant,\n        x:\n          (xValueFormat &&\n            (datum => {\n              const xValue = xValueFormat({ datum, maxX });\n              return xValue === undefined || Number.isNaN(xValue) ? 0 : xValue;\n            })) ||\n          undefined,\n        y: datum => {\n          let yValue;\n\n          if (yValueFormat) {\n            yValue = yValueFormat({\n              datum,\n              isMultiAxis: typeof maxY !== 'number',\n              maxY: typeof maxY === 'number' ? maxY : maxY?.[dataSet.id]\n            });\n          } else {\n            yValue = typeof maxY === 'number' ? datum.y : datum.y / maxY?.[dataSet.id]; // eslint-disable-line\n          }\n\n          return yValue === undefined || Number.isNaN(yValue) ? 0 : yValue;\n        }\n      };\n\n      const props = { ...chartElementProps };\n      const updatedProps = { chartType, props };\n\n      if (isStacked) {\n        stackedElementsById[id] = updatedProps;\n        stackedElements.push(updatedProps);\n      } else {\n        elementsById[id] = updatedProps;\n        elements.push(updatedProps);\n      }\n    }\n  });\n\n  return {\n    elements,\n    elementsById,\n    stackedElements,\n    stackedElementsById\n  };\n};\n\n/**\n * Preprocess datasets for tooltips.\n *\n * @param {object} params\n * @param {React.ReactNode|Function} params.content\n * @param {Array} params.dataSets\n * @returns {{}}\n */\nconst generateTooltipData = ({ content = helpers.noop, dataSets = [] } = {}) => {\n  const tooltipDataSetLookUp = {};\n\n  if (content && Array.isArray(dataSets?.[0]?.data)) {\n    dataSets[0].data.forEach((dataSet, index) => {\n      const itemsByKey = {};\n\n      dataSets.forEach(data => {\n        if (data?.data?.[index]) {\n          itemsByKey[data.id] = {\n            color: data.stroke || data.fill || data.color || '',\n            chartType: data.chartType,\n            data: _cloneDeep(data.data[index])\n          };\n        }\n      });\n\n      const mockDatum = {\n        datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey }\n      };\n\n      tooltipDataSetLookUp[dataSet.x] = {\n        x: dataSet.x,\n        y: null,\n        itemsByKey,\n        tooltip:\n          (React.isValidElement(content) && React.cloneElement(content, { ...mockDatum })) || content({ ...mockDatum })\n      };\n    });\n  }\n\n  return tooltipDataSetLookUp;\n};\n\n/**\n * Generate X axis props, ticks, tick formatting.\n *\n * @param {object} params\n * @param {object} params.dataSet\n * @param {number} params.maxX\n * @param {number} params.xAxisLabelIncrement\n * @param {object} params.xAxisPropDefaults\n * @param {Function} params.xAxisTickFormat\n * @returns {{tickFormat: Function, tickValues: *}}\n */\nconst generateXAxisProps = ({\n  dataSet = {},\n  maxX,\n  xAxisLabelIncrement,\n  xAxisPropDefaults = {},\n  xAxisTickFormat\n} = {}) => {\n  const { data = [], xAxisChartLabel } = dataSet;\n  const axisProps = {\n    ...xAxisPropDefaults,\n    tickValues: data.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    ),\n    tickFormat: tick => data[tick]?.xAxisLabel || tick\n  };\n\n  if (typeof xAxisChartLabel === 'function') {\n    axisProps.label = xAxisChartLabel({ ...dataSet, xAxisChartLabel: undefined });\n  } else {\n    axisProps.label = xAxisChartLabel;\n  }\n\n  if (typeof xAxisTickFormat === 'function') {\n    axisProps.tickFormat = tick => {\n      const tickIndex = axisProps.tickValues.indexOf(tick);\n      const previousItem = { ...data[axisProps.tickValues[tickIndex - 1]] };\n      const nextItem = { ...data[axisProps.tickValues[tickIndex + 1]] };\n      const item = { ...data[tick] };\n\n      return xAxisTickFormat({ tick, previousItem, item, nextItem, maxX });\n    };\n  }\n\n  return axisProps;\n};\n\n/**\n * Generate Y axis props, ticks, tick formatting.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {number|object} params.maxY\n * @param {object} params.yAxisPropDefaults\n * @param {Function} params.yAxisTickFormat\n * @returns {Array}\n */\nconst generateYAxisProps = ({ dataSets = [], maxY, yAxisPropDefaults = {}, yAxisTickFormat } = {}) => {\n  const axisProps = [];\n  const isMultiAxis = dataSets.length > 1;\n\n  dataSets.forEach(({ yAxisChartLabel, id, stroke, strokeWidth, ...dataSet } = {}, index) => {\n    const updatedAxisProps = {\n      style: { axis: {}, tickLabels: {} },\n      tickFormat: tick => tick\n    };\n\n    if (isMultiAxis && stroke) {\n      updatedAxisProps.style.axis.stroke = stroke;\n    }\n\n    if (isMultiAxis && strokeWidth) {\n      updatedAxisProps.style.axis.strokeWidth = strokeWidth;\n    }\n\n    if (typeof yAxisChartLabel === 'function') {\n      updatedAxisProps.label = yAxisChartLabel({ id, stroke, strokeWidth, ...dataSet });\n    } else {\n      updatedAxisProps.label = yAxisChartLabel;\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      const updatedMaxY = (typeof maxY === 'number' && maxY) || maxY?.[id];\n\n      updatedAxisProps.tickFormat = tick => {\n        const normalizedTick = (isMultiAxis && tick * updatedMaxY) || tick;\n\n        return yAxisTickFormat({\n          tick: normalizedTick,\n          isMultiAxis,\n          maxY: updatedMaxY\n        });\n      };\n    }\n\n    axisProps.push({\n      ...yAxisPropDefaults,\n      ...updatedAxisProps,\n      orientation: (index === 0 && 'left') || 'right'\n    });\n  });\n\n  return axisProps;\n};\n\n/**\n * Generate x,y props.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {object} params.individualMaxY\n * @param {number} params.maxX\n * @param {number} params.maxY\n * @param {React.ReactNode|Function} params.xAxisChartLabel\n * @param {React.ReactNode|Function} params.yAxisChartLabel\n * @param {boolean} params.xAxisFixLabelOverlap\n * @param {number} params.xAxisLabelIncrement\n * @param {Function} params.xAxisTickFormat\n * @param {Function} params.yAxisTickFormat\n * @returns {{xAxisProps: object, yAxisProps: Array}}\n */\nconst generateAxisProps = ({\n  dataSets = [],\n  individualMaxY = {},\n  maxX,\n  maxY,\n  xAxisChartLabel,\n  yAxisChartLabel,\n  xAxisFixLabelOverlap = true,\n  xAxisLabelIncrement = 1,\n  xAxisTickFormat,\n  yAxisTickFormat\n} = {}) => {\n  const xAxisPropDefaults = {\n    fixLabelOverlap: xAxisFixLabelOverlap\n  };\n\n  const yAxisPropDefaults = {\n    dependentAxis: true,\n    showGrid: true\n  };\n\n  let yAxisDataSets = [];\n  let xAxisDataSet;\n\n  dataSets.forEach(dataSet => {\n    if (dataSet.yAxisUseDataSet) {\n      yAxisDataSets.push({\n        yAxisChartLabel,\n        ...dataSet\n      });\n    }\n    if (dataSet.xAxisUseDataSet) {\n      xAxisDataSet = {\n        xAxisChartLabel,\n        ...dataSet\n      };\n    }\n  });\n\n  if (!yAxisDataSets.length) {\n    yAxisDataSets.push({\n      yAxisChartLabel,\n      ...dataSets?.[0]\n    });\n  } else {\n    yAxisDataSets = yAxisDataSets.slice(0, 2);\n  }\n\n  if (!xAxisDataSet) {\n    xAxisDataSet = {\n      xAxisChartLabel,\n      ...dataSets?.[0]\n    };\n  }\n\n  const updatedMaxY = (yAxisDataSets.length > 1 && individualMaxY) || maxY;\n\n  return {\n    xAxisProps: generateXAxisProps({\n      dataSet: xAxisDataSet,\n      maxX,\n      xAxisLabelIncrement,\n      xAxisPropDefaults,\n      xAxisTickFormat\n    }),\n    yAxisProps: generateYAxisProps({ dataSets: yAxisDataSets, maxY: updatedMaxY, yAxisPropDefaults, yAxisTickFormat })\n  };\n};\n\nconst chartHelpers = {\n  ChartTypeVariant,\n  generateAxisProps,\n  generateDomains,\n  generateElementsProps,\n  generateMaxXY,\n  generateTooltipData,\n  generateXAxisProps,\n  generateYAxisProps\n};\n\nexport {\n  chartHelpers as default,\n  chartHelpers,\n  ChartTypeVariant,\n  generateAxisProps,\n  generateDomains,\n  generateElementsProps,\n  generateMaxXY,\n  generateTooltipData,\n  generateXAxisProps,\n  generateYAxisProps\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EyeIcon, EyeSlashIcon, SquareIcon, IconSize } from '@patternfly/react-icons';\n\n/**\n * @memberof Chart\n * @module ChartIcon\n */\n\n/**\n * Emulate pf icon sizing for custom SVGs\n *\n * @param {string} size\n * @returns {string} em measurement\n */\nconst getSize = size => {\n  if (!Number.isNaN(Number.parseFloat(size))) {\n    return size;\n  }\n\n  switch (size) {\n    case 'md':\n      return '1.5em';\n    case 'lg':\n      return '2em';\n    case 'xl':\n      return '3em';\n    case 'sm':\n    default:\n      return '1em';\n  }\n};\n\n/**\n * Render an icon for use outside of Victory charts.\n *\n * @param {object} props\n * @param {string} props.fill\n * @param {string} props.symbol\n * @param {string} props.size\n * @param {string} props.title\n * @returns {React.ReactNode}\n */\nconst ChartIcon = ({ fill, symbol, size, title, ...props }) => {\n  const svgProps = { ...props };\n  const iconProps = { size, title, ...props };\n  const fontProps = { style: { fontSize: getSize(size) }, title, ...props };\n  const emSvgSize = getSize(size);\n\n  if (title) {\n    svgProps['aria-labelledby'] = title;\n  } else {\n    svgProps['aria-hidden'] = true;\n  }\n\n  if (fill) {\n    iconProps.color = fill;\n    fontProps.style.color = fill;\n  }\n\n  const setIcon = () => {\n    switch (symbol) {\n      case 'dash':\n        return (\n          <span\n            style={{\n              width: emSvgSize,\n              height: `${Number.parseFloat(emSvgSize) / 2}em`\n            }}\n          >\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 38 10\" role=\"img\" {...svgProps}>\n              <rect y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"14\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"28\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n            </svg>\n          </span>\n        );\n      case 'threshold':\n        return (\n          <span style={{ width: `${Number.parseFloat(emSvgSize) * 2}em`, height: emSvgSize }}>\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 18 10\" role=\"img\" {...svgProps}>\n              <line\n                x1={0}\n                y1={(Number.parseFloat(emSvgSize) * 16) / 2}\n                x2={Number.parseFloat(emSvgSize) * 16 * 3}\n                y2={(Number.parseFloat(emSvgSize) * 16) / 2}\n                stroke={fill}\n                strokeWidth={3}\n                strokeDasharray=\"4,3\"\n              />\n            </svg>\n          </span>\n        );\n      case 'eye':\n        return <EyeIcon {...iconProps} />;\n      case 'eyeSlash':\n        return <EyeSlashIcon {...iconProps} />;\n      case 'infinity':\n        return (\n          <span className=\"curiosity-icon__f-infinity\" {...fontProps}>\n            <span aria-hidden>&#x221e;</span>\n          </span>\n        );\n\n      case 'square':\n      default:\n        return <SquareIcon {...iconProps} />;\n    }\n  };\n\n  return <span className={`curiosity-chartarea__icon curiosity-chartarea__icon-${symbol}`}>{setIcon()}</span>;\n};\n\n/**\n * Prop types.\n *\n * @type {{symbol: string, size: string, fill: string, title: string}}\n */\nChartIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.oneOf([...Object.keys(IconSize)]),\n  symbol: PropTypes.oneOf(['dash', 'eye', 'eyeSlash', 'infinity', 'square', 'threshold']),\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{symbol: string, size: string, fill: null, title: null}}\n */\nChartIcon.defaultProps = {\n  fill: null,\n  size: 'sm',\n  symbol: 'square',\n  title: null\n};\n\nexport { ChartIcon as default, ChartIcon };\n","import React from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { useChartContext, useToggleData } from './chartContext';\n\n/**\n * @memberof Chart\n * @module ChartLegend\n */\n\n/**\n * Wrapper for rendering an HTML based legend.\n *\n * @returns {React.ReactNode}\n */\nconst ChartLegend = () => {\n  const { getIsToggled, onHide, onRevert, onToggle } = useToggleData();\n  const { chartSettings = {} } = useChartContext();\n  const { chartLegend, dataSets, padding = {}, xAxisProps = {} } = chartSettings;\n\n  if (!chartLegend) {\n    return null;\n  }\n\n  const legendProps = {\n    datum: { dataSets: _cloneDeep(dataSets) },\n    chart: {\n      hide: onHide,\n      revert: onRevert,\n      toggle: onToggle,\n      isToggled: getIsToggled\n    }\n  };\n\n  return (\n    <div\n      className={`curiosity-chartarea__legend${(xAxisProps?.label && '-axis-label-active') || ''}`}\n      style={{\n        marginLeft: (padding?.left && `${padding.left}px`) || 0,\n        marginRight: (padding?.right && `${padding.right}px`) || 0\n      }}\n    >\n      {(React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n        chartLegend({ ...legendProps })}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n */\nChartLegend.propTypes = {};\n\n/**\n * Default props.\n */\nChartLegend.defaultProps = {};\n\nexport { ChartLegend as default, ChartLegend };\n","import React from 'react';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Chart\n * @module ChartTooltip\n */\n\n/**\n * Note: Victory Charts components require a form of extended \"something\" applied by the consuming component.\n * This leads to odd implementations, like returning a function component.\n */\n/**\n * FixMe: The right graph boundary for tooltips is dependent on Voronoi container padding.\n * A limitation exists where Voronoi containers can only have a single padding setting. This means we use\n * the lowest number value from the \"padding\" setting. The repercussion is the right boundary either has to\n * be the lowest padding value, or equal to the lowest padding from any of the other dimensions, ie. top,\n * bottom, left.\n */\n/**\n * Allow, and return, SVG compatible HTML for in graph tooltip.\n *\n * @param {object} params\n * @param {object} params.chartSettings\n * @param {Function} params.chartContainerRef\n * @param {Function} params.chartTooltipRef\n * @param {number} params.minChartWidth\n * @returns {Function}\n */\nconst chartTooltip = ({\n  chartSettings = {},\n  chartContainerRef = helpers.noop,\n  chartTooltipRef = helpers.noop,\n  minChartWidth = 500\n} = {}) => {\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip x coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getXCoordinate = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return x + padding - tooltipWidth / 2;\n    }\n\n    return x > width / 2 ? x - tooltipWidth + padding : x + padding;\n  };\n\n  /**\n   * Return a tooltip y coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.y\n   * @param {number} params.height\n   * @param {number} params.tooltipHeight\n   * @param {number} params.width\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getYCoordinate = ({ y, height, tooltipHeight, width, padding = 15, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth) {\n      return y > height / 2 ? y - tooltipHeight - padding : y + padding;\n    }\n\n    const updatedMultiplier = height / tooltipHeight / 10;\n    const heightMultiplier = (updatedMultiplier < 0.25 && updatedMultiplier) || 0.25;\n\n    return height * heightMultiplier;\n  };\n\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip tail position CSS class.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const tailPosition = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return 'middle';\n    }\n\n    return x > width / 2 ? 'right' : 'left';\n  };\n\n  return ({ x, y, datum = {} }) => { // eslint-disable-line\n    const { padding = {}, tooltipDataSetLookUp = {} } = chartSettings;\n\n    const containerRef = chartContainerRef();\n    const tooltipRef = chartTooltipRef();\n    const updatedPadding = { bottom: 0, left: 0, right: 0, top: 0, ...padding };\n    const content = tooltipDataSetLookUp?.[datum.x]?.tooltip || '';\n    const containerBounds = containerRef?.current?.querySelector('svg')?.getBoundingClientRect() || {\n      width: 0,\n      height: 0\n    };\n\n    const tooltipBounds = tooltipRef?.current?.getBoundingClientRect() || { width: 0, height: 0 };\n\n    if (content) {\n      const isOutsideGraphBottom = y > containerBounds.height - updatedPadding.bottom;\n      const isOutsideGraphLeft = x < updatedPadding.left;\n      const isOutsideGraphRight = x > containerBounds.width - updatedPadding.right;\n      const isOutsideGraphTop = y < updatedPadding.top;\n      const updatedClassName = `${(tooltipBounds.height <= 0 && 'fadein') || ''}`;\n\n      return (\n        <g>\n          <foreignObject\n            x={getXCoordinate({ x, width: containerBounds.width, tooltipWidth: tooltipBounds.width })}\n            y={getYCoordinate({\n              y,\n              height: containerBounds.height,\n              tooltipHeight: tooltipBounds.height,\n              width: containerBounds.width\n            })}\n            width=\"100%\"\n            height=\"100%\"\n          >\n            <div\n              className={`curiosity-chartarea__tooltip-container ${updatedClassName}`}\n              ref={tooltipRef}\n              style={{\n                display:\n                  ((isOutsideGraphBottom || isOutsideGraphLeft || isOutsideGraphRight || isOutsideGraphTop) &&\n                    'none') ||\n                  'inline-block'\n              }}\n              xmlns=\"http://www.w3.org/1999/xhtml\"\n            >\n              <div\n                className={`curiosity-chartarea__tooltip curiosity-chartarea__tooltip-${tailPosition({\n                  x,\n                  y,\n                  width: containerBounds.width,\n                  tooltipWidth: tooltipBounds.width\n                })}`}\n              >\n                {content}\n              </div>\n            </div>\n          </foreignObject>\n        </g>\n      );\n    }\n\n    return <g />;\n  };\n};\n\nexport { chartTooltip as default, chartTooltip };\n","import { helpers } from '../../common/helpers';\n\n/**\n * A consistent mock event object to enhance PF and testing.\n *\n * @memberof Form\n * @module FormHelpers\n */\n\n/**\n * Create a consistent mock event object modeled on JS behavior.\n *\n * @param {object} event\n * @param {boolean} persistEvent\n * @returns {{keyCode, currentTarget: {}, name, checked: *, id: *, persist: Function, value, target: {}}}\n */\nconst createMockEvent = (event, persistEvent = false) => {\n  const { checked, currentTarget = {}, keyCode, persist = helpers.noop, target = {} } = { ...event };\n  let updatedCurrentTarget = currentTarget;\n  if (persistEvent) {\n    persist();\n  }\n\n  if (helpers.TEST_MODE) {\n    updatedCurrentTarget = target;\n  }\n\n  return {\n    checked: checked ?? updatedCurrentTarget?.checked,\n    currentTarget: updatedCurrentTarget,\n    keyCode,\n    id: updatedCurrentTarget.id || updatedCurrentTarget.name,\n    name: updatedCurrentTarget.name,\n    persist,\n    value: currentTarget.value,\n    target\n  };\n};\n\n/**\n * Confirm a string has minimum length.\n *\n * @param {string} value\n * @param {number} characters\n * @returns {boolean}\n */\nconst doesNotHaveMinimumCharacters = (value, characters = 1) =>\n  (typeof value === 'string' && value.length < characters) || typeof value !== 'string';\n\nconst formHelpers = {\n  createMockEvent,\n  doesNotHaveMinimumCharacters\n};\n\nexport { formHelpers as default, formHelpers, createMockEvent, doesNotHaveMinimumCharacters };\n","import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useShallowCompareEffect, useUnmount } from 'react-use';\nimport {\n  ButtonVariant as PfButtonVariant,\n  Dropdown,\n  DropdownDirection,\n  DropdownItem,\n  DropdownPosition,\n  DropdownToggle,\n  DropdownToggleAction,\n  DropdownToggleCheckbox,\n  Select as PfSelect,\n  SelectOption as PfSelectOption,\n  SelectVariant\n} from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _findIndex from 'lodash/findIndex';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _memoize from 'lodash/memoize';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A bundled wrapper for PF Select, Dropdown.\n *\n * @memberof Form\n * @module Select\n */\n\n/**\n * Dropdown split button variants\n *\n * @type {{action: string, checkbox: string}}\n */\nconst SplitButtonVariant = {\n  action: 'action',\n  checkbox: 'checkbox'\n};\n\n/**\n * Dropdown toggle button variants\n *\n * @type {{secondary: string, default: string, plain: string, text: string, primary: string}}\n */\nconst ButtonVariant = PfButtonVariant;\n\n/**\n * Pass button variant as a select component option.\n *\n * @type {{secondary: string, default: string, plain: string, text: string, primary: string}}\n */\nconst SelectButtonVariant = ButtonVariant;\n\n/**\n * Pass direction as select component variant option.\n *\n * @type {{down: string, up: string}}\n */\nconst SelectDirection = DropdownDirection;\n\n/**\n * Pass position as select component variant option.\n *\n * @type {{left: string, right: string}}\n */\nconst SelectPosition = DropdownPosition;\n\n/**\n * FixMe: attributes on PF select and dropdown components do not allow data- attributes being passed\n * FixMe: PF dropdown, select attempt to break the ref attribute?\n * Moving from a class to func wrapper exposes a PF \"special props warning\", https://bit.ly/2n0hzWo\n */\n/**\n * Format options into a consumable array of objects.\n * Note: It is understood that for line 83'ish around \"updatedOptions\" we dump all values regardless\n * of whether they are plain objects, or not, into updatedOptions. This has been done for speed only,\n * one less check to perform.\n *\n * @param {object} params\n * @param {*|React.ReactNode} params.selectField\n * @param {object|Array} params.options\n * @param {string|number|Array} params.selectedOptions\n * @param {string} params.variant\n * @param {object} params.props\n * @returns {{options: Array|any, selected: Array}}\n */\nconst formatOptions = ({ selectField = { current: null }, options, selectedOptions, variant, ...props } = {}) => {\n  const { current: domElement = {} } = selectField;\n  const dataAttributes = Object.entries(props).filter(([key]) => /^data-/i.test(key));\n  const updatedOptions =\n    (_isPlainObject(options) && Object.entries(options).map(([key, value]) => ({ ...value, title: key, value }))) ||\n    (options && _cloneDeep(options)) ||\n    [];\n  const isSelectedOptionsStringNumber = typeof selectedOptions === 'string' || typeof selectedOptions === 'number';\n  const activateOptions =\n    (Array.isArray(selectedOptions) && selectedOptions) || (isSelectedOptionsStringNumber && [selectedOptions]) || [];\n\n  updatedOptions.forEach((option, index) => {\n    let convertedOption = option;\n\n    if (typeof convertedOption === 'string') {\n      convertedOption = {\n        title: option,\n        value: option\n      };\n\n      updatedOptions[index] = convertedOption;\n    } else if (typeof convertedOption.title === 'function') {\n      convertedOption.title = convertedOption.title();\n    }\n\n    convertedOption.text = convertedOption.text || convertedOption.title;\n    convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n    convertedOption.label = convertedOption.label || convertedOption.title;\n\n    if (activateOptions.length) {\n      let isSelected;\n\n      if (_isPlainObject(convertedOption.value)) {\n        isSelected = _findIndex(activateOptions, convertedOption.value) > -1;\n\n        if (!isSelected) {\n          const tempSearch = activateOptions.find(activeOption =>\n            Object.values(convertedOption.value).includes(activeOption)\n          );\n          isSelected = !!tempSearch;\n        }\n      } else {\n        isSelected = activateOptions.includes(convertedOption.value);\n      }\n\n      if (!isSelected) {\n        isSelected = activateOptions.includes(convertedOption.title);\n      }\n\n      updatedOptions[index].selected = isSelected;\n    }\n  });\n\n  let updateSelected;\n\n  if (variant === SelectVariant.single) {\n    updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n  } else {\n    updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n  }\n\n  if (domElement?.firstChild) {\n    dataAttributes.forEach(([key, value]) => domElement?.firstChild.setAttribute(key, value));\n  }\n\n  return {\n    options: updatedOptions,\n    selected: updateSelected\n  };\n};\n\n/**\n * Return assumed/expected PF select props.\n *\n * @param {object} params\n * @param {boolean} params.isDisabled\n * @param {string} params.placeholder\n * @param {object|Array} params.options\n * @returns {{}}\n */\nconst formatSelectProps = _memoize(({ isDisabled, placeholder, options } = {}) => {\n  const updatedProps = {};\n\n  if (!options || !options.length || isDisabled) {\n    updatedProps.isDisabled = true;\n  }\n\n  if (typeof placeholder === 'string' && placeholder) {\n    updatedProps.hasPlaceholderStyle = true;\n  }\n\n  return updatedProps;\n});\n\n/**\n * Format consistent dropdown button props.\n *\n * @param {object} params\n * @param {boolean} params.isDisabled\n * @param {Array} params.options\n * @param {string} params.buttonVariant\n * @param {Function} params.onSplitButton\n * @param {string} params.splitButtonCopy\n * @param {string} params.splitButtonVariant\n * @returns {*}\n */\nconst formatButtonProps = _memoize(\n  ({ isDisabled, options, buttonVariant, onSplitButton, splitButtonCopy, splitButtonVariant } = {}) => {\n    const buttonVariantPropLookup = {\n      default: { toggleVariant: 'default' },\n      plain: { isPlain: true, toggleIndicator: null },\n      primary: { toggleVariant: 'primary' },\n      secondary: { toggleVariant: 'secondary' },\n      text: { isText: true }\n    };\n\n    const splitButtonVariantPropLookup = {\n      action: {\n        splitButtonVariant: 'action',\n        splitButtonItems: [\n          <DropdownToggleAction onClick={onSplitButton} key=\"toggle-action\">\n            {splitButtonCopy}\n          </DropdownToggleAction>\n        ]\n      },\n      checkbox: {\n        splitButtonVariant: 'checkbox',\n        splitButtonItems: [\n          <DropdownToggleCheckbox\n            id={`toggle-action-${splitButtonCopy}`}\n            key=\"toggle-action\"\n            onClick={onSplitButton}\n            aria-label={splitButtonCopy}\n            placeholder={splitButtonCopy}\n          />\n        ]\n      }\n    };\n\n    const updatedProps = {\n      ...buttonVariantPropLookup[buttonVariant],\n      ...splitButtonVariantPropLookup[splitButtonVariant]\n    };\n\n    if (!options || !options.length || isDisabled) {\n      updatedProps.isDisabled = true;\n    }\n\n    return updatedProps;\n  }\n);\n\n/**\n * FixMe: PF has an inconsistency in how it applies props for the dropdown\n * Sometimes those props are on the toggle, sometimes those props are on the parent, little bit of guesswork.\n * Additionally, it's not filtering props so you'll throw the \"[HTML doesn't recognize attribute]\" error.\n */\n/**\n * Fix pf props inconsistency for dropdown button props.\n *\n * @param {object} formattedButtonProps\n * @returns {*}\n */\nconst formatButtonParentProps = (formattedButtonProps = {}) => {\n  const updatedButtonProps = formatButtonProps(formattedButtonProps);\n  delete updatedButtonProps.isDisabled;\n  delete updatedButtonProps.toggleIndicator;\n\n  return updatedButtonProps;\n};\n\n/**\n * A wrapper for Pf Select, and emulator for Pf Dropdown. Provides consistent restructured event data for onSelect callback\n * for both select and dropdown.\n *\n * @fires onDropdownSelect\n * @fires onSplitButton\n * @fires onToggle\n * @param {object} props\n * @param {string} props.ariaLabel\n * @param {string} props.buttonVariant\n * @param {string} props.className\n * @param {string} props.direction\n * @param {string} props.id\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isDropdownButton\n * @param {boolean} props.isFlipEnabled\n * @param {boolean} props.isInline\n * @param {boolean} props.isToggleText\n * @param {number} props.maxHeight\n * @param {string} props.name\n * @param {Function} props.onSelect\n * @param {Function} props.onSplitButton\n * @param {object|Array} props.options\n * @param {string} props.placeholder\n * @param {string} props.position\n * @param {number|string|Array} props.selectedOptions\n * @param {string} props.splitButtonVariant\n * @param {React.ReactNode|Function} props.toggleIcon\n * @param {string} props.variant\n * @param {object} props.props\n * @returns {React.ReactNode}\n */\nconst Select = ({\n  ariaLabel,\n  buttonVariant,\n  className,\n  direction,\n  id,\n  isDisabled,\n  isDropdownButton,\n  isFlipEnabled,\n  isInline,\n  isToggleText,\n  maxHeight,\n  name,\n  onSelect,\n  onSplitButton,\n  options: baseOptions,\n  placeholder,\n  position,\n  selectedOptions,\n  splitButtonVariant,\n  toggleIcon,\n  variant,\n  ...props\n}) => {\n  const [isMounted, setIsMounted] = useState();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [options, setOptions] = useState(baseOptions);\n  const [selected, setSelected] = useState([]);\n  const selectField = useRef();\n\n  useUnmount(() => {\n    setIsMounted(false);\n  });\n\n  useShallowCompareEffect(() => {\n    if (isMounted !== false) {\n      const { options: updatedOptions, selected: updatedSelected } = formatOptions({\n        selectField,\n        options: baseOptions,\n        selectedOptions,\n        variant,\n        ...props\n      });\n      setOptions(updatedOptions);\n      setSelected(updatedSelected);\n    }\n  }, [baseOptions, props, selectField, selectedOptions, variant]);\n\n  /**\n   * Open/closed state.\n   *\n   * @event onToggle\n   * @param {boolean} expanded\n   */\n  const onToggle = expanded => {\n    setIsExpanded(expanded);\n  };\n\n  /**\n   * Split button event handler.\n   *\n   * @event onSplitButton\n   * @param {object} event\n   */\n  const onUpdatedSplitButton = event => {\n    const updatedOptions = _cloneDeep(options);\n    onSplitButton({ ...createMockEvent(event), options: updatedOptions }, -1, updatedOptions);\n  };\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onDropdownSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  const onDropdownSelect = (event, titleSelection) => {\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(\n      option =>\n        (titleSelection && option.title === titleSelection) ||\n        event.currentTarget.querySelector('[data-title]')?.getAttribute('data-title') === option.title ||\n        event.currentTarget.innerText === option.title\n    );\n\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n    const mockTarget = {\n      id,\n      name: name || id,\n      value: mockUpdatedOptions[optionsIndex].value,\n      selected: (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n      selectedIndex: optionsIndex,\n      type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n      options: mockUpdatedOptions\n    };\n\n    if (variant === SelectVariant.checkbox) {\n      mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n    }\n\n    const mockEvent = {\n      ...mockTarget,\n      target: { ...mockTarget },\n      currentTarget: { ...mockTarget },\n      persist: helpers.noop\n    };\n\n    setOptions(updatedOptions);\n    setSelected(updateSelected);\n\n    onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n    if (variant === SelectVariant.single) {\n      setIsExpanded(false);\n    }\n  };\n\n  /**\n   * Apply dropdown.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderDropdownButton = () => (\n    <Dropdown\n      direction={direction}\n      isFlipEnabled={isFlipEnabled}\n      isOpen={isExpanded}\n      position={position}\n      toggle={\n        <DropdownToggle\n          onToggle={onToggle}\n          {...formatButtonProps({\n            isDisabled,\n            onSplitButton: onUpdatedSplitButton,\n            options,\n            buttonVariant,\n            splitButtonCopy: placeholder || ariaLabel,\n            splitButtonVariant\n          })}\n        >\n          {(!splitButtonVariant && placeholder) || (!SplitButtonVariant && ariaLabel)}\n        </DropdownToggle>\n      }\n      dropdownItems={\n        options?.map(option => (\n          <DropdownItem\n            onClick={onDropdownSelect}\n            key={window.btoa(`${option.title}-${option.value}`)}\n            id={window.btoa(`${option.title}-${option.value}`)}\n            data-value={(_isPlainObject(option.value) && JSON.stringify([option.value])) || option.value}\n            data-title={option.title}\n            data-description={option.description}\n            description={option.description}\n          >\n            {option.title}\n          </DropdownItem>\n        )) || []\n      }\n      {...formatButtonParentProps({ buttonVariant })}\n      {...props}\n    />\n  );\n\n  /**\n   * Apply select.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderSelect = () => (\n    <PfSelect\n      className={`curiosity-select-pf${(!isToggleText && '__no-toggle-text') || ''} ${\n        (direction === SelectDirection.down && 'curiosity-select-pf__position-down') || ''\n      } ${(position === SelectPosition.right && 'curiosity-select-pf__position-right') || ''} ${className}`}\n      variant={variant}\n      aria-label={ariaLabel}\n      onToggle={onToggle}\n      onSelect={onDropdownSelect}\n      selections={selected}\n      isFlipEnabled={isFlipEnabled}\n      isOpen={isExpanded}\n      toggleIcon={toggleIcon}\n      placeholderText={(typeof placeholder === 'string' && placeholder) || undefined}\n      {...{\n        direction,\n        maxHeight,\n        ...formatSelectProps({\n          isDisabled,\n          options: baseOptions,\n          placeholder\n        })\n      }}\n      {...props}\n    >\n      {options?.map(option => (\n        <PfSelectOption\n          key={window.btoa(`${option.title}-${option.value}`)}\n          id={window.btoa(`${option.title}-${option.value}`)}\n          value={option.title}\n          data-value={(_isPlainObject(option.value) && JSON.stringify([option.value])) || option.value}\n          data-title={option.title}\n          data-description={option.description}\n        />\n      )) || []}\n    </PfSelect>\n  );\n\n  return (\n    <div\n      ref={selectField}\n      className={`curiosity-select${(isInline && ' curiosity-select__inline') || ' curiosity-select__not-inline'}`}\n    >\n      {(isDropdownButton && renderDropdownButton()) || renderSelect()}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{isFlipEnabled: boolean, toggleIcon: (React.ReactNode|Function), className: string, onSplitButton: Function, ariaLabel: string,\n *     onSelect: Function, isToggleText: boolean, isDropdownButton: boolean, maxHeight: number, buttonVariant: string, name: string,\n *     options: Array|object, selectedOptions: Array|number|string, variant: string, isInline: boolean, id: string, isDisabled: boolean,\n *     placeholder: string, position: string, splitButtonVariant: string, direction: string}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  buttonVariant: PropTypes.oneOf(Object.values(ButtonVariant)),\n  className: PropTypes.string,\n  direction: PropTypes.oneOf(Object.values(SelectDirection)),\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isDropdownButton: PropTypes.bool,\n  isFlipEnabled: PropTypes.bool,\n  isInline: PropTypes.bool,\n  isToggleText: PropTypes.bool,\n  maxHeight: PropTypes.number,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  onSplitButton: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        description: PropTypes.any,\n        selected: PropTypes.bool,\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired\n      })\n    ),\n    PropTypes.shape({\n      description: PropTypes.any,\n      selected: PropTypes.bool,\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired\n    }),\n    PropTypes.object\n  ]),\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.any]),\n  position: PropTypes.oneOf(Object.values(SelectPosition)),\n  selectedOptions: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]))\n  ]),\n  splitButtonVariant: PropTypes.oneOf(Object.values(SplitButtonVariant)),\n  toggleIcon: PropTypes.element,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{isFlipEnabled: boolean, toggleIcon: null, className: string, onSplitButton: Function, ariaLabel: string, onSelect: Function,\n *     isToggleText: boolean, isDropdownButton: boolean, maxHeight: null, buttonVariant: string, name: null, options: Array,\n *     selectedOptions: null, variant: SelectVariant.single, isInline: boolean, id: string, isDisabled: boolean, placeholder: string,\n *     position: string, splitButtonVariant: null, direction: string}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  buttonVariant: ButtonVariant.default,\n  className: '',\n  direction: SelectDirection.down,\n  id: helpers.generateId(),\n  isDisabled: false,\n  isDropdownButton: false,\n  isFlipEnabled: false,\n  isInline: true,\n  isToggleText: true,\n  maxHeight: null,\n  name: null,\n  onSelect: helpers.noop,\n  onSplitButton: helpers.noop,\n  options: [],\n  placeholder: 'Select option',\n  position: SelectPosition.left,\n  selectedOptions: null,\n  splitButtonVariant: null,\n  toggleIcon: null,\n  variant: SelectVariant.single\n};\n\nexport {\n  Select as default,\n  Select,\n  ButtonVariant,\n  formatOptions,\n  formatButtonProps,\n  formatSelectProps,\n  SelectDirection,\n  SelectPosition,\n  SelectVariant,\n  SelectButtonVariant,\n  SplitButtonVariant\n};\n","import moment from 'moment';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { ChartTypeVariant } from '../chart/chart';\nimport {\n  RHSM_API_QUERY_CATEGORY_TYPES as CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * @memberof GraphCard\n * @module GraphCardHelpers\n */\n\n/**\n * Generate a consistent chart identifier from API.\n *\n * @param {object} params\n * @param {boolean} params.isCapacity\n * @param {string} params.metric\n * @param {string} params.productId\n * @param {object} params.query\n * @returns {string}\n */\nconst generateChartIds = ({ isCapacity, metric, productId, query = {} } = {}) => {\n  const metricCategory = query?.[RHSM_API_QUERY_SET_TYPES.CATEGORY] || undefined;\n  const billingCategory = query?.[RHSM_API_QUERY_SET_TYPES.BILLING_CATEGORY] || undefined;\n  return `${(isCapacity && 'threshold_') || ''}${metric}${(billingCategory && `_${billingCategory}`) || ''}${\n    (metricCategory && `_${metricCategory}`) || ''\n  }${(productId && `_${productId}`) || ''}`;\n};\n\n/**\n * Is metric associated with a toolbar filter\n *\n * @param {object} params\n * @param {object} params.query\n * @returns {boolean}\n */\nconst generateIsToolbarFilter = ({ query = {} } = {}) => (query?.[RHSM_API_QUERY_SET_TYPES.CATEGORY] && true) || false;\n\n/**\n * ToDo: clean up remaining isStandalone, metric props.\n * These two properties were used to distinguish the previous product config graph card\n * layouts.\n * - isStandalone: undefined,\n * - metric: undefined,\n */\n/**\n * Update chart/graph filters with core settings and styling.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.settings\n * @param {string} params.productId\n * @returns {{standaloneFilters: Array, groupedFilters: object}}\n */\nconst generateChartSettings = ({ filters = [], settings: graphCardSettings = {}, productId } = {}) => {\n  const filtersSettings = [];\n  const filter = ({ metric, settings: combinedSettings, ...filterSettings } = {}) => {\n    if (!metric) {\n      return;\n    }\n    const { isMultiMetric, isFirst, isLast, ...remainingCombinedSettings } = combinedSettings;\n    const updatedChartType = filterSettings?.chartType || ChartTypeVariant.area;\n    const isThreshold = filterSettings?.chartType === ChartTypeVariant.threshold;\n    const isAxisLabel =\n      remainingCombinedSettings?.yAxisChartLabel ||\n      remainingCombinedSettings?.xAxisChartLabel ||\n      filterSettings?.yAxisChartLabel ||\n      filterSettings?.xAxisChartLabel;\n    const baseFilterSettings = {\n      chartType: updatedChartType,\n      id: generateChartIds({ isCapacity: isThreshold, metric, productId, query: filterSettings?.query }),\n      isStacked: !isThreshold,\n      isThreshold,\n      isCapacity: isThreshold,\n      metric,\n      strokeWidth: 2,\n      isToolbarFilter: generateIsToolbarFilter({ query: filterSettings?.query })\n    };\n\n    if (isThreshold) {\n      baseFilterSettings.stroke = chartColorGreenDark.value;\n      baseFilterSettings.strokeDasharray = '4,3';\n      baseFilterSettings.strokeWidth = 3;\n    }\n\n    if (isFirst) {\n      filtersSettings.push({\n        settings: {\n          ...(isAxisLabel && {\n            padding: {\n              bottom: 75,\n              left: 75,\n              right: 45,\n              top: 45\n            }\n          }),\n          ...remainingCombinedSettings,\n          isMetricDisplay: remainingCombinedSettings?.isMetricDisplay ?? remainingCombinedSettings?.cards?.length > 0,\n          isMultiMetric,\n          isStandalone: undefined,\n          metric: undefined,\n          groupMetric: new Set([metric]),\n          metrics: [\n            {\n              ...baseFilterSettings,\n              ...filterSettings\n            }\n          ],\n          productId,\n          stringId: baseFilterSettings.id\n        }\n      });\n    } else {\n      const currentLastFiltersSettingsEntry = filtersSettings?.[filtersSettings.length - 1]?.settings;\n\n      if (currentLastFiltersSettingsEntry) {\n        currentLastFiltersSettingsEntry.groupMetric.add(metric);\n        currentLastFiltersSettingsEntry.metrics.push({\n          ...baseFilterSettings,\n          ...filterSettings\n        });\n      }\n    }\n\n    if (isLast) {\n      const lastFiltersSettingsEntry = filtersSettings?.[filtersSettings.length - 1]?.settings;\n      lastFiltersSettingsEntry.groupMetric = Array.from(lastFiltersSettingsEntry?.groupMetric).sort();\n\n      if (lastFiltersSettingsEntry.isMultiMetric) {\n        lastFiltersSettingsEntry.stringId = `${lastFiltersSettingsEntry.groupMetric.join('_')}_${\n          lastFiltersSettingsEntry.productId\n        }`;\n      }\n    }\n  };\n\n  filters.forEach(({ filters: groupedMetrics, settings: groupedMetricsSettings, ...remainingSettings }) => {\n    if (Array.isArray(groupedMetrics)) {\n      groupedMetrics.forEach((metricFilter, index) => {\n        filter({\n          ...remainingSettings,\n          ...metricFilter,\n          settings: {\n            ...graphCardSettings,\n            ...remainingSettings,\n            ...groupedMetricsSettings,\n            ...metricFilter,\n            isFirst: index === 0,\n            isLast: groupedMetrics.length - 1 === index,\n            isMultiMetric: groupedMetrics.length > 1\n          }\n        });\n      });\n      return;\n    }\n\n    filter({\n      ...remainingSettings,\n      settings: {\n        ...graphCardSettings,\n        ...remainingSettings,\n        isFirst: true,\n        isLast: true,\n        isMultiMetric: false\n      }\n    });\n  });\n\n  return {\n    filtersSettings\n  };\n};\n\n/**\n * Returns x-axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity } = {}) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x-axis ticks.\n *\n * @param {object} params\n * @param {Function} params.callback\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ callback, date, granularity, tick, previousDate } = {}) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  if (typeof callback === 'function') {\n    return callback({ callback, date, granularity, tick, previousDate });\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y-axis ticks.\n *\n * @param {object} params\n * @param {Function} params.callback\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormat = ({ callback, tick } = {}) => {\n  if (typeof callback === 'function') {\n    return callback({ tick });\n  }\n\n  return helpers\n    .numberDisplay(tick)\n    ?.format({\n      average: true,\n      mantissa: 1,\n      trimMantissa: true,\n      lowPrecision: false\n    })\n    ?.toUpperCase();\n};\n\n/**\n * Generate base chart component props.\n *\n * @param {object} params\n * @param {object} params.settings\n * @param {string} params.granularity\n * @returns {object}\n */\nconst generateExtendedChartSettings = ({ settings, granularity } = {}) => ({\n  ...settings,\n  xAxisLabelIncrement: settings?.xAxisLabelIncrement ?? getChartXAxisLabelIncrement(granularity),\n  xAxisTickFormat: ({ item, previousItem, tick }) =>\n    xAxisTickFormat({\n      callback: settings?.xAxisTickFormat,\n      tick,\n      date: item.date,\n      previousDate: previousItem.date,\n      granularity\n    }),\n  yAxisTickFormat: ({ tick }) =>\n    yAxisTickFormat({\n      callback: settings?.yAxisTickFormat,\n      tick\n    })\n});\n\n/**\n * Get either the current or last date available data.\n *\n * @param {object} params\n * @param {Array} params.data\n * @param {boolean} params.isCurrent\n * @returns {{date: string, hasData: boolean, value: number}}\n */\nconst getMetricTotalCurrentOrLastData = helpers.memo(\n  ({ data, isCurrent = false } = {}) => {\n    const {\n      date: currentDate,\n      hasData: currentHasData,\n      y: currentValue\n    } = data.find(({ isCurrentDate }) => isCurrentDate === true) || {};\n    const { date: lastDate, hasData: lastHasData, y: lastValue } = data[data.length - 1] || {};\n\n    const date = isCurrent ? currentDate : lastDate;\n    const hasData = isCurrent ? currentHasData : lastHasData;\n    const value = isCurrent ? currentValue : lastValue;\n\n    return {\n      date,\n      hasData,\n      value\n    };\n  },\n  { cacheLimit: 3 }\n);\n\n/**\n * Get daily and monthly totals from a data set. A metric totals helper.\n *\n * @param {object} params\n * @param {object} params.dataSet\n * @param {boolean} params.isCurrent Is the current value the \"current month\". A proxy value passed through \"graphCardMetricTotals\"\n * @returns {{chartId: string, metricId: string, monthlyHasData: boolean, dailyValue: number, dailyDate: string,\n *     monthlyValue: number, monthlyDate: string, dailyHasData: boolean}}\n */\nconst getDailyMonthlyTotals = helpers.memo(\n  ({ dataSet, isCurrent = false } = {}) => {\n    const { data = [], meta = {} } = dataSet || {};\n    const {\n      totalMonthlyDate: monthlyDate,\n      totalMonthlyHasData: monthlyHasData,\n      totalMonthlyValue: monthlyValue\n    } = meta;\n\n    const {\n      date: dailyDate,\n      hasData: dailyHasData,\n      value: dailyValue\n    } = getMetricTotalCurrentOrLastData({ data, isCurrent });\n\n    return {\n      dailyDate,\n      dailyHasData,\n      dailyValue,\n      monthlyDate,\n      monthlyHasData,\n      monthlyValue\n    };\n  },\n  { cacheLimit: 3 }\n);\n\n/**\n * Get the first available prepaid Tally, Capacity data sets\n *\n * @param {object} params\n * @param {Array} params.data\n * @returns {{capacityData: object, tallyData: object}}\n */\nconst getPrepaidTallyCapacity = helpers.memo(\n  ({ data = [] } = {}) => ({\n    capacityData: data.find(({ chartType }) => new RegExp(ChartTypeVariant.threshold, 'i').test(chartType))?.data,\n    tallyData: data.find(({ id }) => new RegExp(CATEGORY_TYPES.PREPAID, 'i').test(id))?.data\n  }),\n  { cacheLimit: 3 }\n);\n\n/**\n * Get a remaining capacity from data sets. A metric totals helper.\n *\n * @param {object} params\n * @param {Array} params.capacityData\n * @param {Array} params.tallyData\n * @param {boolean} params.isCurrent Is the current value the \"current month\". A proxy value passed through \"graphCardMetricTotals\"\n * @returns {{remainingCapacityHasData: boolean, remainingCapacity: number}}\n */\nconst getRemainingCapacity = helpers.memo(\n  ({ capacityData = [], tallyData = [], isCurrent = false } = {}) => {\n    const { hasData: capacityHasData, value: capacityValue } = getMetricTotalCurrentOrLastData({\n      data: capacityData,\n      isCurrent\n    });\n    const { hasData: tallyHasData, value: tallyValue } = getMetricTotalCurrentOrLastData({\n      data: tallyData,\n      isCurrent\n    });\n    const response = {\n      remainingCapacityHasData: capacityHasData && tallyHasData,\n      remainingCapacity: null\n    };\n\n    if (response.remainingCapacityHasData) {\n      response.remainingCapacity = Number.parseInt(capacityValue, 10) - Number.parseInt(tallyValue, 10) || 0;\n\n      if (!(response.remainingCapacity >= 0)) {\n        response.remainingCapacity = 0;\n      }\n    }\n\n    return response;\n  },\n  { cacheLimit: 3 }\n);\n\n/**\n * Get a remaining overage from data sets. A metric totals helper.\n *\n * @param {object} params\n * @param {Array} params.capacityData\n * @param {Array} params.tallyData\n * @param {boolean} params.isCurrent Is the current value the \"current month\". A proxy value passed through \"graphCardMetricTotals\"\n * @returns {{remainingOverage: number, remainingOverageHasData: boolean}}\n */\nconst getRemainingOverage = helpers.memo(\n  ({ capacityData = [], tallyData = [], isCurrent = false } = {}) => {\n    const { hasData: capacityHasData, value: capacityValue } = getMetricTotalCurrentOrLastData({\n      data: capacityData,\n      isCurrent\n    });\n    const { hasData: tallyHasData, value: tallyValue } = getMetricTotalCurrentOrLastData({\n      data: tallyData,\n      isCurrent\n    });\n    const response = {\n      remainingOverageHasData: capacityHasData && tallyHasData,\n      remainingOverage: null\n    };\n\n    if (response.remainingOverageHasData) {\n      response.remainingOverage = Number.parseInt(tallyValue, 10) - Number.parseInt(capacityValue, 10) || 0;\n\n      if (!(response.remainingOverage >= 0)) {\n        response.remainingOverage = 0;\n      }\n    }\n\n    return response;\n  },\n  { cacheLimit: 3 }\n);\n\nconst graphCardHelpers = {\n  generateChartIds,\n  generateChartSettings,\n  generateExtendedChartSettings,\n  generateIsToolbarFilter,\n  getChartXAxisLabelIncrement,\n  getDailyMonthlyTotals,\n  getMetricTotalCurrentOrLastData,\n  getPrepaidTallyCapacity,\n  getRemainingCapacity,\n  getRemainingOverage,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  generateChartIds,\n  generateChartSettings,\n  generateExtendedChartSettings,\n  generateIsToolbarFilter,\n  getChartXAxisLabelIncrement,\n  getDailyMonthlyTotals,\n  getMetricTotalCurrentOrLastData,\n  getPrepaidTallyCapacity,\n  getRemainingCapacity,\n  getRemainingOverage,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-http-backend';\nimport { initReactI18next } from 'react-i18next';\nimport { useMount } from 'react-use';\nimport { helpers } from '../../common/helpers';\nimport { EMPTY_CONTEXT, translate, translateComponent } from './i18nHelpers';\n\n/**\n * Populate, load, remote locale strings.\n *\n * @memberof Components\n * @module i18n\n * @property {module} i18nHelpers\n */\n\n/**\n * Load I18n.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.fallbackLng\n * @param {string} props.loadPath\n * @param {string} props.locale\n * @returns {React.ReactNode}\n */\nconst I18n = ({ children, fallbackLng, loadPath, locale }) => {\n  const [initialized, setInitialized] = useState(false);\n\n  /**\n   * Initialize i18next\n   */\n  useMount(async () => {\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: undefined,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      //\n    }\n\n    setInitialized(true);\n  });\n\n  /**\n   * Update locale.\n   */\n  useEffect(() => {\n    if (initialized && locale) {\n      try {\n        i18next.changeLanguage(locale);\n      } catch (e) {\n        //\n      }\n    }\n  }, [initialized, locale]);\n\n  // eslint-disable-next-line react/jsx-no-useless-fragment\n  return (initialized && children) || <React.Fragment />;\n};\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: React.ReactNode, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent, EMPTY_CONTEXT };\n","import React from 'react';\nimport i18next from 'i18next';\nimport { Trans } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\n/**\n * @memberof i18n\n * @module i18nHelpers\n */\n\n/**\n * Check to help provide an empty context.\n *\n * @type {string}\n */\nconst EMPTY_CONTEXT = 'LOCALE_EMPTY_CONTEXT';\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string|Array} key\n * @param {string|object|Array} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) => {\n  const updatedKey = (Array.isArray(key) && `[${key}]`) || key;\n  const updatedValue =\n    (typeof value === 'string' && value) ||\n    (Array.isArray(value) && `[${value}]`) ||\n    (Object.keys(value || '').length && JSON.stringify(value)) ||\n    '';\n  const updatedComponents = (components && `${components}`) || '';\n\n  return `t(${updatedKey}${(updatedValue && `, ${updatedValue}`) || ''}${\n    (updatedComponents && `, ${updatedComponents}`) || ''\n  })`;\n};\n\n/**\n * Split a string on underscore.\n *\n * @param {string} value\n * @param {object} settings\n * @param {string} settings.emptyContextValue\n * @returns {string|string[]}\n */\nconst splitContext = (value, { emptyContextValue = EMPTY_CONTEXT } = {}) => {\n  if (typeof value === 'string' && value !== emptyContextValue && /_/.test(value)) {\n    return value.split('_');\n  }\n  return value;\n};\n\n/**\n * Parse extend context arrays/lists, and apply values to a concatenated translate key.\n *\n * @param {string|Array} translateKey\n * @param {*|string|Array} context\n * @param {object} settings\n * @param {string} settings.emptyContextValue\n * @param {Function} settings.splitContext\n * @returns {{translateKey: string, context: (string|string[])}}\n */\nconst parseContext = (\n  translateKey,\n  context,\n  { emptyContextValue = EMPTY_CONTEXT, splitContext: aliasSplitContext = splitContext } = {}\n) => {\n  let updatedTranslateKey = translateKey;\n  let updatedContext = context;\n\n  if (updatedContext) {\n    updatedContext = aliasSplitContext(updatedContext);\n  }\n\n  if (Array.isArray(updatedContext)) {\n    const tempContext = updatedContext\n      .map(value => (value === emptyContextValue && ' ') || aliasSplitContext(value))\n      .flat()\n      .filter(value => typeof value === 'string' && value.length > 0);\n\n    if (tempContext?.length > 1) {\n      const lastContext = tempContext.pop();\n\n      if (Array.isArray(updatedTranslateKey)) {\n        updatedTranslateKey = updatedTranslateKey.map(value => `${value}_${tempContext.join('_')}`);\n      } else {\n        updatedTranslateKey = `${updatedTranslateKey}_${tempContext.join('_')}`;\n      }\n\n      updatedContext = lastContext;\n    } else {\n      updatedContext = tempContext.join('_');\n    }\n  } else if (updatedContext === emptyContextValue) {\n    updatedContext = ' ';\n  }\n\n  return {\n    context: updatedContext,\n    translateKey: updatedTranslateKey\n  };\n};\n\n/**\n * Parse a translation key. If an array, filter for defined strings.\n *\n * @param {*|string|Array} translateKey\n * @returns {*}\n */\nconst parseTranslateKey = translateKey => {\n  let updatedTranslateKey = translateKey;\n\n  if (Array.isArray(updatedTranslateKey)) {\n    updatedTranslateKey = updatedTranslateKey.filter(value => typeof value === 'string' && value.length > 0);\n  }\n\n  return updatedTranslateKey;\n};\n\n/**\n * Return a test element wrapper;\n *\n * @param {object} params\n * @param {string|Array} params.defaultTestId\n * @param {string} params.testId\n * @returns {null|React.ReactNode}\n */\nconst setI18nTestElement = ({ defaultTestId, testId }) => {\n  if (typeof testId === 'boolean' && defaultTestId) {\n    const updatedDataTest = (Array.isArray(defaultTestId) && defaultTestId[0]) || defaultTestId;\n    // eslint-disable-next-line\n    return function TestElementBool({ children }) {\n      return (\n        <span key={updatedDataTest} className=\"curiosity-translate__test-id\" data-test={updatedDataTest}>\n          {children}\n        </span>\n      );\n    };\n  }\n\n  if (typeof testId === 'string' && testId.length > 0) {\n    // eslint-disable-next-line\n    return function TestElementString({ children }) {\n      return (\n        <span key={testId} className=\"curiosity-translate__test-id\" data-test={testId}>\n          {children}\n        </span>\n      );\n    };\n  }\n\n  if (React.isValidElement(testId)) {\n    // eslint-disable-next-line\n    return function TestElementNode({ children }) {\n      return React.cloneElement(testId, {}, children);\n    };\n  }\n\n  return null;\n};\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string|Array} translateKey A key reference, or an array of a primary key with fallback keys.\n * @param {string|object|Array} values\n *     - A default string if the key can't be found.\n *     - An object with i18next settings. i.e. \"{ context: Array|string, testId: boolean|string|React.ReactNode }\"\n *     - An array of objects (key/value) pairs used to replace string tokens. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @param {object} settings\n * @param {*} settings.i18next\n * @param {Function} settings.isDebug\n * @param {Function} settings.noopTranslate\n * @param {Function} settings.parseContext\n * @param {Function} settings.parseTranslateKey\n * @returns {string|React.ReactNode}\n */\nconst translate = (\n  translateKey,\n  values = null,\n  components,\n  {\n    i18next: aliasI18next = i18next,\n    isDebug = helpers.TEST_MODE,\n    noopTranslate: aliasNoopTranslate = noopTranslate,\n    parseContext: aliasParseContext = parseContext,\n    parseTranslateKey: aliasParseTranslateKey = parseTranslateKey\n  } = {}\n) => {\n  const updatedValues = values || {};\n  const baseUpdatedTranslateKey = aliasParseTranslateKey(translateKey);\n  let updatedTranslateKey = baseUpdatedTranslateKey;\n  let TestElement;\n\n  if (updatedValues?.context) {\n    const { context: parsedContext, translateKey: parsedAgainTranslateKey } = aliasParseContext(\n      updatedTranslateKey,\n      updatedValues.context\n    );\n    updatedTranslateKey = parsedAgainTranslateKey;\n    updatedValues.context = parsedContext;\n  }\n\n  if (isDebug) {\n    return aliasNoopTranslate(updatedTranslateKey, updatedValues, components);\n  }\n\n  if (updatedValues?.testId) {\n    TestElement = setI18nTestElement({ defaultTestId: baseUpdatedTranslateKey, testId: updatedValues.testId });\n  }\n\n  if (components && aliasI18next.store) {\n    if (TestElement) {\n      return (\n        <TestElement>\n          <Trans i18nKey={updatedTranslateKey} values={updatedValues} components={components} />\n        </TestElement>\n      );\n    }\n\n    return <Trans i18nKey={updatedTranslateKey} values={updatedValues} components={components} />;\n  }\n\n  if (aliasI18next.store) {\n    if (TestElement) {\n      return <TestElement>{aliasI18next.t(updatedTranslateKey, updatedValues)}</TestElement>;\n    }\n\n    return aliasI18next.t(updatedTranslateKey, updatedValues);\n  }\n\n  return `t([${updatedTranslateKey}])`;\n};\n\n/**\n * Apply string replacements against a component, HOC.\n *\n * @param {React.ReactNode} Component\n * @param {object} settings\n * @param {*} settings.i18next\n * @param {Function} settings.noopTranslate\n * @returns {React.ReactNode}\n */\nconst translateComponent = (\n  Component,\n  { i18next: aliasI18next = i18next, noopTranslate: aliasNoopTranslate = noopTranslate } = {}\n) => {\n  const withTranslation = ({ ...props }) => (\n    <Component\n      {...props}\n      t={(aliasI18next.store && translate) || aliasNoopTranslate}\n      i18n={(aliasI18next.store && aliasI18next) || helpers.noop}\n    />\n  );\n\n  withTranslation.displayName = 'withTranslation';\n  return withTranslation;\n};\n\nconst i18nHelpers = {\n  EMPTY_CONTEXT,\n  noopTranslate,\n  parseContext,\n  parseTranslateKey,\n  splitContext,\n  translate,\n  translateComponent\n};\n\nexport {\n  i18nHelpers as default,\n  i18nHelpers,\n  EMPTY_CONTEXT,\n  noopTranslate,\n  parseContext,\n  parseTranslateKey,\n  splitContext,\n  translate,\n  translateComponent\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { TableVariant } from '@patternfly/react-table';\nimport { PageHeader, PageLayout } from '../pageLayout/pageLayout';\nimport { TableSkeleton } from '../table/tableSkeleton';\n\n/**\n * Loading display for charts, copy, tables, etc.\n *\n * @memberof Components\n * @module Loader\n */\n\n/**\n * Render skeleton and spinner loaders.\n *\n * @param {object} props\n * @param {string} props.skeletonProps\n * @param {object} props.tableProps\n * @param {string} props.variant\n * @returns {React.ReactNode}\n */\nconst Loader = ({ skeletonProps, tableProps, variant }) => {\n  switch (variant) {\n    case 'chart':\n    case 'graph':\n      return (\n        <div className=\"curiosity-skeleton-container curiosity-skeleton-container-chart\">\n          <Skeleton size={SkeletonSize.lg} />\n          <Skeleton size={SkeletonSize.md} />\n        </div>\n      );\n    case 'paragraph':\n      return (\n        <div className=\"curiosity-skeleton-container\">\n          <Skeleton size={SkeletonSize.xs} />\n          <Skeleton size={SkeletonSize.sm} />\n          <Skeleton size={SkeletonSize.md} />\n          <Skeleton size={SkeletonSize.lg} />\n        </div>\n      );\n    case 'skeleton':\n      return <Skeleton {...skeletonProps} />;\n    case 'table':\n      return <TableSkeleton {...tableProps} />;\n    case 'title':\n      return (\n        <PageLayout>\n          <PageHeader>\n            <Skeleton size=\"sm\" />\n          </PageHeader>\n        </PageLayout>\n      );\n    case 'spinner':\n    default:\n      return <Spinner />;\n  }\n};\n\n/**\n * Prop types.\n *\n * @type {{variant: string, skeletonProps: object, tableProps: object}}\n */\nLoader.propTypes = {\n  skeletonProps: PropTypes.shape({\n    size: PropTypes.oneOf([...Object.values(SkeletonSize)])\n  }),\n  tableProps: PropTypes.shape({\n    borders: PropTypes.bool,\n    className: PropTypes.string,\n    colCount: PropTypes.number,\n    colWidth: PropTypes.array,\n    rowCount: PropTypes.number,\n    variant: PropTypes.oneOf([...Object.values(TableVariant)])\n  }),\n  variant: PropTypes.oneOf(['chart', 'graph', 'paragraph', 'skeleton', 'spinner', 'table', 'title'])\n};\n\n/**\n * Default props.\n *\n * @type {{skeletonProps: {size: *}, variant: string, tableProps: {}}}\n */\nLoader.defaultProps = {\n  skeletonProps: {\n    size: SkeletonSize.sm\n  },\n  tableProps: {},\n  variant: 'spinner'\n};\n\nexport { Loader as default, Loader, SkeletonSize };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * Page empty state message display.\n *\n * @memberof Components\n * @module MessageView\n */\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view, page empty state.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {React.ReactNode|Function} props.icon\n * @param {string} props.message\n * @param {string} props.pageTitle\n * @param {string} props.title\n * @returns {React.ReactNode}\n */\nconst MessageView = ({ children, icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PageSection>\n      {children ?? (\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          {icon && <EmptyStateIcon icon={icon} />}\n          {title && (\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {title}\n            </Title>\n          )}\n          {message && <EmptyStateBody>{message}</EmptyStateBody>}\n        </EmptyState>\n      )}\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, icon: React.ReactNode|Function, message: string, pageTitle: string, title: string}}\n */\nMessageView.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, icon: null, message: null, pageTitle: null, title: null}}\n */\nMessageView.defaultProps = {\n  children: null,\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Brand,\n  Button,\n  Card,\n  CardHeaderMain,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Flex,\n  FlexItem,\n  Form,\n  ActionGroup,\n  Spinner,\n  Title\n} from '@patternfly/react-core';\nimport { useSession } from '../authentication/authenticationContext';\nimport { reduxActions, storeHooks } from '../../redux';\nimport { translate } from '../i18n/i18n';\nimport { PageLayout } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\nimport graphPng2x from '../../images/graph2x.png';\nimport graphPng4x from '../../images/graph4x.png';\n\n/**\n * Opt-in view\n *\n * @memberof Components\n * @module OptinView\n */\n\n/**\n * An account opt-in view.\n *\n * @param {object} props\n * @param {Function} props.t\n * @param {Function} props.updateAccountOptIn\n * @param {Function} props.useDispatch\n * @param {Function} props.useSelectorsResponse\n * @param {Function} props.useSession\n * @fires onSubmitOptIn\n * @returns {React.ReactNode}\n */\nconst OptinView = ({\n  t,\n  updateAccountOptIn,\n  useDispatch: useAliasDispatch,\n  useSelectorsResponse: useAliasSelectorsResponse,\n  useSession: useAliasSession\n}) => {\n  const dispatch = useAliasDispatch();\n  const { errorStatus } = useAliasSession();\n  const { error, fulfilled, pending } = useAliasSelectorsResponse(({ user }) => user?.optin);\n\n  /**\n   * Submit and update account opt-in.\n   *\n   * @event onSubmitOptIn\n   * @returns {void}\n   */\n  const onSubmitOptIn = () => updateAccountOptIn()(dispatch);\n\n  /**\n   * Render opt-in form states.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderOptinForm = () => {\n    const disableButton = errorStatus !== 403;\n\n    if (pending) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button variant=\"primary\" isDisabled>\n              <Spinner size=\"sm\" /> {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n        </Form>\n      );\n    }\n\n    if (error) {\n      return (\n        <p>\n          {t('curiosity-optin.cardIsErrorDescription', { appName: helpers.UI_DISPLAY_NAME }, [\n            <Button isInline component=\"a\" variant=\"link\" target=\"_blank\" href={helpers.UI_LINK_CONTACT_US} />\n          ])}\n        </p>\n      );\n    }\n\n    if (disableButton || fulfilled) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button data-test=\"optinButtonSubmitDisabled\" variant=\"primary\" isDisabled>\n              {t('curiosity-optin.buttonIsActive', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n          {fulfilled && <p>{t('curiosity-optin.cardIsActiveDescription')}</p>}\n        </Form>\n      );\n    }\n\n    return (\n      <Form>\n        <ActionGroup>\n          <Button data-test=\"optinButtonSubmit\" variant=\"primary\" onClick={onSubmitOptIn}>\n            {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n          </Button>\n        </ActionGroup>\n      </Form>\n    );\n  };\n\n  /**\n   * Render tour copy and button.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderTour = () => (\n    <Card className=\"curiosity-optin-tour\">\n      <CardHeader>\n        <CardHeaderMain>\n          <Brand\n            srcSet={`${graphPng4x} 1064w, ${graphPng2x} 600w`}\n            src={graphPng4x}\n            alt={t('curiosity-optin.tourTitleImageAlt')}\n            aria-hidden\n            className=\"curiosity-optin-image\"\n          />\n        </CardHeaderMain>\n      </CardHeader>\n      <CardTitle>\n        <Title headingLevel=\"h3\" size=\"2xl\">\n          {t('curiosity-optin.tourTitle')}\n        </Title>\n      </CardTitle>\n      <CardBody>{t('curiosity-optin.tourDescription')}</CardBody>\n      <CardFooter>\n        <Button data-test=\"optinButtonTour\" variant=\"secondary\" className=\"uxui-curiosity__button-tour\">\n          {t('curiosity-optin.buttonTour')}\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n\n  return (\n    <PageLayout>\n      <Card data-test=\"optinView\">\n        <Flex>\n          <Flex flex={{ default: 'flex_2' }}>\n            <FlexItem>\n              <CardTitle key=\"heading1Title\">\n                <Title headingLevel=\"h1\" size=\"2xl\">\n                  {t('curiosity-optin.cardTitle', { appName: helpers.UI_DISPLAY_NAME })}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading1Desc\">\n                {t('curiosity-optin.cardDescription', { appName: helpers.UI_DISPLAY_NAME })}\n              </CardBody>\n\n              <CardTitle key=\"heading2Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardSeeTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading2Desc\">{t('curiosity-optin.cardSeeDescription')}</CardBody>\n\n              <CardTitle key=\"heading3Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardReportTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading3Desc\">{t('curiosity-optin.cardReportDescription')}</CardBody>\n\n              <CardTitle key=\"heading4Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardFilterTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading4Desc\">{t('curiosity-optin.cardFilterDescription')}</CardBody>\n\n              <CardFooter>{renderOptinForm()}</CardFooter>\n            </FlexItem>\n          </Flex>\n          <Flex flex={{ default: 'flex_1' }} alignSelf={{ default: 'alignSelfCenter' }}>\n            <FlexItem>\n              <CardBody>{renderTour()}</CardBody>\n            </FlexItem>\n          </Flex>\n        </Flex>\n      </Card>\n    </PageLayout>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useSession: Function, t: Function, updateAccountOptIn: Function, useDispatch: Function, useSelectorsResponse: Function}}\n */\nOptinView.propTypes = {\n  t: PropTypes.func,\n  updateAccountOptIn: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelectorsResponse: PropTypes.func,\n  useSession: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useSession: Function, t: Function, updateAccountOptIn: Function, useDispatch: Function, useSelectorsResponse: Function}}\n */\nOptinView.defaultProps = {\n  t: translate,\n  updateAccountOptIn: reduxActions.user.updateAccountOptIn,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelectorsResponse: storeHooks.reactRedux.useSelectorsResponse,\n  useSession\n};\n\nexport { OptinView as default, OptinView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { helpers } from '../../common';\n\n/**\n * @memberof PageLayout\n * @module PageColumns\n */\n\n/**\n * Render page columns based on children.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageColumns = ({ children, className }) => (\n  <Flex\n    alignItems={{ sm: 'alignItemsStretch' }}\n    spaceItems={{ sm: 'spaceItemsNone' }}\n    className={`curiosity-page-columns ${className}`}\n  >\n    {React.Children.toArray(children)\n      .filter(child => React.isValidElement(child))\n      .map(child => (\n        <FlexItem\n          key={(child.key && `page-column-${child.key}`) || helpers.generateId()}\n          grow={{ sm: 'grow' }}\n          className=\"curiosity-page-columns-column\"\n        >\n          {child}\n        </FlexItem>\n      ))}\n  </Flex>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageColumns.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageColumns.defaultProps = {\n  children: [],\n  className: ''\n};\n\nexport { PageColumns as default, PageColumns };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader as RcsPageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * @memberof PageLayout\n * @module PageHeader\n */\n\n/**\n * Render a platform page header.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {React.ReactNode}\n */\nconst PageHeader = ({ children, productLabel, t }) => (\n  <RcsPageHeader>\n    <Flex justifyContent={{ sm: 'justifyContentSpaceBetween' }}>\n      <FlexItem>\n        <PageHeaderTitle title={children} className=\"pf-u-mb-sm\" />\n      </FlexItem>\n    </Flex>\n    {productLabel && (\n      <p>\n        {t(`curiosity-view.subtitle`, { appName: helpers.UI_DISPLAY_NAME, context: productLabel }, [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_LEARN_MORE}\n          />\n        ])}\n      </p>\n    )}\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, productLabel: string, t: Function}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{includeTour: boolean, productLabel: null, t: translate}}\n */\nPageHeader.defaultProps = {\n  productLabel: null,\n  t: translate\n};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageColumns } from './pageColumns';\nimport { PageMessages } from './pageMessages';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * Page layout, organize header, columns, messages, sections, and toolbar.\n *\n * @memberof Components\n * @module PageLayout\n * @property {module} PageColumns\n * @property {module} PageHeader\n * @property {module} PageMessages\n * @property {module} PageSection\n * @property {module} PageToolbar\n */\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageLayout = ({ children, className }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageMessages)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main padding={{ default: 'noPadding' }} className={`curiosity ${className}`}>\n      {React.Children.toArray(children).filter(\n        child => child.type !== PageHeader && child.type !== PageMessages && child.type !== PageToolbar\n      )}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageLayout.defaultProps = {\n  className: ''\n};\n\nexport { PageLayout as default, PageLayout, PageColumns, PageHeader, PageMessages, PageSection, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * @memberof PageLayout\n * @module PageMessages\n */\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageMessages = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-messages ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageMessages.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageMessages.defaultProps = {\n  className: ''\n};\n\nexport { PageMessages as default, PageMessages };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * @memberof PageLayout\n * @module PageSection\n */\n\n/**\n * Render a platform page section.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageSection = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-section ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageSection.defaultProps = {\n  className: ''\n};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * @memberof PageLayout\n * @module PageToolbar\n */\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageToolbar = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-toolbar ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageToolbar.defaultProps = {\n  className: ''\n};\n\nexport { PageToolbar as default, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Navigate, Routes, Route } from 'react-router-dom';\nimport { useSetRouteDetail } from './routerContext';\nimport { routerHelpers } from './routerHelpers';\nimport { Loader } from '../loader/loader';\n\n/**\n * Route component loader.\n *\n * @memberof Components\n * @module Router\n * @property {module} RouterContext\n * @property {module} RouterHelpers\n */\n\n/**\n * Create and load routes. Start cycle for loading product configuration via hook by setting route details.\n *\n * @param {object} props\n * @param {object} props.redirectRoute\n * @param {Array} props.routes\n * @param {Function} props.useSetRouteDetail\n * @returns {React.ReactNode}\n */\nconst Router = ({ redirectRoute, routes, useSetRouteDetail: useAliasSetRouteDetail } = {}) => {\n  useAliasSetRouteDetail();\n\n  const updatedRoutes = routes.map(item => {\n    const View = routerHelpers.importView(item.component);\n    return <Route key={item.path} path={item.path} element={<View />} />;\n  });\n\n  return (\n    <React.Suspense fallback={<Loader variant=\"title\" />}>\n      <Routes>\n        {updatedRoutes}\n        {redirectRoute?.path && redirectRoute?.redirect && (\n          <Route key=\"redirect\" path={redirectRoute.path} element={<Navigate replace to={redirectRoute.redirect} />} />\n        )}\n      </Routes>\n    </React.Suspense>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{routes: Array<{component: string, path: string}>, redirectRoute: { path: string, redirect: string },\n *     useSetRouteDetail: Function}}\n */\nRouter.propTypes = {\n  redirectRoute: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    redirect: PropTypes.string.isRequired\n  }),\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      component: PropTypes.string.isRequired,\n      disabled: PropTypes.bool,\n      path: PropTypes.string.isRequired\n    })\n  ),\n  useSetRouteDetail: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array, redirectRoute: object, useSetRouteDetail: Function}}\n */\nRouter.defaultProps = {\n  redirectRoute: routerHelpers.redirectRoute,\n  routes: routerHelpers.routes,\n  useSetRouteDetail\n};\n\nexport { Router as default, Router };\n","import { useCallback, useEffect, useState } from 'react';\nimport {\n  useLocation as useLocationRRD,\n  useNavigate as useRRDNavigate,\n  useSearchParams as useRRDSearchParams\n} from 'react-router-dom';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common/helpers';\nimport { storeHooks, reduxTypes } from '../../redux';\nimport { translate } from '../i18n/i18n';\n\n/**\n * @memberof Router\n * @module RouterContext\n */\n\n/**\n * Combine react-router-dom useLocation with actual window location.\n * Focused on exposing replace and href.\n *\n * @param {object} options\n * @param {Function} options.useLocation\n * @param {*} options.windowLocation\n * @returns {{_id, search, hash}}\n */\nconst useLocation = ({\n  useLocation: useAliasLocation = useLocationRRD,\n  windowLocation: aliasWindowLocation = window.location\n} = {}) => {\n  const location = useAliasLocation();\n  const windowLocation = aliasWindowLocation;\n  const [updatedLocation, setUpdatedLocation] = useState({});\n\n  useEffect(() => {\n    const _id = helpers.generateHash(windowLocation);\n    if (updatedLocation?._id !== _id) {\n      setUpdatedLocation({\n        ...location,\n        ...windowLocation,\n        _id,\n        hash: location?.hash || '',\n        search: location?.search || ''\n      });\n    }\n  }, [location, updatedLocation?._id, windowLocation]);\n\n  return updatedLocation;\n};\n\n/**\n * useNavigate wrapper. Leverage useNavigate for a modified router with parallel \"state\"\n * update. Dispatches the same type leveraged by the initialize hook, useSetRouteDetail.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useLocation\n * @param {Function} options.useNavigate\n * @returns {Function}\n */\nconst useNavigate = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useLocation: useAliasLocation = useLocation,\n  useNavigate: useAliasNavigate = useRRDNavigate\n} = {}) => {\n  const { search = '', hash = '' } = useAliasLocation();\n  const navigate = useAliasNavigate();\n  const dispatch = useAliasDispatch();\n\n  return useCallback(\n    (pathLocation, options) => {\n      const pathName = (typeof pathLocation === 'string' && pathLocation) || pathLocation?.pathname;\n      const { firstMatch } = routerHelpers.getRouteConfigByPath({ pathName });\n\n      if (firstMatch?.productPath) {\n        dispatch({\n          type: reduxTypes.app.SET_PRODUCT,\n          config: firstMatch?.productPath\n        });\n\n        return navigate(`${routerHelpers.pathJoin('.', firstMatch?.productPath)}${search}${hash}`, options);\n      }\n\n      return navigate((pathName && `${pathName}${search}${hash}`) || pathLocation, options);\n    },\n    [dispatch, hash, navigate, search]\n  );\n};\n\n/**\n * Get a route detail from \"state\". Consume useSetRouteDetail and set basis for product\n * configuration context.\n *\n * @param {object} options\n * @param {Function} options.t\n * @param {Function} options.useChrome\n * @param {Function} options.useSelectors\n * @returns {{baseName: string, errorRoute: object}}\n */\nconst useRouteDetail = ({\n  t = translate,\n  useChrome: useAliasChrome = useChrome,\n  useSelectors: useAliasSelectors = storeHooks.reactRedux.useSelectors\n} = {}) => {\n  const { getBundleData = helpers.noop, updateDocumentTitle = helpers.noop } = useAliasChrome();\n  const bundleData = getBundleData();\n  const [productPath, productVariant] = useAliasSelectors([\n    ({ view }) => view?.product?.config,\n    ({ view }) => view?.product?.variant\n  ]);\n  const [detail, setDetail] = useState({});\n\n  useEffect(() => {\n    const updatedVariantPath = productPath;\n    const hashPath = helpers.generateHash({ productPath, productVariant });\n\n    if (updatedVariantPath && detail?._passed !== hashPath) {\n      // Get base configuration match\n      let routeConfig = routerHelpers.getRouteConfigByPath({\n        pathName: updatedVariantPath\n      });\n\n      // Determine variant to display, if any\n      if (productVariant) {\n        const selectedVariant = productVariant?.[routeConfig?.firstMatch?.productGroup];\n\n        if (selectedVariant) {\n          routeConfig = routerHelpers.getRouteConfigByPath({\n            pathName: selectedVariant\n          });\n        }\n      }\n\n      const { allConfigs, availableVariants, configs, firstMatch, isClosest } = routeConfig;\n\n      // Set document title, remove pre-baked suffix\n      updateDocumentTitle(\n        `${t(`curiosity-view.title`, {\n          appName: helpers.UI_DISPLAY_NAME,\n          context: firstMatch?.productGroup\n        })} - ${helpers.UI_DISPLAY_NAME}${(bundleData?.bundleTitle && ` | ${bundleData?.bundleTitle}`) || ''}`,\n        true\n      );\n\n      // Set route detail\n      setDetail({\n        _passed: hashPath,\n        allConfigs,\n        availableVariants,\n        firstMatch,\n        errorRoute: routerHelpers.errorRoute,\n        isClosest,\n        productGroup: firstMatch?.productGroup,\n        productConfig: (configs?.length && configs) || [],\n        productPath,\n        productVariant\n      });\n    }\n  }, [bundleData?.bundleTitle, detail?._passed, productPath, productVariant, t, updateDocumentTitle]);\n\n  return detail;\n};\n\n/**\n * Search parameter, return\n *\n * @param {object} options\n * @param {Function} options.useLocation\n * @param {Function} options.useSearchParams\n * @returns {Array}\n */\nconst useSearchParams = ({\n  useSearchParams: useAliasSearchParams = useRRDSearchParams,\n  useLocation: useAliasLocation = useLocation\n} = {}) => {\n  const { search } = useAliasLocation();\n  const [, setAliasSearchParams] = useAliasSearchParams();\n\n  /**\n   * Alias returned React Router Dom useSearchParams hook to something expected.\n   * This hook defaults to merging search objects instead of overwriting them.\n   *\n   * @param {object} updatedQuery\n   * @param {object} options\n   * @param {boolean} options.isMerged Merge search with existing search, or don't\n   * @param {string|*} options.currentSearch search returned from useLocation\n   */\n  const setSearchParams = useCallback(\n    (updatedQuery, { isMerged = true, currentSearch = search } = {}) => {\n      let updatedSearch = {};\n\n      if (isMerged) {\n        Object.assign(updatedSearch, routerHelpers.parseSearchParams(currentSearch), updatedQuery);\n      } else {\n        updatedSearch = updatedQuery;\n      }\n\n      setAliasSearchParams(updatedSearch);\n    },\n    [search, setAliasSearchParams]\n  );\n\n  return [routerHelpers.parseSearchParams(search), setSearchParams];\n};\n\n/**\n * Initialize and store product path, parameter, in a \"state\" update parallel to routing.\n * We're opting to use \"window.location.pathname\" directly since it appears to be quicker,\n * and returns a similar structured value as useParam.\n *\n * @param {object} options\n * @param {Function} options.useSelector\n * @param {Function} options.useDispatch\n * @param {*} options.windowLocation\n * @returns {*|string}\n */\nconst useSetRouteDetail = ({\n  useSelector: useAliasSelector = storeHooks.reactRedux.useSelectors,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  windowLocation: aliasWindowLocation = window.location\n} = {}) => {\n  const dispatch = useAliasDispatch();\n  const [updatedPath] = useAliasSelector([({ view }) => view?.product?.config]);\n  const { pathname: productPath } = aliasWindowLocation;\n\n  useEffect(() => {\n    if (productPath && productPath !== updatedPath) {\n      dispatch({\n        type: reduxTypes.app.SET_PRODUCT,\n        config: productPath\n      });\n    }\n  }, [updatedPath, dispatch, productPath]);\n\n  return updatedPath;\n};\n\nconst context = {\n  useLocation,\n  useNavigate,\n  useRouteDetail,\n  useSearchParams,\n  useSetRouteDetail\n};\n\nexport { context as default, context, useLocation, useNavigate, useRouteDetail, useSearchParams, useSetRouteDetail };\n","import React from 'react';\nimport { closest } from 'fastest-levenshtein';\nimport { helpers } from '../../common/helpers';\nimport { routesConfig, productConfig } from '../../config';\n\n/**\n * @memberof Router\n * @module RouterHelpers\n */\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * The app baseName. Return an assumed route baseName directory based on existing app name.\n * App name is defined in dotenv and package.json/insights.appname\n * [environment]/[OPTIONAL]/[OPTIONAL]/[APP NAME]\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  `${pathName.split(applicationName)[0]}${applicationName}`;\n\n/**\n * App basePath. Return a base path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBasePath = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  pathName.split(applicationName)[0];\n\n/**\n * The first redirect route.\n *\n * @type {object}\n */\nconst redirectRoute = routesConfig.find(({ disabled, redirect }) => !disabled && redirect);\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = routesConfig.filter(item => !item.disabled);\n\n/**\n * Match pre-sorted route config entries with a path, or match with a fallback.\n * This is the primary engine for curiosity routing. It can account for a full window.location.pathname\n * given the appropriate alias, group, product, and/or path identifiers provided with product configuration.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {Array} params.configs\n * @returns {{configs: *, firstMatch: *, isClosest: boolean, allConfigs: Array}}\n */\nconst getRouteConfigByPath = helpers.memo(({ pathName, configs = productConfig.sortedConfigs } = {}) => {\n  const { byAnything, byAnythingPathIds, byAnythingVariants, byProductIdConfigs } = configs();\n  const updatedPathName =\n    (/^http/i.test(pathName) && new URL(pathName).pathname) || (typeof pathName === 'string' && pathName) || undefined;\n  const trimmedPathName = updatedPathName\n    ?.toLowerCase()\n    ?.split('#')?.[0]\n    ?.split('?')?.[0]\n    ?.replace(/^\\/*|\\/*$/g, '')\n    ?.replace(new RegExp(helpers.UI_DISPLAY_NAME, 'i'), '')\n    ?.replace(/\\/\\//g, '/');\n\n  // Do a known comparison against alias, group, product, path identifiers\n  const focusedStr = byAnythingPathIds.find(value => value.toLowerCase() === trimmedPathName?.split('/')?.pop());\n\n  // Fallback attempt, match pathName with the closest string\n  const closestStr = trimmedPathName && closest(trimmedPathName, byAnythingPathIds);\n  const configsByAnything = byAnything?.[focusedStr || closestStr];\n  const availableVariants = byAnythingVariants?.[focusedStr || closestStr];\n\n  return {\n    isClosest: !focusedStr,\n    allConfigs: Object.values(byProductIdConfigs),\n    availableVariants,\n    configs: configsByAnything,\n    firstMatch: configsByAnything?.[0]\n  };\n});\n\n/**\n * Import a route component.\n *\n * @param {Node} component\n * @returns {Node}\n */\nconst importView = component => {\n  if (!helpers.TEST_MODE) {\n    return React.lazy(() => import(/* webpackExclude: /\\.test\\.js$/ */ `../${component}.js`));\n  }\n\n  return p => <React.Fragment>{JSON.stringify({ ...p, component }, null, 2)}</React.Fragment>;\n};\n\n/**\n * Parse search parameters from a string, using a set for \"uniqueness\"\n *\n * @param {string} currentPathAndOrSearch\n * @returns {{}}\n */\nconst parseSearchParams = helpers.memo((currentPathAndOrSearch = window.location.search) => {\n  const { decodeURIComponent, URLSearchParams } = window;\n  const parsedSearch = {};\n\n  [\n    ...new Set(\n      [...new URLSearchParams(decodeURIComponent(currentPathAndOrSearch))].map(([param, value]) => `${param}~${value}`)\n    )\n  ].forEach(v => {\n    const [param, value] = v.split('~');\n    parsedSearch[param] = value;\n  });\n\n  return parsedSearch;\n});\n\n/**\n * Basic path join, minor emulation for path.join. Related to the webpack 5 migration.\n *\n * @param {object} paths\n * @returns {string}\n */\nconst pathJoin = helpers.memo((...paths) => {\n  let updatedPath = Array.from(paths);\n  const hasLead = /^\\/\\//.test(updatedPath[0]);\n  updatedPath = updatedPath\n    .join('/')\n    .replace(/(\\/\\/)+/g, '~')\n    .replace(/~/g, '/')\n    .replace(/\\/\\//g, '/');\n\n  if (hasLead) {\n    updatedPath = `/${updatedPath}`;\n  }\n\n  return updatedPath;\n});\n\nconst routerHelpers = {\n  appName,\n  dynamicBaseName,\n  dynamicBasePath,\n  redirectRoute,\n  getRouteConfigByPath,\n  importView,\n  parseSearchParams,\n  pathJoin,\n  routes\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  appName,\n  dynamicBaseName,\n  dynamicBasePath,\n  redirectRoute,\n  getRouteConfigByPath,\n  importView,\n  parseSearchParams,\n  pathJoin,\n  routes\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useShallowCompareEffect } from 'react-use';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport {\n  ExpandableRowContent,\n  SortByDirection,\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr\n} from '@patternfly/react-table';\nimport { TableEmpty } from './tableEmpty';\nimport { tableHelpers } from './tableHelpers';\n\n/**\n * PF table wrapper, normalize table use.\n *\n * @memberof Components\n * @module Table\n * @property {module} TableEmpty\n * @property {module} TableHelpers\n * @property {module} TableSkeleton\n */\n\n/**\n * FixMe: PF bug for select column. PF requires a Th used for select field in the primary Thead...\n * BUT also allows a partially working Td. Any attempt to update the Td selected object props is\n * met with a partially-functioning field, hair pulling, and the question \"is my state working?\"\n * ... it is, PF is the problem, this is a bug. HTML markup does allow the use of both td and th within\n * thead and tbody, and not every cell in a thead requires the use of th. Solutions include\n *   - minimally updating the documentation to reflect that a Th is ABSOLUTELY required!\n *   - allow Td cells the same functionality as Th in Thead\n *   - completely warn/block the ability to use Td in the Thead component\n */\n/**\n * A PF Composable table wrapper\n *\n * @fires onExpandTable\n * @fires onSelectTable\n * @fires onSortTable\n * @param {object} props\n * @param {string} props.ariaLabel\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @param {Array} props.columnHeaders\n * @param {object} props.componentClassNames\n * @param {object} props.emptyTable\n * @param {boolean} props.isBorders\n * @param {boolean} props.isHeader\n * @param {boolean} props.isStriped\n * @param {Function} props.onSelect\n * @param {Function} props.onSort\n * @param {Function} props.onExpand\n * @param {Array} props.rows\n * @param {string} props.summary\n * @param {string} props.variant\n * @returns {React.ReactNode}\n */\nconst Table = ({\n  ariaLabel,\n  children,\n  className,\n  columnHeaders,\n  componentClassNames,\n  emptyTable,\n  isBorders,\n  isHeader,\n  isStriped,\n  onSelect,\n  onSort,\n  onExpand,\n  rows,\n  summary,\n  variant\n}) => {\n  const [updatedHeaderAndRows, setUpdatedHeaderAndRows] = useState({});\n  const [updatedIsExpandableRow, setUpdatedIsExpandableRow] = useState(false);\n  const [updatedIsExpandableCell, setUpdatedIsExpandableCell] = useState(false);\n  const [updatedIsSelectTable, setUpdatedIsSelectTable] = useState(false);\n\n  /**\n   * Apply an onExpand handler.\n   *\n   * @event onExpandTable\n   * @param {object} params\n   * @param {string} params.type\n   * @param {boolean} params.isExpanded\n   * @param {number} params.rowIndex\n   * @param {number} params.cellIndex\n   * @param {*|object} params.data\n   */\n  const onExpandTable = ({ type, isExpanded, rowIndex, cellIndex, data } = {}) => {\n    if (type === 'compound') {\n      setUpdatedHeaderAndRows(prevState => {\n        const nextBodyRows = [...prevState.bodyRows];\n        const nextBodyRowCells = nextBodyRows?.[rowIndex].cells.map(({ props: cellProps, ...cell }) => {\n          const updatedCompoundExpand = cellProps?.compoundExpand;\n\n          if (updatedCompoundExpand) {\n            updatedCompoundExpand.isExpanded = false;\n          }\n\n          return { ...cell, props: { ...cellProps, compoundExpand: updatedCompoundExpand } };\n        });\n\n        nextBodyRowCells[cellIndex].props.compoundExpand.isExpanded = isExpanded;\n        nextBodyRows[rowIndex].cells = nextBodyRowCells;\n\n        return {\n          ...prevState,\n          bodyRows: nextBodyRows\n        };\n      });\n    } else {\n      setUpdatedHeaderAndRows(prevState => {\n        const nextBodyRows = [...prevState.bodyRows];\n        nextBodyRows[rowIndex].expand.isExpanded = isExpanded;\n\n        return {\n          ...prevState,\n          bodyRows: nextBodyRows\n        };\n      });\n    }\n\n    if (typeof onExpand === 'function') {\n      onExpand({\n        type,\n        rowIndex,\n        cellIndex: (type === 'row' && -1) || cellIndex,\n        isExpanded,\n        data: _cloneDeep(data)\n      });\n    }\n  };\n\n  /**\n   * Apply an onSelect handler.\n   *\n   * @event onSelectTable\n   * @param {object} params\n   * @param {string} params.type\n   * @param {boolean} params.isSelected\n   * @param {number} params.rowIndex\n   * @param {*|object} params.data\n   */\n  const onSelectTable = ({ type, isSelected, rowIndex, data } = {}) => {\n    if (type === 'all') {\n      setUpdatedHeaderAndRows(prevState => {\n        const nextBodyRows = prevState.bodyRows?.map(row => ({\n          ...row,\n          select: { ...row.select, isSelected }\n        }));\n\n        const nextHeaderSelectProps = prevState.headerSelectProps;\n        nextHeaderSelectProps.isSelected = isSelected;\n\n        return {\n          ...prevState,\n          bodyRows: nextBodyRows,\n          headerSelectProps: nextHeaderSelectProps\n        };\n      });\n    } else {\n      setUpdatedHeaderAndRows(prevState => {\n        const nextBodyRows = prevState.bodyRows?.map(row => row);\n        nextBodyRows[rowIndex].select.isSelected = isSelected;\n\n        const nextHeaderSelectProps = prevState.headerSelectProps;\n        nextHeaderSelectProps.isSelected =\n          nextBodyRows.filter(row => row.select.isSelected === true).length === nextBodyRows.length;\n\n        return {\n          ...prevState,\n          bodyRows: nextBodyRows,\n          headerSelectProps: nextHeaderSelectProps\n        };\n      });\n    }\n\n    onSelect({\n      type,\n      rowIndex,\n      isSelected,\n      data: _cloneDeep(data)\n    });\n  };\n\n  /**\n   * Apply an onSort handler.\n   *\n   * @event onSortTable\n   * @param {object} params\n   * @param {number} params.cellIndex\n   * @param {string} params.direction\n   * @param {number} params.originalIndex\n   * @param {*|object} params.data\n   */\n  const onSortTable = ({ cellIndex, direction, originalIndex, data } = {}) => {\n    setUpdatedHeaderAndRows(prevState => {\n      const nextHeaderRow = prevState.headerRow.map((headerCell, index) => {\n        const updatedHeaderCell = headerCell;\n\n        if (updatedHeaderCell?.props?.sort) {\n          delete updatedHeaderCell.props.sort.sortBy.index;\n\n          if (index === originalIndex) {\n            updatedHeaderCell.props.sort.sortBy.index = cellIndex;\n            updatedHeaderCell.props.sort.sortBy.direction = direction;\n          }\n        }\n\n        return updatedHeaderCell;\n      });\n\n      return {\n        ...prevState,\n        headerRow: nextHeaderRow\n      };\n    });\n\n    onSort({\n      cellIndex: originalIndex,\n      direction,\n      data: _cloneDeep(data)\n    });\n  };\n\n  useShallowCompareEffect(() => {\n    const {\n      isAllSelected: parsedIsAllSelected,\n      isExpandableCell: parsedIsExpandableCell,\n      isExpandableRow: parsedIsExpandableRow,\n      isSelectTable: parsedIsSelectTable,\n      rows: parsedRows\n    } = tableHelpers.tableRows({\n      onExpand: onExpandTable,\n      onSelect: typeof onSelect === 'function' && onSelectTable,\n      rows\n    });\n    const { headerRow: parsedHeaderRow, headerSelectProps: parsedHeaderSelectProps } = tableHelpers.tableHeader({\n      columnHeaders,\n      isAllSelected: parsedIsAllSelected,\n      onSelect: typeof onSelect === 'function' && onSelectTable,\n      onSort: typeof onSort === 'function' && onSortTable,\n      parsedRows\n    });\n\n    setUpdatedIsExpandableRow(parsedIsExpandableRow);\n    setUpdatedIsSelectTable(parsedIsSelectTable);\n    setUpdatedIsExpandableCell(parsedIsExpandableCell);\n    setUpdatedHeaderAndRows({\n      headerRow: parsedHeaderRow,\n      bodyRows: parsedRows,\n      headerSelectProps: parsedHeaderSelectProps\n    });\n  }, [columnHeaders, onExpand, onExpandTable, onSelect, onSelectTable, onSort, onSortTable, rows]);\n\n  /**\n   * Apply settings, return primary thead.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderHeader = () => (\n    <Thead>\n      <Tr className={componentClassNames.tr}>\n        {updatedIsExpandableRow && <Td className={componentClassNames.th} key=\"expand-th-cell\" />}\n        {updatedIsSelectTable && (\n          <Th\n            key=\"select-cell\"\n            className={`${componentClassNames.th} ${componentClassNames.tdSelect}`}\n            select={updatedHeaderAndRows.headerSelectProps}\n          />\n        )}\n        {updatedHeaderAndRows?.headerRow.map(({ key: cellKey, content, props, sort }) => (\n          <Th className={componentClassNames.th} key={cellKey} sort={sort} {...props}>\n            {content}\n          </Th>\n        ))}\n      </Tr>\n    </Thead>\n  );\n\n  /**\n   * Apply settings, return tbody(s).\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderBody = () => {\n    const BodyWrapper = ((updatedIsExpandableCell || updatedIsExpandableRow) && React.Fragment) || Tbody;\n\n    return (\n      <BodyWrapper>\n        {updatedHeaderAndRows?.bodyRows?.map(({ key: rowKey, cells, expand, select, expandedContent }) => {\n          const expandedCell =\n            (updatedIsExpandableCell && cells.find(cell => cell?.props?.compoundExpand?.isExpanded === true)) ||\n            undefined;\n          const expandedRow = (updatedIsExpandableRow && expand?.isExpanded === true) || undefined;\n\n          const CellWrapper = ((updatedIsExpandableCell || updatedIsExpandableRow) && Tbody) || React.Fragment;\n          const cellWrapperProps =\n            (updatedIsExpandableCell && { isExpanded: expandedCell?.props?.compoundExpand?.isExpanded === true }) ||\n            (updatedIsExpandableRow && { isExpanded: expand?.isExpanded === true }) ||\n            undefined;\n\n          return (\n            <CellWrapper key={`${rowKey}-parent-row`} {...cellWrapperProps}>\n              <Tr className={componentClassNames.tr} key={`${rowKey}-row`}>\n                {(expand && (\n                  <Td\n                    className={`${componentClassNames.td} ${componentClassNames.tdExpand}`}\n                    key={`${rowKey}-expand-col`}\n                    expand={expand}\n                  />\n                )) ||\n                  (updatedIsExpandableRow && <Td className={componentClassNames.td} key=\"expand-td-cell\" />)}\n                {select && (\n                  <Td\n                    className={`${componentClassNames.td} ${componentClassNames.tdSelect}`}\n                    key={`${rowKey}-select-col`}\n                    select={select}\n                  />\n                )}\n                {cells.map(({ key: cellKey, content, isTHeader, props: cellProps = {} }) => {\n                  const WrapperCell = (isTHeader && Th) || Td;\n\n                  return (\n                    <WrapperCell\n                      key={cellKey}\n                      {...cellProps}\n                      className={`${cellProps.className} ${componentClassNames.td} ${\n                        (cellProps.isActionCell && componentClassNames.tdAction) || ''\n                      }`}\n                    >\n                      {content}\n                    </WrapperCell>\n                  );\n                })}\n              </Tr>\n              {updatedIsExpandableRow && expandedRow && (\n                <Tr className={componentClassNames.tr} isExpanded key={`${rowKey}-expandedRow`}>\n                  <Td\n                    noPadding={expandedRow?.props?.noPadding}\n                    className={`${componentClassNames.td} ${componentClassNames.tdExpanded} ${componentClassNames.tdExpandedWrapper}`}\n                    colSpan={cells.length + ((expand && 1) || 0) + ((select && 1) || 0)}\n                  >\n                    <div className={componentClassNames.tdExpandedContent}>\n                      <ExpandableRowContent>\n                        {(typeof expandedContent === 'function' && expandedContent()) || expandedContent}\n                      </ExpandableRowContent>\n                    </div>\n                  </Td>\n                </Tr>\n              )}\n              {updatedIsExpandableCell && expandedCell && (\n                <Tr className={componentClassNames.tr} isExpanded key={`${rowKey}-expandedCol`}>\n                  <Td\n                    noPadding={expandedCell?.props?.noPadding}\n                    className={`${componentClassNames.td} ${componentClassNames.tdExpanded} ${componentClassNames.tdExpandedWrapper}`}\n                    colSpan={cells.length + ((expand && 1) || 0) + ((select && 1) || 0)}\n                  >\n                    <div className={componentClassNames.tdExpandedContent}>\n                      <ExpandableRowContent>\n                        {(typeof expandedCell.expandedContent === 'function' && expandedCell.expandedContent()) ||\n                          expandedCell.expandedContent}\n                      </ExpandableRowContent>\n                    </div>\n                  </Td>\n                </Tr>\n              )}\n            </CellWrapper>\n          );\n        })}\n      </BodyWrapper>\n    );\n  };\n\n  /**\n   * Return empty results display.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderEmpty = () =>\n    children || <TableEmpty aria-label={ariaLabel} className={className} summary={summary} {...emptyTable} />;\n\n  return (\n    <Grid>\n      <GridItem span={12}>\n        {(updatedHeaderAndRows?.bodyRows?.length && (\n          <TableComposable\n            aria-label={ariaLabel}\n            borders={isBorders}\n            className={`${componentClassNames.table} ${className}`}\n            isStriped={isStriped}\n            summary={summary}\n            variant={variant}\n          >\n            {isHeader && renderHeader()}\n            {renderBody()}\n          </TableComposable>\n        )) ||\n          renderEmpty()}\n      </GridItem>\n    </Grid>\n  );\n};\n\n/**\n * Prop types\n *\n * @type {{componentClassNames: object, summary: string, onSort: Function, onExpand: Function, className: string, isStriped: boolean,\n *     rows: Array, isBorders: boolean, ariaLabel: string, onSelect: Function, columnHeaders: Array, children: React.ReactNode,\n *     isHeader: boolean, variant: string, emptyTable: {className: string, title: React.ReactNode, message: React.ReactNode}}}\n */\nTable.propTypes = {\n  ariaLabel: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  columnHeaders: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.node,\n      PropTypes.shape({\n        content: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n        isSort: PropTypes.bool,\n        isSortActive: PropTypes.bool,\n        sortDirection: PropTypes.oneOf([...Object.values(SortByDirection)])\n      })\n    ])\n  ),\n  componentClassNames: PropTypes.shape({\n    table: PropTypes.string,\n    td: PropTypes.string,\n    tdAction: PropTypes.string,\n    tdSelect: PropTypes.string,\n    th: PropTypes.string,\n    tr: PropTypes.string,\n    trExpand: PropTypes.string,\n    trExpanded: PropTypes.string,\n    trExpandedContent: PropTypes.string,\n    tdExpand: PropTypes.string,\n    tdExpanded: PropTypes.string,\n    tdExpandedWrapper: PropTypes.string,\n    tdExpandedContent: PropTypes.string\n  }),\n  emptyTable: PropTypes.shape({\n    className: PropTypes.string,\n    title: PropTypes.node,\n    message: PropTypes.node\n  }),\n  isBorders: PropTypes.bool,\n  isHeader: PropTypes.bool,\n  isStriped: PropTypes.bool,\n  onExpand: PropTypes.func,\n  onSelect: PropTypes.func,\n  onSort: PropTypes.func,\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      cells: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.func,\n          PropTypes.node,\n          PropTypes.instanceOf(Date),\n          PropTypes.shape({\n            content: PropTypes.oneOfType([PropTypes.func, PropTypes.node, PropTypes.instanceOf(Date)]).isRequired,\n            isTHeader: PropTypes.bool,\n            isExpanded: PropTypes.bool,\n            expandedContent: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n          })\n        ])\n      ),\n      isDisabled: PropTypes.bool,\n      isExpanded: PropTypes.bool,\n      isSelected: PropTypes.bool,\n      expandedContent: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n    })\n  ),\n  summary: PropTypes.string,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props\n *\n * @type {{componentClassNames: {tdExpanded: string, trExpand: string, trExpandedContent: string, tdExpandedWrapper: string,\n *     tdAction: string, tdExpand: string, td: string, trExpanded: string, th: string, tdSelect: string, tdExpandedContent: string,\n *     table: string, tr: string}, summary: null, onSort: null, onExpand: null, className: string, isStriped: boolean, rows: any[],\n *     isBorders: boolean, ariaLabel: null, onSelect: null, columnHeaders: any[], children: null, isHeader: boolean,\n *     variant: TableVariant.compact, emptyTable: {title: string, message: string}}}\n */\nTable.defaultProps = {\n  ariaLabel: null,\n  children: null,\n  className: '',\n  columnHeaders: [],\n  componentClassNames: {\n    table: 'curiosity-table',\n    td: 'curiosity-table__td',\n    tdAction: 'curiosity-table__td-action',\n    tdSelect: 'curiosity-table__td-select',\n    th: 'curiosity-table__th',\n    tr: 'curiosity-table__tr',\n    trExpand: 'curiosity-table__tr-expand',\n    trExpanded: 'curiosity-table__tr-expand-expanded',\n    trExpandedContent: 'curiosity-table__tr-expand-content',\n    tdExpand: 'curiosity-table__td-expand',\n    tdExpanded: 'curiosity-table__td-expand-expanded',\n    tdExpandedWrapper: 'curiosity-table__td-expand-wrapper',\n    tdExpandedContent: 'curiosity-table__td-expand-content'\n  },\n  emptyTable: { title: 'No results found', message: 'Clear all filters and try again' },\n  isBorders: true,\n  isHeader: false,\n  isStriped: false,\n  onExpand: null,\n  onSelect: null,\n  onSort: null,\n  rows: [],\n  summary: null,\n  variant: TableVariant.compact\n};\n\nexport { Table as default, Table, TableVariant, tableHelpers };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable as PlatformEmptyTableWrapper } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\n/**\n * @memberof Table\n * @module TableEmpty\n */\n\n/**\n * Render an empty table.\n *\n * @param {object} props\n * @param {React.ReactNode|Function} props.icon\n * @param {React.ReactNode} props.message\n * @param {string} props.tableHeading\n * @param {React.ReactNode} props.title\n * @param {string} props.variant\n * @returns {React.ReactNode}\n */\nconst TableEmpty = ({ icon, message, tableHeading, title, variant, ...props }) => (\n  <PlatformEmptyTableWrapper>\n    <table {...props} />\n    <EmptyState variant={variant}>\n      {icon && <EmptyStateIcon icon={icon} />}\n      <Title headingLevel={tableHeading} size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n  </PlatformEmptyTableWrapper>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: React.ReactNode|Function, variant: string, message: React.ReactNode, title: React.ReactNode,\n *     tableHeading: string}}\n */\nTableEmpty.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.node.isRequired,\n  tableHeading: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  variant: PropTypes.oneOf(Object.keys(EmptyStateVariant))\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, variant: EmptyStateVariant.small, tableHeading: string}}\n */\nTableEmpty.defaultProps = {\n  icon: SearchIcon,\n  tableHeading: 'h2',\n  variant: EmptyStateVariant.small\n};\n\nexport { TableEmpty as default, TableEmpty };\n","import React from 'react';\nimport { SortByDirection } from '@patternfly/react-table';\n\n/**\n * @memberof Table\n * @module TableHelpers\n */\n\n/**\n * Table sorting directions.\n *\n * @type {{asc: SortByDirection.asc, desc: SortByDirection.desc}}\n */\nconst SortByDirectionVariant = { ...SortByDirection };\n\n/**\n * Table header copy wrapping modifier.\n *\n * @type {{noWrap: string, truncate: string, fitContent: string, breakWord: string, wrap: string}}\n */\nconst WrapModifierVariant = {\n  wrap: 'wrap',\n  noWrap: 'nowrap',\n  truncate: 'truncate',\n  breakWord: 'breakWord',\n  fitContent: 'fitContent'\n};\n\n/**\n * Allow additional content to display in cells.\n *\n * @param {React.ReactNode|Function|object|*} content\n * @returns {*|string}\n */\nconst parseContent = content =>\n  (React.isValidElement(content) && content) ||\n  (typeof content === 'function' && content()) ||\n  (typeof content === 'object' && `${content}`) ||\n  content ||\n  '';\n\n/**\n * Parse table header settings, props.\n *\n * @param {object} params\n * @param {Array} params.columnHeaders\n * @param {boolean} params.isAllSelected\n * @param {boolean} params.isRowExpand\n * @param {Array} params.parsedRows\n * @param {Function} params.onSelect\n * @param {Function} params.onSort\n * @returns {{headerRow: any[], headerSelectProps: {}}}\n */\nconst tableHeader = ({\n  columnHeaders = [],\n  isAllSelected = false,\n  isRowExpand,\n  parsedRows = [],\n  onSelect,\n  onSort\n} = {}) => {\n  const updatedColumnHeaders = [];\n  const updatedHeaderSelectProps = {};\n  const isSelectTable = typeof onSelect === 'function';\n\n  if (isSelectTable) {\n    const parsedRowData = parsedRows.map(({ data }) => data || {});\n    updatedHeaderSelectProps.onSelect = (_event, isSelected) =>\n      onSelect({ data: parsedRowData, isSelected, rowIndex: -1, type: 'all' });\n    updatedHeaderSelectProps.isSelected = isAllSelected;\n  }\n\n  columnHeaders.forEach((columnHeader, index) => {\n    const key = `${window.btoa(columnHeader)}-${index}`;\n\n    if (columnHeader?.content !== undefined) {\n      const {\n        isSort,\n        isSortActive,\n        sortDirection = SortByDirection.asc,\n        content,\n        dataLabel,\n        info,\n        modifier,\n        tooltip,\n        ...headerCellData\n      } = columnHeader;\n      const tempColumnHeader = {\n        key,\n        content: parseContent(content),\n        props: {\n          dataLabel,\n          info,\n          modifier,\n          tooltip\n        },\n        data: headerCellData\n      };\n\n      if (typeof onSort === 'function' && (isSort === true || isSortActive === true)) {\n        let updatedColumnIndex = index;\n\n        if (isRowExpand) {\n          updatedColumnIndex += 1;\n        }\n\n        if (isSelectTable) {\n          updatedColumnIndex += 1;\n        }\n\n        tempColumnHeader.props.sort = {\n          columnIndex: updatedColumnIndex,\n          sortBy: {},\n          onSort: (_event, _colIndex, direction) =>\n            onSort({ cellIndex: updatedColumnIndex, data: headerCellData, direction, originalIndex: index })\n        };\n\n        if (isSortActive) {\n          tempColumnHeader.props.sort.sortBy.index = updatedColumnIndex;\n        }\n\n        tempColumnHeader.props.sort.sortBy.direction = sortDirection;\n      }\n\n      updatedColumnHeaders.push(tempColumnHeader);\n    } else {\n      updatedColumnHeaders.push({\n        key,\n        content: parseContent(columnHeader)\n      });\n    }\n  });\n\n  return {\n    headerRow: updatedColumnHeaders,\n    headerSelectProps: updatedHeaderSelectProps\n  };\n};\n\n/**\n * Parse table body settings, props.\n *\n * @param {object} params\n * @param {Function} params.onExpand\n * @param {Function} params.onSelect\n * @param {Array} params.rows\n * @returns {{isExpandableCell: boolean, isSelectTable: boolean, isExpandableRow: boolean, isAllSelected: boolean, rows: any[]}}\n */\nconst tableRows = ({ onExpand, onSelect, rows = [] } = {}) => {\n  const updatedRows = [];\n  const isSelectTable = typeof onSelect === 'function';\n  let isExpandableRow = false;\n  let isExpandableCell = false;\n  let selectedRows = 0;\n\n  rows.forEach(({ cells, isDisabled = false, isExpanded = false, isSelected = false, expandedContent, ...rowData }) => {\n    const rowObj = {\n      key: undefined,\n      cells: [],\n      select: undefined,\n      expand: undefined,\n      expandedContent,\n      data: rowData\n    };\n    updatedRows.push(rowObj);\n    rowObj.rowIndex = updatedRows.length - 1;\n    rowObj.key = `${window.btoa(rowObj)}-${rowObj.rowIndex}`;\n\n    if (isSelectTable) {\n      const updatedIsSelected = isSelected ?? false;\n\n      if (updatedIsSelected === true) {\n        selectedRows += 1;\n      }\n\n      rowObj.select = {\n        cells,\n        rowIndex: rowObj.rowIndex,\n        onSelect: (_event, isRowSelected) =>\n          onSelect({ data: rowObj.data, isSelected: isRowSelected, rowIndex: rowObj.rowIndex, type: 'row' }),\n        isSelected: updatedIsSelected,\n        disable: isDisabled || false\n      };\n    }\n\n    if (expandedContent && typeof onExpand === 'function') {\n      isExpandableRow = true;\n\n      rowObj.expand = {\n        rowIndex: rowObj.rowIndex,\n        isExpanded,\n        onToggle: (_event, rowIndex, isRowToggleExpanded) =>\n          onExpand({\n            data: rowObj.data,\n            isExpanded: isRowToggleExpanded,\n            rowIndex: rowObj.rowIndex,\n            type: 'row'\n          })\n      };\n    }\n\n    cells?.forEach((cell, cellIndex) => {\n      const cellKey = `${window.btoa(cell)}-${rowObj.rowIndex}-${cellIndex}`;\n      if (cell?.content !== undefined) {\n        const { className, content, dataLabel, isActionCell, noPadding, width, style, ...remainingProps } = cell;\n        const cellProps = { className: className || '', dataLabel, isActionCell, noPadding, style: style || {} };\n        let updatedWidthClassName;\n\n        // FixMe: PF doesn't appear to apply cell width classNames when less than 10, or consistently\n        if (typeof width === 'number') {\n          updatedWidthClassName = `pf-m-width-${width}`;\n        }\n\n        if (typeof width === 'string' || style) {\n          cellProps.style = { ...cellProps.style, width };\n        } else if (updatedWidthClassName) {\n          cellProps.className = `${cellProps.className || ''} ${updatedWidthClassName}`;\n        }\n\n        if (!isExpandableRow && cell?.expandedContent && typeof onExpand === 'function') {\n          isExpandableCell = true;\n          const updateIsExpanded = cell?.isExpanded ?? false;\n\n          cellProps.compoundExpand = {\n            isExpanded: updateIsExpanded,\n            onToggle: (_event, rowIndex, isRowToggleExpanded, isCellToggleExpanded) =>\n              onExpand({\n                cellIndex,\n                data: rowObj.data,\n                isExpanded: !isCellToggleExpanded,\n                rowIndex: rowObj.rowIndex,\n                type: 'compound'\n              })\n          };\n        }\n\n        rowObj.cells.push({ ...remainingProps, content: parseContent(content), key: cellKey, props: cellProps });\n      } else {\n        rowObj.cells.push({\n          key: cellKey,\n          content: parseContent(cell)\n        });\n      }\n    });\n  });\n\n  return {\n    isAllSelected: selectedRows === rows.length,\n    isExpandableRow,\n    isExpandableCell,\n    isSelectTable,\n    rows: updatedRows\n  };\n};\n\nconst tableHelpers = {\n  parseContent,\n  tableHeader,\n  tableRows,\n  SortByDirectionVariant,\n  WrapModifierVariant\n};\n\nexport {\n  tableHelpers as default,\n  tableHelpers,\n  parseContent,\n  tableHeader,\n  tableRows,\n  SortByDirectionVariant,\n  WrapModifierVariant\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Table } from './table';\n\n/**\n * @memberof Table\n * @module TableSkeleton\n */\n\n/**\n * Render a table with skeleton loaders.\n *\n * @param {object} props\n * @param {string} props.ariaLabel\n * @param {boolean} props.borders\n * @param {string} props.className\n * @param {number} props.colCount\n * @param {Array} props.colWidth\n * @param {boolean} props.isHeader\n * @param {number} props.rowCount\n * @param {string} props.summary\n * @param {string} props.variant\n * @returns {React.ReactNode}\n */\nconst TableSkeleton = ({ ariaLabel, borders, className, colCount, colWidth, isHeader, rowCount, summary, variant }) => {\n  const updatedColumnHeaders = [...new Array(colCount)].map((value, index) => {\n    const updatedHeader = { content: <Skeleton size={SkeletonSize.md} /> };\n\n    if (typeof colWidth[index] === 'number') {\n      updatedHeader.width = colWidth[index];\n    }\n\n    return updatedHeader;\n  });\n\n  const updatedRowCount = rowCount || 1;\n\n  const updatedRows = [...new Array(updatedRowCount)].map(() => ({\n    cells: [...new Array(colCount)].map((value, index) => {\n      const updatedCell = { content: <Skeleton size={SkeletonSize.md} /> };\n\n      if (typeof colWidth[index] === 'number') {\n        updatedCell.width = colWidth[index];\n      }\n\n      return updatedCell;\n    })\n  }));\n\n  return (\n    <Table\n      ariaLabel={ariaLabel}\n      isBorders={borders}\n      className={`curiosity-skeleton-table${(!rowCount && ' curiosity-skeleton-table__hidden-rows') || ''} ${\n        className || ''\n      }`}\n      columnHeaders={updatedColumnHeaders}\n      isHeader={isHeader}\n      rows={updatedRows}\n      summary={summary}\n      variant={variant}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{summary: string, borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: string,\n *     className: string, rowCount: string, ariaLabel: string}}\n */\nTableSkeleton.propTypes = {\n  ariaLabel: PropTypes.string,\n  borders: PropTypes.bool,\n  className: PropTypes.string,\n  colCount: PropTypes.number,\n  colWidth: PropTypes.arrayOf(PropTypes.number),\n  isHeader: PropTypes.bool,\n  rowCount: PropTypes.number,\n  summary: PropTypes.string,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{summary: null, borders: boolean, isHeader: boolean, colCount: number, colWidth: any[], variant: null,\n *     className: null, rowCount: number, ariaLabel: null}}\n */\nTableSkeleton.defaultProps = {\n  ariaLabel: null,\n  borders: true,\n  className: null,\n  colCount: 1,\n  colWidth: [],\n  isHeader: false,\n  rowCount: 5,\n  summary: null,\n  variant: null\n};\n\nexport { TableSkeleton as default, TableSkeleton };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip as PfTooltip, TooltipPosition } from '@patternfly/react-core';\n\n/**\n * PF tooltip wrapper.\n *\n * @memberof Components\n * @module Tooltip\n */\n\n/**\n * PF tooltip wrapper component.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {React.ReactNode} props.content\n * @param {boolean} props.isNoWrap\n * @param {object} props.props\n * @returns {React.ReactNode}\n */\nconst Tooltip = ({ children, content, isNoWrap, ...props }) => (\n  <PfTooltip\n    className={`curiosity-tooltip${(isNoWrap && '__nowrap') || ''}`}\n    content={(React.isValidElement(content) && content) || <p>{content || ''}</p>}\n    {...props}\n  >\n    {(React.isValidElement(children) && children) || <span className=\"curiosity-tooltip-children\">{children}</span>}\n  </PfTooltip>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, content: React.ReactNode}}\n */\nTooltip.propTypes = {\n  children: PropTypes.node.isRequired,\n  content: PropTypes.node,\n  distance: PropTypes.number,\n  enableFlip: PropTypes.bool,\n  entryDelay: PropTypes.number,\n  exitDelay: PropTypes.number,\n  isNoWrap: PropTypes.bool,\n  position: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{content: string}}\n */\nTooltip.defaultProps = {\n  content: '...',\n  distance: 5,\n  enableFlip: false,\n  entryDelay: 100,\n  exitDelay: 0,\n  isNoWrap: false,\n  position: TooltipPosition.top\n};\n\nexport { Tooltip as default, Tooltip };\n","import { helpers } from '../common/helpers';\n\n/**\n * IIFE for generating a product configs listing via webpack\n *\n * @type {{aliases: string[], productGroup: string, productId: string, productLabel: string, productDisplay: string, viewId: string,\n *     productVariants: string[], query: object, graphTallyQuery: object, inventoryHostQuery: object,\n *     inventorySubscriptionsQuery: object, initialGraphFilters: {}[], initialGraphSettings: object, initialGuestsFilters: {}[],\n *     initialInventoryFilters: {}[], initialSubscriptionsInventoryFilters: {}[], initialToolbarFilters: {}[], }[]}\n */\nconst productConfigs = (() => {\n  try {\n    const path = require.context('./', false, /product\\.[\\d\\D]+\\.js$/i);\n    return path.keys().map(path);\n  } catch (e) {\n    /**\n     * Basic configuration for testing only.\n     */\n    if (process.env.REACT_APP_ENV === 'test' && require) {\n      return [\n        ...require('fs') // eslint-disable-line\n          ?.readdirSync('./src/config') // eslint-disable-line\n          ?.filter(file => /product\\.[a-z]+\\.js/i.test(file)) // eslint-disable-line\n          ?.map(file => require(`./${file}`)) // eslint-disable-line\n      ];\n    }\n\n    console.warn(`Product configuration failed to load: ${e.message}`);\n    return [];\n  }\n})()?.map(value => value.config);\n\n/**\n * Sorted/organized/grouped product configs.\n * - byAlias,object configurations associated with product aliases\n * - byAnything, object of all productGroups, productIds, productPaths, and aliases with lists of their related configurations\n * - byAnythingPathIds, list of identifiers associated with all productGroups, productIds, productPaths, and aliases\n * - byAnythingVariants, object of all productGroups, productIds, productPaths, and aliases associated with lists of their related variants\n * - byGroupIdConfigs, object of productGroup properties against an array of associated product configs\n * - byGroupIds, object of productGroup properties against an array of associated productId strings.\n * - byGroupIdVariants, object of productGroup properties against an array of associated product variants\n * - byProductIdConfigs, object of productId properties against a product config\n * - byProductIds, a unique array of all productId strings\n * - byProductPathConfigs, object of productPath properties against an array of associated product configs\n * - byViewIdConfigs, object of viewId properties against an array of associated product configs\n * - byViewIds, object of viewId properties against an array of associated productId strings. \"viewId\" was created because of the\n *     overlap with productIds and productGroups, this may be refactored in the future\n *\n * @param {productConfigs} configs\n * @returns {{byGroupIdVariants: {}, byProductPathConfigs: {}, byAnythingVariants: {}, byAnything: {},\n *     byAnythingPathIds: string[], byGroupIdConfigs: {}, byViewIds: {}, byProductIds: any[], byAlias: {},\n *     byGroupIds: {}, byViewIdConfigs: {}, byProductIdConfigs: {}}}\n */\nconst sortedProductConfigs = helpers.memo((configs = productConfigs) => {\n  const viewIdConfigs = {};\n  const productAliases = {};\n  const productIds = new Set();\n  const productIdConfigs = {};\n  const productPathConfigs = {};\n  const anything = {};\n  const anythingVariants = {};\n  const groupIdConfigs = {};\n  const groupedGroupIds = {};\n  const groupedVariants = {};\n  const groupedViewIds = {};\n\n  configs?.forEach(config => {\n    const { aliases, productGroup, productId, productLabel, productPath, productVariants, viewId } = config;\n\n    if (productGroup && productId) {\n      anything[productGroup] ??= {};\n      anything[productGroup][productId] = config;\n    }\n\n    if (productId) {\n      anything[productId] ??= {};\n      anything[productId][productId] = config;\n    }\n\n    if (productLabel && productId) {\n      anything[productLabel] ??= {};\n      anything[productLabel][productId] = config;\n    }\n\n    if (productPath && productId) {\n      anything[productPath] ??= {};\n      anything[productPath][productId] = config;\n    }\n\n    aliases?.forEach(alias => {\n      if (productId) {\n        anything[alias] ??= {};\n        anything[alias][productId] = config;\n      }\n\n      productAliases[alias] ??= [];\n      productAliases[alias].push(config);\n    });\n\n    productVariants?.forEach(variant => {\n      if (productId) {\n        anything[variant] ??= {};\n        anything[variant][productId] = config;\n        anything[variant][productId] = { ...config, productId: variant };\n      }\n\n      productAliases[variant] ??= [];\n      productAliases[variant].push({ ...config, productId: variant });\n    });\n\n    if (productId) {\n      productIdConfigs[productId] = config;\n      productIds.add(productId);\n    }\n\n    if (productPath) {\n      productPathConfigs[productPath] ??= [];\n      productPathConfigs[productPath].push(config);\n    }\n\n    if (productGroup) {\n      groupIdConfigs[productGroup] ??= [];\n      groupIdConfigs[productGroup].push(config);\n\n      if (Array.isArray(productVariants)) {\n        groupedVariants[productGroup] ??= [];\n        groupedVariants[productGroup].push(...productVariants);\n      }\n    }\n\n    if (productGroup && productId) {\n      groupedGroupIds[productGroup] ??= [];\n      groupedGroupIds[productGroup].push(productId);\n\n      if (!groupedVariants[productGroup]?.includes(productId)) {\n        groupedVariants[productGroup] ??= [];\n        groupedVariants[productGroup].push(productId);\n      }\n    }\n\n    if (viewId) {\n      viewIdConfigs[viewId] ??= [];\n      viewIdConfigs[viewId].push(config);\n    }\n\n    if (viewId && productId) {\n      groupedViewIds[viewId] ??= [];\n      groupedViewIds[viewId].push(productId);\n    }\n  });\n\n  Object.entries(anything).forEach(([key, value]) => {\n    anything[key] = Object.values(value);\n    anythingVariants[key] ??= [];\n\n    anything[key].forEach(({ productGroup }) => {\n      if (productGroup) {\n        anythingVariants[key] = Array.from(\n          new Set([...anythingVariants[key], ...groupedVariants[productGroup]])\n        ).sort();\n      }\n    });\n  });\n\n  return helpers.objFreeze({\n    byAlias: productAliases,\n    byAnything: anything,\n    byAnythingPathIds: Object.keys(anything).sort(),\n    byAnythingVariants: anythingVariants,\n    byGroupIdConfigs: groupIdConfigs,\n    byGroupIds: groupedGroupIds,\n    byGroupIdVariants: groupedVariants,\n    byProductPathConfigs: productPathConfigs,\n    byProductIdConfigs: productIdConfigs,\n    byProductIds: Array.from(productIds),\n    byViewIdConfigs: viewIdConfigs,\n    byViewIds: groupedViewIds\n  });\n});\n\nconst products = {\n  configs: productConfigs,\n  sortedConfigs: sortedProductConfigs\n};\n\nexport { products as default, products, productConfigs, sortedProductConfigs };\n","import { helpers } from '../common';\n\nconst routes = [\n  {\n    id: 'any',\n    path: ':productPath',\n    redirect: null,\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'missing',\n    path: '*',\n    redirect: './',\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: true,\n    component: 'productView/productViewMissing'\n  }\n];\n\nexport { routes as default, routes };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES as INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { Tooltip } from '../components/tooltip/tooltip';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { ChartIcon } from '../components/chart/chartIcon';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = 'openshift';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT;\n\n/**\n * OpenShift Container product config\n *\n * @type {{productLabel: string, productPath: string, initialOption: string, aliases: string[], productId: string, inventorySubscriptionsQuery: object,\n *     query: object, initialSubscriptionsInventoryFilters: {}[], initialInventorySettings: object, viewId: string, initialToolbarFilters: {}[],\n *     productGroup: string, graphTallyQuery: object, inventoryHostsQuery: object, productDisplay: string, productContextFilterUom: boolean,\n *     initialGraphFilters: {}[], initialGuestsFilters: {}[], inventoryGuestsQuery: object, initialGraphSettings: object, initialInventoryFilters: {}[]}}\n */\nconst config = {\n  aliases: [RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT, 'openshift-container', 'container', 'platform', 'shift'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.CAPACITY,\n  viewId: `view${productGroup}`,\n  productContextFilterUom: true,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.CORES,\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryGuestsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialOption: RHSM_API_QUERY_UOM_TYPES.CORES,\n  initialGraphFilters: [\n    {\n      filters: [\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n          isOptional: true,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          isOptional: true,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          chartType: ChartTypeVariant.threshold,\n          isOptional: true\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n          chartType: ChartTypeVariant.threshold,\n          isOptional: true\n        }\n      ]\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.UOM,\n        position: SelectPosition.right\n      },\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      metric: INVENTORY_TYPES.DISPLAY_NAME,\n      header: () => translate('curiosity-inventory.guestsHeader', { context: [INVENTORY_TYPES.DISPLAY_NAME] }),\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName, [INVENTORY_TYPES.INVENTORY_ID]: inventoryId } = {},\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId) {\n          return displayName;\n        }\n\n        let updatedDisplayName = displayName || inventoryId;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${inventoryId}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      }\n    },\n    {\n      metric: INVENTORY_TYPES.INVENTORY_ID,\n      width: 40\n    },\n    {\n      metric: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) => (lastSeen && <DateFormat date={lastSeen} />) || '',\n      width: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      metric: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        {\n          [INVENTORY_TYPES.DISPLAY_NAME]: displayName,\n          [INVENTORY_TYPES.INSTANCE_ID]: instanceId,\n          [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests\n        } = {},\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId) {\n          return displayName;\n        }\n\n        let updatedDisplayName = displayName || instanceId;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSort: true\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      header: (data, session, { [INVENTORY_META_TYPES.UOM]: uom } = {}) =>\n        translate('curiosity-inventory.header', { context: [uom, productId] }),\n      cell: (data = {}, session, { [INVENTORY_META_TYPES.UOM]: uom } = {}) => data?.[uom] || '--',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) => (lastSeen && <DateFormat date={lastSeen} />) || '',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    }\n  ],\n  initialInventorySettings: {\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME\n      }\n    ],\n    guestContent: ({\n      [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {},\n      [INVENTORY_TYPES.INSTANCE_ID]: id\n    } = {}) => (numberOfGuests > 0 && id && { id, numberOfGuests }) || undefined\n  },\n  initialSubscriptionsInventoryFilters: [\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSort: true,\n      isWrap: true\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSort: true,\n      isWrap: true,\n      width: 20\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY,\n      header: (data, session, { [INVENTORY_META_TYPES.UOM]: uom } = {}) =>\n        translate('curiosity-inventory.header', { context: ['subscriptions', uom] }),\n      cell: ({\n        [SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY]: totalCapacity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom\n      } = {}) => {\n        if (hasInfiniteQuantity === true) {\n          const content = translate(`curiosity-inventory.label`, {\n            context: [SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY, uom]\n          });\n          return (\n            <Tooltip content={content}>\n              <ChartIcon symbol=\"infinity\" aria-label={content} />\n            </Tooltip>\n          );\n        }\n        return totalCapacity;\n      },\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate && moment.utc(nextEventDate).format('YYYY-MM-DD')) || '',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment/moment';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\nconst productGroup = 'openshift';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\n/**\n * OpenShift Dedicated product config\n *\n * @type {{productLabel: string, productPath: string, aliases: string[], productId: string, query: object, initialInventorySettings: object,\n *     viewId: string, initialToolbarFilters: {}[], productGroup: string, graphTallyQuery: object, inventoryHostsQuery: object,\n *     productDisplay: string, initialGraphFilters: {}[], initialGuestsFilters: {}[], inventoryGuestsQuery: object,\n *     initialGraphSettings: object, initialInventoryFilters: {}[]}}\n */\nconst config = {\n  aliases: ['openshift-dedicated', 'dedicated'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}-${productId}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryGuestsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['dailyTotal', dataSets?.[0]?.display?.chartId],\n            testId: 'graphDailyTotalCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.dailyHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphDailyTotalCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.dailyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dataSets?.[0]?.display?.dailyValue} aria-label={dataSets?.[0]?.display?.dailyValue} />]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.dailyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphDailyTotalCard-footer'\n          })\n      },\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['monthlyTotal', dataSets?.[0]?.display?.chartId],\n            testId: 'graphMonthlyTotalCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.monthlyHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphMonthlyTotalCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.monthlyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dataSets?.[0]?.display?.monthlyValue} aria-label={dataSets?.[0]?.display?.monthlyValue} />]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.monthlyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphMonthlyTotalCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick } = {}) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialGuestsFilters: [\n    {\n      metric: INVENTORY_TYPES.DISPLAY_NAME,\n      header: () => translate('curiosity-inventory.guestsHeader', { context: [INVENTORY_TYPES.DISPLAY_NAME] }),\n      cell: ({ [INVENTORY_TYPES.DISPLAY_NAME]: displayName, [INVENTORY_TYPES.INVENTORY_ID]: inventoryId } = {}) => {\n        // FixMe: Disabled, see SWATCH-1209 for resolution\n        const { inventory: authorized = false } = {};\n\n        if (!inventoryId) {\n          return displayName;\n        }\n\n        let updatedDisplayName = displayName || inventoryId;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${inventoryId}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      }\n    },\n    {\n      metric: INVENTORY_TYPES.INVENTORY_ID,\n      width: 40\n    },\n    {\n      metric: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) => (lastSeen && <DateFormat date={lastSeen} />) || '',\n      width: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      metric: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: ({\n        [INVENTORY_TYPES.DISPLAY_NAME]: displayName,\n        [INVENTORY_TYPES.INSTANCE_ID]: instanceId,\n        [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests\n      } = {}) => {\n        // FixMe: Disabled, see SWATCH-1209 for resolution\n        const { inventory: authorized = false } = {};\n\n        if (!instanceId) {\n          return displayName;\n        }\n\n        let updatedDisplayName = displayName || instanceId;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSort: true\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: cores }) =>\n        (typeof cores === 'number' && Number.parseFloat(cores).toFixed(2)) || '--',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS]: instanceHours } = {}) =>\n        (typeof instanceHours === 'number' && Number.parseFloat(instanceHours).toFixed(2)) || '--',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) => (lastSeen && <DateFormat date={lastSeen} />) || '',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    }\n  ],\n  initialInventorySettings: {\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME\n      }\n    ],\n    guestContent: ({\n      [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {},\n      [INVENTORY_TYPES.INSTANCE_ID]: id\n    } = {}) => (numberOfGuests > 0 && id && { id, numberOfGuests }) || undefined\n  },\n  initialToolbarFilters: [\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chartHelpers';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = 'openshift';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS;\n\n/**\n * OpenShift Metrics product config\n *\n * @type {{productLabel: string, productPath: string, aliases: string[], productId: string, query: object,\n *     initialInventorySettings: object, viewId: string, initialToolbarFilters: {}[], productGroup: string,\n *     graphTallyQuery: object, inventoryHostsQuery: object, productDisplay: string, initialGraphFilters: {}[],\n *     initialGuestsFilters: {}[], inventoryGuestsQuery: object, initialGraphSettings: object,\n *     initialInventoryFilters: {}[]}}\n */\nconst config = {\n  aliases: [RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS, 'metrics'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}-${productId}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryGuestsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['dailyTotal', dataSets?.[0]?.display?.chartId],\n            testId: 'graphDailyTotalCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.dailyHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphDailyTotalCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.dailyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dataSets?.[0]?.display?.dailyValue} aria-label={dataSets?.[0]?.display?.dailyValue} />]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.dailyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphDailyTotalCard-footer'\n          })\n      },\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['monthlyTotal', dataSets?.[0]?.display?.chartId],\n            testId: 'graphMonthlyTotalCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.monthlyHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphMonthlyTotalCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.monthlyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dataSets?.[0]?.display?.monthlyValue} aria-label={dataSets?.[0]?.display?.monthlyValue} />]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.monthlyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphMonthlyTotalCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick } = {}) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialGuestsFilters: [\n    {\n      metric: INVENTORY_TYPES.DISPLAY_NAME,\n      header: () => translate('curiosity-inventory.guestsHeader', { context: [INVENTORY_TYPES.DISPLAY_NAME] }),\n      cell: ({ [INVENTORY_TYPES.DISPLAY_NAME]: displayName, [INVENTORY_TYPES.INVENTORY_ID]: inventoryId } = {}) => {\n        // FixMe: Disabled, see SWATCH-1209 for resolution\n        const { inventory: authorized = false } = {};\n\n        if (!inventoryId) {\n          return displayName;\n        }\n\n        let updatedDisplayName = displayName || inventoryId;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${inventoryId}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      }\n    },\n    {\n      metric: INVENTORY_TYPES.INVENTORY_ID,\n      width: 40\n    },\n    {\n      metric: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) => (lastSeen && <DateFormat date={lastSeen} />) || '',\n      width: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      metric: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: ({\n        [INVENTORY_TYPES.DISPLAY_NAME]: displayName,\n        [INVENTORY_TYPES.INSTANCE_ID]: instanceId,\n        [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests\n      } = {}) => {\n        // FixMe: Disabled, see SWATCH-1209 for resolution\n        const { inventory: authorized = false } = {};\n\n        if (!instanceId) {\n          return displayName;\n        }\n\n        let updatedDisplayName = displayName || instanceId;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSort: true\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: cores } = {}) =>\n        (typeof cores === 'number' && Number.parseFloat(cores).toFixed(2)) || '--',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) => (lastSeen && <DateFormat date={lastSeen} />) || '',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    }\n  ],\n  initialInventorySettings: {\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME\n      }\n    ],\n    guestContent: ({\n      [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {},\n      [INVENTORY_TYPES.INSTANCE_ID]: id\n    } = {}) => (numberOfGuests > 0 && id && { id, numberOfGuests }) || undefined\n  },\n  initialToolbarFilters: [\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst config = {\n  aliases: ['advanced', 'cluster', 'security', 'kubernetes', 'acs'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['dailyTotal', dataSets?.[0]?.display?.chartId],\n            testId: 'graphDailyTotalCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.dailyHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphDailyTotalCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.dailyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dataSets?.[0]?.display?.dailyValue} aria-label={dataSets?.[0]?.display?.dailyValue} />]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.dailyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphDailyTotalCard-footer'\n          })\n      },\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['monthlyTotal', dataSets?.[0]?.display?.chartId],\n            testId: 'graphMonthlyTotalCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.monthlyHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphMonthlyTotalCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.monthlyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dataSets?.[0]?.display?.monthlyValue} aria-label={dataSets?.[0]?.display?.monthlyValue} />]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.monthlyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphMonthlyTotalCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick } = {}) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      metric: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: ({ [INVENTORY_TYPES.DISPLAY_NAME]: displayName, [INVENTORY_TYPES.INSTANCE_ID]: instanceId }, session) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId) {\n          return displayName;\n        }\n\n        let updatedDisplayName = displayName || instanceId;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/application-services/acs/instances/instance/${instanceId}`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSort: true\n    },\n    {\n      metric: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider || 'none'\n        }),\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.CORES,\n          total: helpers.numberDisplay(total)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) => (lastSeen && <DateFormat date={lastSeen} />) || '',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    }\n  ],\n  initialInventorySettings: {\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME\n      }\n    ],\n    guestContent: ({\n      [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {},\n      [INVENTORY_TYPES.INSTANCE_ID]: id\n    } = {}) => (numberOfGuests > 0 && id && { id, numberOfGuests }) || undefined\n  },\n  initialSubscriptionsInventoryFilters: [\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSort: true,\n      isWrap: true\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label`, {\n          context: [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER, provider || 'none']\n        }),\n      isSort: true,\n      isWrap: false,\n      width: 15\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSort: true,\n      isWrap: true,\n      width: 10\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label`, {\n          context: [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE, subscriptionType || EMPTY_CONTEXT]\n        }),\n      isSort: false,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate && helpers.isDate(nextEventDate) && moment.utc(nextEventDate).format('YYYY-MM-DD')) || '',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    },\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_orange_100 as chartColorOrangeLight,\n  chart_color_orange_300 as chartColorOrangeDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES as CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES as INVENTORY_META_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { Tooltip } from '../components/tooltip/tooltip';\nimport { ChartIcon } from '../components/chart/chartIcon';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = 'rhel';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHEL_X86;\n\nconst productLabel = 'RHEL';\n\n/**\n * RHEL product config\n *\n * @type {{productLabel: string, productPath: string, aliases: string[], productId: string, inventorySubscriptionsQuery: object,\n *     query: object, initialSubscriptionsInventoryFilters: {}[], initialInventorySettings: object, viewId: string,\n *     initialToolbarFilters: {}[], productGroup: string, graphTallyQuery: object, inventoryHostsQuery: object, productDisplay: string,\n *     productVariants: Array, initialGraphFilters: {}[], initialGuestsFilters: {}[], inventoryGuestsQuery: object,\n *     initialGraphSettings: object, initialInventoryFilters: {}[]}}\n */\nconst config = {\n  aliases: ['insights', 'enterprise', 'linux', 'el', 'x86', 'ibm', 'power'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.CAPACITY,\n  viewId: `view${productGroup}`,\n  productVariants: [...Object.values(RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES)],\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.SOCKETS,\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryGuestsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      filters: [\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.PHYSICAL\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorCyanLight.value,\n          stroke: chartColorCyanDark.value,\n          color: chartColorCyanDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.VIRTUAL\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorPurpleLight.value,\n          stroke: chartColorPurpleDark.value,\n          color: chartColorPurpleDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.CLOUD\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorOrangeLight.value,\n          stroke: chartColorOrangeDark.value,\n          color: chartColorOrangeDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.HYPERVISOR\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          chartType: ChartTypeVariant.threshold\n        }\n      ]\n    }\n  ],\n  initialGraphSettings: {\n    isDisabledLegendClick: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      metric: INVENTORY_TYPES.DISPLAY_NAME,\n      header: () => translate('curiosity-inventory.guestsHeader', { context: [INVENTORY_TYPES.DISPLAY_NAME] }),\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName, [INVENTORY_TYPES.INVENTORY_ID]: inventoryId } = {},\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId) {\n          return displayName;\n        }\n\n        let updatedDisplayName = displayName || inventoryId;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${inventoryId}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      }\n    },\n    {\n      metric: INVENTORY_TYPES.INVENTORY_ID,\n      width: 40\n    },\n    {\n      metric: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) => (lastSeen && <DateFormat date={lastSeen} />) || '',\n      width: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      metric: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: ({ [INVENTORY_TYPES.DISPLAY_NAME]: displayName, [INVENTORY_TYPES.INSTANCE_ID]: instanceId }, session) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId) {\n          return displayName;\n        }\n\n        let updatedDisplayName = displayName || instanceId;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSort: true\n    },\n    {\n      metric: INVENTORY_TYPES.NUMBER_OF_GUESTS,\n      cell: ({ [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests } = {}) => numberOfGuests || '--',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: INVENTORY_TYPES.CATEGORY,\n      cell: ({ [INVENTORY_TYPES.CLOUD_PROVIDER]: cloudProvider, [INVENTORY_TYPES.CATEGORY]: category } = {}) => (\n        <React.Fragment>\n          {translate('curiosity-inventory.label', { context: [INVENTORY_TYPES.CATEGORY, category] })}{' '}\n          {(cloudProvider && (\n            <PfLabel color=\"purple\">\n              {translate('curiosity-inventory.label', {\n                context: [INVENTORY_TYPES.CLOUD_PROVIDER, cloudProvider]\n              })}\n            </PfLabel>\n          )) ||\n            ''}\n        </React.Fragment>\n      ),\n      isSort: true,\n      width: 20\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.SOCKETS]: sockets } = {}) => sockets || '--',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) => (lastSeen && <DateFormat date={lastSeen} />) || '',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    }\n  ],\n  initialInventorySettings: {\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME\n      }\n    ],\n    guestContent: ({\n      [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {},\n      [INVENTORY_TYPES.INSTANCE_ID]: id\n    } = {}) => (numberOfGuests > 0 && id && { id, numberOfGuests }) || undefined\n  },\n  initialSubscriptionsInventoryFilters: [\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSort: true,\n      isWrap: true\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSort: true,\n      isWrap: true,\n      width: 10\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY,\n      header: (data, session, { [INVENTORY_META_TYPES.UOM]: uom } = {}) =>\n        translate('curiosity-inventory.header', { context: ['subscriptions', uom] }),\n      cell: ({\n        [SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY]: totalCapacity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom\n      } = {}) => {\n        if (hasInfiniteQuantity === true) {\n          const content = translate(\n            `curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY}`,\n            { context: uom }\n          );\n          return (\n            <Tooltip content={content}>\n              <ChartIcon symbol=\"infinity\" aria-label={content} />\n            </Tooltip>\n          );\n        }\n        return totalCapacity;\n      },\n      isSort: true,\n      isWrap: true,\n      width: 10\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate && moment.utc(nextEventDate).format('YYYY-MM-DD')) || '',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.USAGE,\n      selected: true\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.CATEGORY\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst config = {\n  aliases: ['application-services', 'data', 'science', 'ods'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['dailyTotal', dataSets?.[0]?.display?.chartId],\n            testId: 'graphDailyTotalCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.dailyHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphDailyTotalCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.dailyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dataSets?.[0]?.display?.dailyValue} aria-label={dataSets?.[0]?.display?.dailyValue} />]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.dailyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphDailyTotalCard-footer'\n          })\n      },\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['monthlyTotal', dataSets?.[0]?.display?.chartId],\n            testId: 'graphMonthlyTotalCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.monthlyHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphMonthlyTotalCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.monthlyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dataSets?.[0]?.display?.monthlyValue} aria-label={dataSets?.[0]?.display?.monthlyValue} />]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.monthlyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphMonthlyTotalCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick } = {}) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      metric: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: ({ [INVENTORY_TYPES.DISPLAY_NAME]: displayName, [INVENTORY_TYPES.INSTANCE_ID]: instanceId }) => {\n        // FixMe: Disabled, see SWATCH-1209 for resolution\n        const { inventory: authorized = false } = {};\n\n        if (!instanceId) {\n          return displayName;\n        }\n\n        let updatedDisplayName = displayName || instanceId;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      metric: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider || 'none'\n        }),\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.CORES,\n          total: helpers.numberDisplay(total)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) => (lastSeen && <DateFormat date={lastSeen} />) || '',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    }\n  ],\n  initialInventorySettings: {\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME\n      }\n    ],\n    guestContent: ({\n      [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {},\n      [INVENTORY_TYPES.INSTANCE_ID]: id\n    } = {}) => (numberOfGuests > 0 && id && { id, numberOfGuests }) || undefined\n  },\n  initialSubscriptionsInventoryFilters: [\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSort: true,\n      isWrap: true\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label`, {\n          context: [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER, provider || 'none']\n        }),\n      isSort: false,\n      isWrap: false,\n      width: 15\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSort: true,\n      isWrap: true,\n      width: 10\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSort: false,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate && helpers.isDate(nextEventDate) && moment.utc(nextEventDate).format('YYYY-MM-DD')) || '',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    },\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_gold_400 as chartColorGoldLight,\n  chart_color_gold_400 as chartColorGoldDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment/moment';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES as CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { ChartTypeVariant } from '../components/chart/chartHelpers';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.ROSA;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.ROSA;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.ROSA;\n\nconst config = {\n  aliases: [],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.CAPACITY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY,\n    [RHSM_API_QUERY_SET_TYPES.USE_RUNNING_TOTALS_FORMAT]: true\n  },\n  inventoryGuestsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      filters: [\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.BILLING_CATEGORY]: CATEGORY_TYPES.PREPAID\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n          fill: chartColorGoldLight.value,\n          stroke: chartColorGoldDark.value,\n          color: chartColorGoldDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.BILLING_CATEGORY]: CATEGORY_TYPES.ON_DEMAND\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n          chartType: ChartTypeVariant.threshold\n        }\n      ]\n    },\n    {\n      filters: [\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.BILLING_CATEGORY]: CATEGORY_TYPES.PREPAID\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n          fill: chartColorGoldLight.value,\n          stroke: chartColorGoldDark.value,\n          color: chartColorGoldDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.BILLING_CATEGORY]: CATEGORY_TYPES.ON_DEMAND\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n          chartType: ChartTypeVariant.threshold\n        }\n      ]\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['remainingCapacity', dataSets?.[0]?.display?.chartId],\n            testId: 'graphRemainingCapacityCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.remainingCapacityHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphRemainingCapacityCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.remainingCapacity)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [\n              <strong\n                title={dataSets?.[0]?.display?.remainingCapacity}\n                aria-label={dataSets?.[0]?.display?.remainingCapacity}\n              />\n            ]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.dailyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphRemainingCapacityCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisLabelIncrement: 1,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    xAxisTickFormat: ({ tick }) => Number.parseInt(tick, 10) + 1 || tick,\n    yAxisTickFormat: ({ tick } = {}) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialGuestsFilters: [\n    {\n      metric: INVENTORY_TYPES.DISPLAY_NAME,\n      header: () => translate('curiosity-inventory.guestsHeader', { context: [INVENTORY_TYPES.DISPLAY_NAME] }),\n      cell: ({ [INVENTORY_TYPES.DISPLAY_NAME]: displayName, [INVENTORY_TYPES.INVENTORY_ID]: inventoryId } = {}) => {\n        // FixMe: Disabled, see SWATCH-1209 for resolution\n        const { inventory: authorized = false } = {};\n\n        if (!inventoryId) {\n          return displayName;\n        }\n\n        let updatedDisplayName = displayName || inventoryId;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${inventoryId}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      }\n    },\n    {\n      metric: INVENTORY_TYPES.INVENTORY_ID,\n      width: 40\n    },\n    {\n      metric: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) => (lastSeen && <DateFormat date={lastSeen} />) || '',\n      width: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      metric: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: ({ [INVENTORY_TYPES.DISPLAY_NAME]: displayName, [INVENTORY_TYPES.INSTANCE_ID]: instanceId }) => {\n        // FixMe: Disabled, see SWATCH-1209 for resolution\n        const { inventory: authorized = false } = {};\n\n        if (!instanceId) {\n          return displayName;\n        }\n\n        let updatedDisplayName = displayName || instanceId;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSort: true\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: cores }) =>\n        (typeof cores === 'number' && Number.parseFloat(cores).toFixed(2)) || '--',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS]: instanceHours } = {}) =>\n        (typeof instanceHours === 'number' && Number.parseFloat(instanceHours).toFixed(2)) || '--',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) => (lastSeen && <DateFormat date={lastSeen} />) || '',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    }\n  ],\n  initialInventorySettings: {\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME\n      }\n    ],\n    guestContent: ({\n      [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {},\n      [INVENTORY_TYPES.INSTANCE_ID]: id\n    } = {}) => (numberOfGuests > 0 && id && { id, numberOfGuests }) || undefined\n  },\n  initialSubscriptionsInventoryFilters: [\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSort: true,\n      isWrap: true\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSort: true,\n      isWrap: true,\n      width: 10\n    },\n    {\n      metric: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate && moment.utc(nextEventDate).format('YYYY-MM-DD')) || '',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES as CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = 'rhel';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.SATELLITE_SERVER;\n\nconst productLabel = 'Satellite';\n\n/**\n * Satellite product config\n *\n * @type {{productLabel: string, productPath: string, aliases: string[], productId: string, inventorySubscriptionsQuery: object,\n *     initialInventorySettings: object, viewId: string, initialToolbarFilters: {}[], productGroup: string, graphTallyQuery: object,\n *     inventoryHostsQuery: object, productDisplay: string, productVariants: Array, initialGraphFilters: {}[],\n *     initialGuestsFilters: {}[], inventoryGuestsQuery: object, initialGraphSettings: object, initialInventoryFilters: {}[]}}\n */\nconst config = {\n  aliases: ['sat', 'server', 'capsule'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.CAPACITY,\n  viewId: `view${productGroup}-${productId}`,\n  productVariants: [...Object.values(RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES)],\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryGuestsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      filters: [\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.PHYSICAL\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorCyanLight.value,\n          stroke: chartColorCyanDark.value,\n          color: chartColorCyanDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.VIRTUAL\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorPurpleLight.value,\n          stroke: chartColorPurpleDark.value,\n          color: chartColorPurpleDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.CLOUD\n          }\n        }\n      ]\n    }\n  ],\n  initialGraphSettings: {\n    isDisabledLegendClick: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      metric: INVENTORY_TYPES.DISPLAY_NAME,\n      header: () => translate('curiosity-inventory.guestsHeader', { context: [INVENTORY_TYPES.DISPLAY_NAME] }),\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName, [INVENTORY_TYPES.INVENTORY_ID]: inventoryId } = {},\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId) {\n          return displayName;\n        }\n\n        let updatedDisplayName = displayName || inventoryId;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${inventoryId}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      }\n    },\n    {\n      metric: INVENTORY_TYPES.INVENTORY_ID,\n      width: 40\n    },\n    {\n      metric: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) => (lastSeen && <DateFormat date={lastSeen} />) || '',\n      width: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      metric: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: ({ [INVENTORY_TYPES.DISPLAY_NAME]: displayName, [INVENTORY_TYPES.INSTANCE_ID]: instanceId }, session) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId) {\n          return displayName;\n        }\n\n        let updatedDisplayName = displayName || instanceId;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSort: true\n    },\n    {\n      metric: INVENTORY_TYPES.NUMBER_OF_GUESTS,\n      cell: ({ [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests } = {}) => numberOfGuests || '--',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: INVENTORY_TYPES.CATEGORY,\n      cell: ({ [INVENTORY_TYPES.CLOUD_PROVIDER]: cloudProvider, [INVENTORY_TYPES.CATEGORY]: category } = {}) => (\n        <React.Fragment>\n          {translate('curiosity-inventory.label', { context: [INVENTORY_TYPES.CATEGORY, category] })}{' '}\n          {(cloudProvider && (\n            <PfLabel color=\"purple\">\n              {translate('curiosity-inventory.label', {\n                context: [INVENTORY_TYPES.CLOUD_PROVIDER, cloudProvider]\n              })}\n            </PfLabel>\n          )) ||\n            ''}\n        </React.Fragment>\n      ),\n      isSort: true,\n      width: 20\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.SOCKETS]: sockets } = {}) => sockets || '--',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    },\n    {\n      metric: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) => (lastSeen && <DateFormat date={lastSeen} />) || '',\n      isSort: true,\n      isWrap: true,\n      width: 15\n    }\n  ],\n  initialInventorySettings: {\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME\n      }\n    ],\n    guestContent: ({\n      [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {},\n      [INVENTORY_TYPES.INSTANCE_ID]: id\n    } = {}) => (numberOfGuests > 0 && id && { id, numberOfGuests }) || undefined\n  },\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.USAGE,\n      selected: true\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.CATEGORY\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import { useEffect, useState } from 'react';\nimport { helpers } from '../common';\n\n/**\n * Global window related hooks.\n *\n * @memberof Hooks\n * @module UseWindow\n */\n\n/**\n * Apply a resize observer to an element.\n *\n * @param {*} target\n * @returns {{width: number, height: number}}\n */\nconst useResizeObserver = target => {\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    const isElementResize = target && window.ResizeObserver && true;\n    const element = target?.current;\n    let removeObserver = helpers.noop;\n    let timeout;\n\n    if (element) {\n      const handler = () => {\n        const { clientHeight = 0, clientWidth = 0, innerHeight = 0, innerWidth = 0 } = element || {};\n\n        timeout = window.setTimeout(() => {\n          setDimensions({\n            width: isElementResize ? clientWidth : innerWidth,\n            height: isElementResize ? clientHeight : innerHeight\n          });\n        });\n      };\n\n      if (isElementResize) {\n        const resizeObserver = new window.ResizeObserver(handler);\n        resizeObserver.observe(element);\n        removeObserver = () => resizeObserver.unobserve(element);\n      } else {\n        handler();\n        window.addEventListener('resize', handler);\n        removeObserver = () => window.removeEventListener('resize', handler);\n      }\n    }\n\n    return () => {\n      window.clearTimeout(timeout);\n      removeObserver();\n    };\n  }, [target]);\n\n  return dimensions;\n};\n\nconst windowHooks = {\n  useResizeObserver\n};\n\nexport { windowHooks as default, windowHooks, useResizeObserver };\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _camelCase from 'lodash/camelCase';\nimport _snakeCase from 'lodash/snakeCase';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Helpers\n * @module ReduxHelpers\n */\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Set an API query based on specific API \"acceptable values\" schema.\n *\n * @param {object} values\n * @param {object} schema\n * @param {*} [initialValue]\n * @returns {object}\n */\nconst setApiQuery = (values, schema, initialValue) => {\n  const generated = {};\n  const schemaArr = (schema && Object.values(schema)) || [];\n\n  schemaArr.forEach(value => {\n    if (initialValue === undefined) {\n      if (value in values) {\n        generated[value] = values?.[value];\n      }\n    } else {\n      generated[value] = values?.[value] || initialValue;\n    }\n  });\n\n  return generated;\n};\n\n// ToDo: research applying a maintained schema map/normalizer such as, normalizr\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} [initialValue]\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Normalize an API response.\n *\n * @param {*} responses\n * @param {object} responses.response\n * @param {object} responses.response.schema\n * @param {Array|object} responses.response.data\n * @param {string} responses.response.keyCase\n * @param {Function} responses.response.customResponseEntry\n * @param {Function} responses.response.customResponseValue\n * @param {string} responses.response.keyPrefix\n * @returns {Array}\n */\nconst setNormalizedResponse = (...responses) => {\n  const parsedResponses = [];\n\n  responses.forEach(\n    ({ schema = {}, data, customResponseEntry, customResponseValue, keyPrefix: prefix, keyCase = 'camel' }) => {\n      const isArray = Array.isArray(data);\n      const updatedData = (isArray && data) || (data && [data]) || [];\n      const [generatedSchema = {}] = setResponseSchemas([schema]);\n      const parsedResponse = [];\n\n      updatedData.forEach((value, index) => {\n        const generateReflectedData = ({\n          dataObj,\n          keyPrefix = '',\n          keyCaseType,\n          customEntry,\n          customValue = null,\n          update = helpers.noop\n        }) => {\n          let updatedDataObj = {};\n\n          Object.entries(dataObj).forEach(([dataObjKey, dataObjValue]) => {\n            let casedDataObjKey;\n\n            switch (keyCaseType) {\n              case 'camel':\n                casedDataObjKey = _camelCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'snake':\n                casedDataObjKey = _snakeCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'default':\n              default:\n                casedDataObjKey = `${dataObjKey}`.trim();\n                break;\n            }\n\n            let val = dataObjValue;\n\n            if (typeof val === 'number') {\n              val = (Number.isInteger(val) && Number.parseInt(val, 10)) || Number.parseFloat(val) || val;\n            }\n\n            if (typeof customValue === 'function') {\n              updatedDataObj[casedDataObjKey] = customValue({ data: dataObj, key: dataObjKey, value: val, index });\n            } else {\n              updatedDataObj[casedDataObjKey] = val;\n            }\n          });\n\n          if (typeof customEntry === 'function') {\n            updatedDataObj = customEntry(updatedDataObj, index);\n          }\n\n          update(updatedDataObj);\n        };\n\n        generateReflectedData({\n          keyPrefix: prefix,\n          dataObj: { ...generatedSchema, ...value },\n          keyCaseType: keyCase,\n          customEntry: customResponseEntry,\n          customValue: customResponseValue,\n          update: generatedData => parsedResponse.push(generatedData)\n        });\n      });\n\n      parsedResponses.push(parsedResponse);\n    }\n  );\n\n  return parsedResponses;\n};\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 400 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults?.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @param {object} options.state\n * @param {object} options.initialState\n * @param {boolean} options.reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (helpers.DEV_MODE && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (helpers.DEV_MODE && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    return {\n      meta: { ...updatedMeta },\n      ...Object.fromEntries(Object.entries(meta).map(([key, value]) => [_camelCase(`meta ${key}`), value]))\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  // Automatically apply data and state to a contextual ID if meta.id exists.\n  const setId = data =>\n    (typeof action.meta?.id === 'string' && action.meta?.id && { [action.meta.id]: { ...baseState, ...data } }) || {\n      ...baseState,\n      ...data\n    };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setApiQuery,\n  setResponseSchemas,\n  setNormalizedResponse,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","/* eslint-disable no-unsafe-optional-chaining */\nimport { useSelector as useReactReduxSelector, shallowEqual } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport { store } from '../store';\nimport { helpers } from '../../common';\n\n/**\n * State hooks for dispatch and selectors.\n *\n * @memberof Hooks\n * @module UseReactRedux\n */\n\n/**\n * Deep equal comparison with extended memoized cache. Is argument A equal to argument B.\n *\n * @param {object} args\n * @param {object|any} args.A\n * @param {object|any} args.B\n * @returns {boolean}\n */\nconst deepEqual = helpers.memo((...args) => _isEqual(...args), { cacheLimit: 50 });\n\n/**\n * FixMe: Appears to be an issue in trying to use Redux Promise with the default \"useDispatch\"\n */\n/**\n * Wrapper for store.dispatch, emulating useDispatch.\n *\n * @returns {Function}\n */\nconst useDispatch = () => dispatchEvent => store.dispatch(dispatchEvent);\n\n/**\n * Wrapper for Redux hook, useSelector. Applies test mode and a fallback value.\n *\n * @param {Function} selector\n * @param {*} value\n * @param {object} options\n * @param {*} options.equality\n * @param {Function} options.useSelector\n * @returns {*}\n */\nconst useSelector = (\n  selector,\n  value = null,\n  { equality, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => useAliasSelector(selector, equality) ?? value;\n\n/**\n * Generate a selector from multiple selectors for use in \"useSelector\".\n *\n * @param {Array|Function} selectors A selector function or array of functions. Or an array of objects in the form of\n *     { selector: Function, id: string } If an \"ID\" is used for each selector the returned response will be in the\n *     form of an object whose properties reflect said IDs with the associated selector value.\n * @param {*} value Pass-through value similar to charging the response.\n * @param {object} options\n * @param {Function} options.useSelector\n * @param {*} options.equality\n * @returns {Array|object}\n */\nconst useSelectors = (\n  selectors,\n  value,\n  { equality = deepEqual, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => {\n  let updatedSelectors = Array.isArray(selectors) ? selectors : [selectors];\n  const selectorIds = new Set();\n\n  updatedSelectors = updatedSelectors.map(selector => {\n    if (selector.selector && selector.id) {\n      selectorIds.add(selector.id);\n      return selector.selector;\n    }\n    return selector;\n  });\n\n  const multiSelector = createSelector(updatedSelectors, (...results) => results);\n\n  let listMultiSelectorResponse = (useAliasSelector(multiSelector, equality) ?? value) || [];\n  const undefinedMultiSelectorResponse = listMultiSelectorResponse.filter(response => response === undefined);\n\n  if (undefinedMultiSelectorResponse.length === listMultiSelectorResponse.length) {\n    listMultiSelectorResponse = [];\n  } else {\n    listMultiSelectorResponse = _cloneDeep(listMultiSelectorResponse);\n  }\n\n  if (selectorIds.size && selectorIds.size === listMultiSelectorResponse.length) {\n    const idMultiSelectorResponse = {};\n\n    Array.from(selectorIds).forEach((id, index) => {\n      idMultiSelectorResponse[id] = listMultiSelectorResponse[index];\n    });\n\n    return idMultiSelectorResponse;\n  }\n\n  return listMultiSelectorResponse;\n};\n\n/**\n * Return a combined selector response using a \"Promise.all\" like response.\n *\n * @param {Array|Function} selectors A selector function or array of functions. Or an array of objects in the form of\n *     { selector: Function, id: string } If an \"ID\" is used for each selector the returned response will be in the\n *     form of an object whose properties reflect said IDs with the associated selector value.\n * @param {object} options\n * @param {Function} options.useSelectors\n * @param {Function} options.customResponse Callback for customizing your own response\n * @returns {{data: ({}|Array), pending: boolean, fulfilled: boolean, responses: {errorList: Array, errorId: {},\n *     id: {}, list: Array}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsResponse = (selectors, { useSelectors: useAliasSelectors = useSelectors, customResponse } = {}) => {\n  const selectorResponse = useAliasSelectors(selectors, []);\n  const isSelectorResponseArray = Array.isArray(selectorResponse);\n\n  const cancelledById = {};\n  const cancelledByList = [];\n  const cancelledDataById = {};\n  const cancelledDataByList = [];\n\n  const errorByList = [];\n  const errorById = {};\n  const errorDataById = {};\n  const errorDataByList = [];\n\n  const fulfilledByList = [];\n  const fulfilledById = {};\n  const fulfilledDataById = {};\n  const fulfilledDataByList = [];\n\n  const pendingByList = [];\n\n  const responsesById = {};\n  const responsesByList = [];\n  const dataById = {};\n  const dataByList = [];\n\n  const idList = [];\n\n  const updatedSelectorResponse = _cloneDeep(\n    (isSelectorResponseArray && selectorResponse) || Object.entries(selectorResponse)\n  );\n\n  updatedSelectorResponse.forEach(response => {\n    const id = (!isSelectorResponseArray && response?.[0]) || null;\n\n    const updatedResponse = (isSelectorResponseArray && response) || response?.[1] || response;\n    const isServiceResponse =\n      typeof updatedResponse.cancelled === 'boolean' ||\n      typeof updatedResponse.error === 'boolean' ||\n      typeof updatedResponse.fulfilled === 'boolean' ||\n      typeof updatedResponse.pending === 'boolean';\n\n    const { pending, fulfilled, error, cancelled, message } = (isServiceResponse && updatedResponse) || {};\n\n    if (id !== null) {\n      idList.push(id);\n      updatedResponse.id = id;\n    }\n\n    if (cancelled) {\n      cancelledByList.push(updatedResponse);\n      cancelledDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        cancelledById[id] = cancelledByList[cancelledByList.length - 1];\n        cancelledDataById[id] =\n          cancelledByList[cancelledByList.length - 1]?.data || cancelledByList[cancelledByList.length - 1];\n      }\n    }\n\n    if (error) {\n      errorByList.push({\n        ...updatedResponse,\n        ...new Error(message || `Error: useSelectorsAllResponse${(id && `, ${id}`) || ''}`)\n      });\n      errorDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        errorById[id] = errorByList[errorByList.length - 1];\n        errorDataById[id] = errorByList[errorByList.length - 1]?.data || errorByList[errorByList.length - 1];\n      }\n    }\n\n    if (fulfilled) {\n      fulfilledByList.push(updatedResponse);\n      fulfilledDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        fulfilledById[id] = fulfilledByList[fulfilledByList.length - 1];\n        fulfilledDataById[id] =\n          fulfilledByList[fulfilledByList.length - 1]?.data || fulfilledByList[fulfilledByList.length - 1];\n      }\n    }\n\n    if (pending) {\n      pendingByList.push(updatedResponse);\n    }\n\n    if (id !== null) {\n      responsesById[id] = updatedResponse;\n      dataById[id] = updatedResponse?.data || updatedResponse;\n    }\n\n    responsesByList.push(updatedResponse);\n    dataByList.push(updatedResponse?.data || updatedResponse);\n  });\n\n  const isById = idList.length !== 0 && idList.length === updatedSelectorResponse.length;\n\n  const response = {\n    responses: {\n      id: responsesById,\n      list: responsesByList\n    },\n    cancelled: false,\n    data: (isById && {}) || [],\n    error: false,\n    fulfilled: false,\n    message: null,\n    pending: false\n  };\n\n  if (typeof customResponse === 'function') {\n    Object.assign(response, {\n      ...customResponse(\n        { ...response, responses: { ...response.responses } },\n        {\n          cancelledById,\n          cancelledByList,\n          cancelledDataById,\n          cancelledDataByList,\n          dataById,\n          dataByList,\n          errorByList,\n          errorById,\n          errorDataById,\n          errorDataByList,\n          fulfilledByList,\n          fulfilledById,\n          fulfilledDataById,\n          fulfilledDataByList,\n          idList,\n          isById,\n          pendingByList,\n          responsesByList,\n          responsesById,\n          updatedSelectorResponse\n        }\n      )\n    });\n\n    return response;\n  }\n\n  if (errorByList.length) {\n    response.message = new Error(errorByList[0]?.message || `useSelectorsResponse, ${JSON.stringify(errorByList[0])}`);\n    response.error = true;\n    response.data = (isById && errorDataById) || errorDataByList;\n    return response;\n  }\n\n  if (pendingByList.length) {\n    response.pending = true;\n    return response;\n  }\n\n  if (cancelledByList.length && cancelledByList.length === responsesByList.length) {\n    response.message = new Error('Cancelled useSelectorsResponse');\n    response.cancelled = true;\n    response.data = (isById && cancelledById) || cancelledByList;\n    return response;\n  }\n\n  if (\n    fulfilledByList.length &&\n    (fulfilledByList.length === responsesByList.length ||\n      cancelledByList.length + fulfilledByList.length === responsesByList.length)\n  ) {\n    response.fulfilled = true;\n    response.data = (isById && dataById) || dataByList;\n    return response;\n  }\n\n  return response;\n};\n\n/**\n * Return a combined selector response using a \"Promise.allSettled\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|Array), pending: boolean, fulfilled: boolean, responses: {errorList: Array, errorId: {},\n *     id: {}, list: Array}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsAllSettledResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    { cancelledByList, errorByList, fulfilledByList, pendingByList, dataById, dataByList, isById }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (\n      errorByList?.length + fulfilledByList?.length + cancelledByList?.length === dataByList?.length ||\n      errorByList?.length === dataByList?.length ||\n      fulfilledByList?.length === dataByList?.length ||\n      cancelledByList?.length === dataByList?.length\n    ) {\n      response.fulfilled = true;\n      response.data = (isById && dataById) || dataByList;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\n/**\n * Return a combined selector response using a \"Promise.any\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|Array), pending: boolean, fulfilled: boolean, responses: {errorList: Array, errorId: {},\n *     id: {}, list: Array}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsAnyResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    {\n      cancelledByList,\n      cancelledDataById,\n      cancelledDataByList,\n      errorByList,\n      errorDataById,\n      errorDataByList,\n      fulfilledByList,\n      fulfilledDataById,\n      fulfilledDataByList,\n      pendingByList,\n      responsesByList,\n      isById\n    }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (fulfilledByList?.length) {\n      let data = fulfilledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(fulfilledDataById);\n        data = (keyList?.[0] && fulfilledDataById[keyList[0]]) || undefined;\n      }\n\n      response.fulfilled = true;\n      response.data = data;\n      return response;\n    }\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (\n      errorByList?.length &&\n      (errorByList?.length === responsesByList?.length ||\n        cancelledByList?.length + errorByList?.length === responsesByList?.length)\n    ) {\n      response.message = helpers.aggregatedError(errorByList, 'useSelectorsAnyResponse');\n      response.error = true;\n      response.data = (isById && errorDataById) || errorDataByList;\n      return response;\n    }\n\n    if (cancelledByList?.length && cancelledByList?.length === responsesByList?.length) {\n      response.message = new Error('Cancelled useSelectorsAnyResponse');\n      response.cancelled = true;\n      response.data = (isById && cancelledDataById) || cancelledDataByList;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\n/**\n * Return a combined selector response using a \"Promise.race\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|Array), pending: boolean, fulfilled: boolean, responses: {errorList: Array, errorId: {},\n *     id: {}, list: Array}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsRaceResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    {\n      cancelledByList,\n      cancelledDataById,\n      cancelledDataByList,\n      errorByList,\n      errorDataById,\n      errorDataByList,\n      fulfilledByList,\n      fulfilledDataById,\n      fulfilledDataByList,\n      pendingByList,\n      responsesByList,\n      isById\n    }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (fulfilledByList?.length) {\n      let data = fulfilledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(fulfilledDataById);\n        data = (keyList?.[0] && fulfilledDataById[keyList[0]]) || undefined;\n      }\n\n      response.fulfilled = true;\n      response.data = data;\n      return response;\n    }\n\n    if (errorByList?.length) {\n      let data = errorDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(errorDataById);\n        data = (keyList?.[0] && errorDataById[keyList[0]]) || undefined;\n      }\n\n      response.message = new Error(\n        errorByList[0]?.message || `useSelectorsRaceResponse, ${JSON.stringify(errorByList[0])}`\n      );\n      response.error = true;\n      response.data = data;\n      return response;\n    }\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (cancelledByList?.length && cancelledByList?.length === responsesByList?.length) {\n      let data = cancelledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(cancelledDataById);\n        data = (keyList?.[0] && cancelledDataById[keyList[0]]) || undefined;\n      }\n\n      response.message = new Error('Cancelled useSelectorsRaceResponse');\n      response.cancelled = true;\n      response.data = data;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\nconst reactReduxHooks = {\n  deepEqual,\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useSelectors,\n  useSelectorsResponse,\n  useSelectorsAllSettledResponse,\n  useSelectorsAnyResponse,\n  useSelectorsRaceResponse\n};\n\nexport {\n  reactReduxHooks as default,\n  reactReduxHooks,\n  deepEqual,\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useSelectors,\n  useSelectorsResponse,\n  useSelectorsAllSettledResponse,\n  useSelectorsAnyResponse,\n  useSelectorsRaceResponse\n};\n","import { reactReduxHooks } from './useReactRedux';\n\nconst storeHooks = {\n  reactRedux: reactReduxHooks\n};\n\nexport { storeHooks as default, storeHooks, reactReduxHooks };\n","import _camelCase from 'lodash/camelCase';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Helpers\n * @module ServiceHelpers\n */\n\n/**\n * Pass through generate hash\n */\nconst { generateHash } = helpers;\n\n/**\n * A timeout cancel for function calls.\n *\n * @param {Function} func Callback to be executed or cancelled\n * @param {object} options\n * @param {number} options.timeout Function timeout in milliseconds\n * @param {string} options.errorMessage What the error message will read\n * @returns {Promise<*>}\n */\nconst timeoutFunctionCancel = (func, { timeout = 3000, errorMessage = 'function timeout' } = {}) => {\n  let clearTimer;\n\n  const timer = () =>\n    new Promise((_, reject) => {\n      clearTimer = window.setTimeout(reject, timeout, new Error(errorMessage));\n    });\n\n  const updatedFunc = async () => {\n    const response = await func();\n    window.clearTimeout(clearTimer);\n    return response;\n  };\n\n  const execFunction = () =>\n    Promise.race([timer(), updatedFunc()]).finally(() => {\n      window.clearTimeout(clearTimer);\n    });\n\n  return execFunction();\n};\n\n/**\n * Return objects with the keys camelCased. Normally applied to an array of objects.\n *\n * @param {object|Array|*} obj\n * @returns {object|Array|*}\n */\nconst camelCase = obj => {\n  if (Array.isArray(obj)) {\n    return obj.map(camelCase);\n  }\n\n  if (_isPlainObject(obj)) {\n    const updatedObj = {};\n\n    Object.entries(obj).forEach(([key, val]) => {\n      updatedObj[_camelCase(key)] = camelCase(val);\n    });\n\n    return updatedObj;\n  }\n\n  return obj;\n};\n\n/**\n * Apply data to a callback, pass original data on error.\n *\n * @param {Function} callback\n * @param {Array} data\n * @returns {{data: *, error}}\n */\nconst passDataToCallback = (callback, ...data) => {\n  let error;\n  let updatedData = data;\n\n  try {\n    updatedData = callback(...data);\n  } catch (e) {\n    error = e;\n  }\n\n  return { data: updatedData, error };\n};\n\n/**\n * A callback for schema validation, and after-the-fact casing adjustments.\n *\n * @param {object} options\n * @param {string} options.casing\n * @param {boolean} options.convert\n * @param {string} options.id\n * @param {object|Array} options.response\n * @param {*} options.schema\n * @returns {*|{}}\n */\nconst schemaResponse = ({ casing, convert = true, id = null, response, schema } = {}) => {\n  const { value, error = { details: [] } } = schema?.validate(response, { convert }) || {};\n\n  if (error.details.length && !helpers.TEST_MODE) {\n    console.error(\n      new Error(\n        `Passing original API response. Schema validation failed for ${id || '...'}: ${error.details\n          .map(({ context = {}, message, type }) => `${message}:${type}, ${JSON.stringify(context)}`)\n          .join(', ')}`\n      )\n    );\n  }\n\n  switch (casing) {\n    case 'camel':\n      return camelCase(value);\n    default:\n      return value;\n  }\n};\n\nconst serviceHelpers = {\n  camelCase,\n  generateHash,\n  passDataToCallback,\n  schemaResponse,\n  timeoutFunctionCancel\n};\n\nexport {\n  serviceHelpers as default,\n  serviceHelpers,\n  camelCase,\n  generateHash,\n  passDataToCallback,\n  schemaResponse,\n  timeoutFunctionCancel\n};\n","import axios, { CancelToken } from 'axios';\nimport LruCache from 'lru-cache';\nimport { serviceHelpers } from './helpers';\n\n/**\n * Axios config for cancelling, caching, and emulated service calls.\n *\n * @memberof Helpers\n * @module ServiceConfig\n */\n\n/**\n * Set Axios XHR default timeout.\n *\n * @type {number}\n */\nconst globalXhrTimeout = Number.parseInt(process.env.REACT_APP_AJAX_TIMEOUT, 10) || 60000;\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @type {object}\n */\nconst globalCancelTokens = {};\n\n/**\n * Cache Axios service call responses.\n *\n * @type {object}\n */\nconst globalResponseCache = new LruCache({\n  ttl: Number.parseInt(process.env.REACT_APP_AJAX_CACHE, 10) || 30000,\n  max: 100,\n  updateAgeOnGet: true\n});\n\n// ToDo: consider another way of hashing cacheIDs. base64 could get a little large depending on settings, i.e. md5\n/**\n * Set Axios configuration. This includes response schema validation and caching.\n * Call platform \"getUser\" auth method, and apply service config. Service configuration\n * includes the ability to cancel all and specific calls, cache and normalize a response\n * based on both a provided schema and a successful API response. The cache will refresh\n * its timeout on continuous calls. To reset it a user will either need to refresh the\n * page or wait the \"maxAge\".\n *\n * @param {object} config\n * @param {object} config.cache\n * @param {boolean} config.cancel\n * @param {string} config.cancelId\n * @param {object} config.params\n * @param {Array} config.schema\n * @param {Array} config.transform\n * @param {string|Function} config.url\n * @param {object} options\n * @param {string} options.cancelledMessage\n * @param {object} options.responseCache\n * @param {number} options.xhrTimeout\n * @returns {Promise<*>}\n */\nconst axiosServiceCall = async (\n  config = {},\n  { cancelledMessage = 'cancelled request', responseCache = globalResponseCache, xhrTimeout = globalXhrTimeout } = {}\n) => {\n  const updatedConfig = {\n    timeout: xhrTimeout,\n    ...config,\n    cache: undefined,\n    cacheResponse: config.cache,\n    method: config.method || 'get'\n  };\n  const responseTransformers = [];\n  const axiosInstance = axios.create();\n\n  // don't cache responses if \"get\" isn't used\n  updatedConfig.cacheResponse = updatedConfig.cacheResponse === true && updatedConfig.method === 'get';\n\n  // account for alterations to transforms, and other config props\n  const cacheId = (updatedConfig.cacheResponse === true && serviceHelpers.generateHash(updatedConfig)) || null;\n\n  // simple check to place responsibility on consumer, primarily used for testing\n  if (updatedConfig.exposeCacheId === true) {\n    updatedConfig.cacheId = cacheId;\n  }\n\n  if (updatedConfig.cancel === true) {\n    const cancelTokensId =\n      updatedConfig.cancelId || serviceHelpers.generateHash({ ...updatedConfig, data: undefined, params: undefined });\n\n    if (globalCancelTokens[cancelTokensId]) {\n      await globalCancelTokens[cancelTokensId].cancel(cancelledMessage);\n    }\n\n    globalCancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = globalCancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  if (updatedConfig.cacheResponse === true) {\n    const cachedResponse = responseCache.get(cacheId);\n\n    if (cachedResponse) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          ...cachedResponse,\n          status: 304,\n          statusText: 'Not Modified',\n          config: adapterConfig\n        });\n\n      return axiosInstance(updatedConfig);\n    }\n  }\n\n  if (updatedConfig.schema) {\n    responseTransformers.push(updatedConfig.schema);\n  }\n\n  if (updatedConfig.transform) {\n    responseTransformers.push(updatedConfig.transform);\n  }\n\n  responseTransformers.forEach(([successTransform, errorTransform]) => {\n    const transformers = [undefined, response => Promise.reject(response)];\n\n    if (successTransform) {\n      transformers[0] = response => {\n        const updatedResponse = { ...response };\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          successTransform,\n          updatedResponse.data,\n          updatedResponse.config\n        );\n\n        if (!normalizeError) {\n          updatedResponse.data = data;\n        }\n\n        return updatedResponse;\n      };\n    }\n\n    if (errorTransform) {\n      transformers[1] = response => {\n        const updatedResponse = { ...(response.response || response) };\n\n        if (updatedResponse?.message === cancelledMessage) {\n          return Promise.reject(updatedResponse);\n        }\n\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          errorTransform,\n          updatedResponse?.data || updatedResponse?.message,\n          updatedResponse.config\n        );\n\n        if (!normalizeError) {\n          updatedResponse.response = { ...updatedResponse, data };\n        }\n\n        return Promise.reject(updatedResponse);\n      };\n    }\n\n    axiosInstance.interceptors.response.use(...transformers);\n  });\n\n  if (updatedConfig.cacheResponse === true) {\n    axiosInstance.interceptors.response.use(\n      response => {\n        const updatedResponse = { ...response };\n        responseCache.set(cacheId, updatedResponse);\n        return updatedResponse;\n      },\n      response => Promise.reject(response)\n    );\n  }\n\n  if (typeof updatedConfig.url === 'function') {\n    const emulateCallback = updatedConfig.url;\n    updatedConfig.url = '/emulated';\n\n    let message = 'success, emulated';\n    let emulatedResponse;\n    let isSuccess = true;\n\n    try {\n      emulatedResponse = await serviceHelpers.timeoutFunctionCancel(emulateCallback, { timeout: xhrTimeout });\n    } catch (e) {\n      isSuccess = false;\n      message = e.message || e;\n    }\n\n    if (isSuccess) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          data: emulatedResponse,\n          status: 200,\n          statusText: message,\n          config: adapterConfig\n        });\n    } else {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.reject({ // eslint-disable-line\n          ...new Error(message),\n          message,\n          status: 418,\n          config: adapterConfig\n        });\n    }\n  }\n\n  return axiosInstance(updatedConfig);\n};\n\nconst serviceConfig = { axiosServiceCall, globalXhrTimeout, globalCancelTokens, globalResponseCache };\n\nexport {\n  serviceConfig as default,\n  serviceConfig,\n  axiosServiceCall,\n  globalXhrTimeout,\n  globalCancelTokens,\n  globalResponseCache\n};\n","import JoiBase from 'joi';\nimport JoiDate from '@joi/date';\nimport { schemaResponse } from '../common/helpers';\n\n/**\n * @memberof Platform\n * @module PlatformSchemas\n */\n\n/**\n * Extend Joi with date.\n *\n * @type {*}\n */\nconst Joi = JoiBase.extend(JoiDate);\n\n/**\n * User response item.\n *\n * @type {*} Joi schema\n */\nconst userResponseSchema = Joi.object()\n  .keys({\n    identity: Joi.object({\n      user: Joi.object({\n        is_org_admin: Joi.boolean().default(false)\n      })\n        .unknown(true)\n        .default({})\n    })\n      .unknown(true)\n      .default({}),\n    entitlements: Joi.object({\n      [process.env.REACT_APP_UI_NAME]: Joi.object({\n        is_entitled: Joi.boolean().default(false)\n      })\n        .unknown(true)\n        .default({})\n    })\n      .unknown(true)\n      .default({})\n  })\n  .unknown(true)\n  .default({});\n\n/**\n * Permissions response item.\n *\n * @type {*} Joi schema\n */\nconst permissionsItem = Joi.object({\n  permission: Joi.string().optional().allow(null),\n  resourceDefinitions: Joi.array().optional().default([])\n})\n  .unknown(true)\n  .default();\n\n/**\n * Authorize response.\n *\n * @type {*} Joi schema\n */\nconst permissionsResponseSchema = Joi.array().items(permissionsItem).default([]);\n\nconst platformSchemas = {\n  user: response => schemaResponse({ response, schema: userResponseSchema, id: 'User auth' }),\n  permissions: response => schemaResponse({ response, schema: permissionsResponseSchema, id: 'Permissions auth' })\n};\n\nexport { platformSchemas as default, platformSchemas };\n","import { rbacConfig } from '../../config';\nimport {\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES as OPERATION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES as RESOURCE_TYPES\n} from './platformConstants';\nimport { helpers } from '../../common';\n\n/**\n * Transform platform responses. Replaces selector usage.\n *\n * @memberof Platform\n * @module PlatformTransformers\n */\n\n/**\n * Parse platform getUser response.\n *\n * @param {object} response\n * @returns {object}\n */\nconst user = response => {\n  const updatedResponse = {};\n  const {\n    [platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY]: identity = {},\n    [platformConstants.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS]: entitlements = {}\n  } = response || {};\n\n  updatedResponse.isAdmin =\n    identity?.[platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]?.[\n      platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n    ] || false;\n\n  updatedResponse.isEntitled =\n    entitlements?.[helpers.UI_NAME]?.[platformConstants.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED] ||\n    false;\n\n  return updatedResponse;\n};\n\n/**\n * Parse platform getUserPermissions response.\n *\n * @param {object} response\n * @param {object} options\n * @param {object} options.config Pass in a configuration object, RBAC\n * @returns {object}\n */\nconst userPermissions = (response, { config = rbacConfig } = {}) => {\n  const updatedResponse = {\n    permissions: {},\n    authorized: {}\n  };\n\n  response?.forEach(\n    ({\n      [platformConstants.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION]: permission,\n      [platformConstants.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]: definitions = []\n    }) => {\n      const [app = '', resource, operation] = permission?.split(':') || [];\n\n      if (!updatedResponse.permissions[app]) {\n        updatedResponse.permissions[app] = {\n          all: false,\n          resources: {}\n        };\n      }\n\n      if (resource === RESOURCE_TYPES.ALL && operation === OPERATION_TYPES.ALL) {\n        updatedResponse.permissions[app].all = true;\n      }\n\n      if (resource) {\n        updatedResponse.permissions[app].resources[resource] ??= {};\n\n        if (operation) {\n          updatedResponse.permissions[app].resources[resource][operation] = definitions;\n        }\n      }\n    }\n  );\n\n  // Alias specific app permissions checks\n  Object.entries(config).forEach(([key, { permissions: resourcePermissions }]) => {\n    updatedResponse.authorized[key] = updatedResponse.permissions[key]?.all || false;\n\n    resourcePermissions.forEach(({ resource: res, operation: op }) => {\n      if (updatedResponse.permissions[key]?.resources?.[res]?.[op]) {\n        updatedResponse.authorized[key] = true;\n      }\n    });\n  });\n\n  return updatedResponse;\n};\n\nconst platformTransformers = {\n  user,\n  permissions: userPermissions\n};\n\nexport { platformTransformers as default, platformTransformers, user, userPermissions };\n","import _set from 'lodash/set';\nimport { rbacConfig } from '../../config';\nimport { axiosServiceCall } from '../common/serviceConfig';\nimport { platformSchemas } from './platformSchemas';\nimport { platformTransformers } from './platformTransformers';\nimport { helpers } from '../../common';\nimport {\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES as USER_PERMISSION_TYPES\n} from './platformConstants';\n\n/**\n * Emulated service calls for platform globals.\n *\n * @memberof Platform\n * @module PlatformServices\n */\n\n/**\n * Basic user authentication.\n *\n * @param {object} options\n * @returns {Promise<*>}\n */\nconst getUser = async (options = {}) => {\n  const { schema = [platformSchemas.user], transform = [platformTransformers.user] } = options;\n  const { insights } = window;\n  return axiosServiceCall({\n    url: async () => {\n      try {\n        return (\n          (helpers.DEV_MODE &&\n            _set(\n              {},\n              [\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY,\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n              ],\n              process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n            )) ||\n          (await insights.chrome.auth.getUser())\n        );\n      } catch (e) {\n        throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n      }\n    },\n    schema,\n    transform\n  });\n};\n\n/**\n * Basic user permissions.\n *\n * @param {string} appName\n * @param {object} options\n * @returns {Promise<*>}\n */\nconst getUserPermissions = (appName = Object.keys(rbacConfig), options = {}) => {\n  const { schema = [platformSchemas.permissions], transform = [platformTransformers.permissions] } = options;\n  const updatedAppName = (Array.isArray(appName) && appName) || [appName];\n  const { insights } = window;\n  const platformMethod = name =>\n    (helpers.DEV_MODE && [\n      {\n        [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_ONE\n      },\n      {\n        [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_TWO\n      }\n    ]) ||\n    insights.chrome.getUserPermissions(name);\n\n  return axiosServiceCall({\n    url: async () => {\n      let userPermissions;\n\n      try {\n        const allPermissions = await Promise.all(updatedAppName.map(name => platformMethod(name)));\n\n        if (Array.isArray(allPermissions)) {\n          userPermissions = [...allPermissions.flat()];\n        }\n      } catch (e) {\n        throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n      }\n\n      return userPermissions;\n    },\n    schema,\n    transform\n  });\n};\n\n/**\n * Disables the Platform's global filter display.\n *\n * @param {boolean} isHidden\n * @returns {Promise<*>}\n */\nconst hideGlobalFilter = async (isHidden = true) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.hideGlobalFilter(isHidden);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = {\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter\n};\n\nexport { platformServices as default, platformServices, getUser, getUserPermissions, hideGlobalFilter };\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platform/platformServices';\n\n/**\n * Platform service wrappers for dispatch, state update.\n *\n * @memberof Actions\n * @module PlatformActions\n */\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Get an emulated and combined API response from the platforms \"getUser\" and \"getUserPermissions\" global methods.\n *\n * @param {string|Array} appName\n * @returns {Function}\n */\nconst authorizeUser = appName => dispatch =>\n  dispatch({\n    type: platformTypes.PLATFORM_USER_AUTH,\n    payload: Promise.all([platformServices.getUser(), platformServices.getUserPermissions(appName)])\n  });\n\n/**\n * Hide platform global filter.\n *\n * @param {boolean} isHidden\n * @returns {{Function}}\n */\nconst hideGlobalFilter = isHidden => ({\n  type: platformTypes.PLATFORM_GLOBAL_FILTER_HIDE,\n  payload: platformServices.hideGlobalFilter(isHidden)\n});\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  authorizeUser,\n  hideGlobalFilter\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  authorizeUser,\n  hideGlobalFilter\n};\n","import { axiosServiceCall } from './common/serviceConfig';\nimport { platformServices } from './platform/platformServices';\n\n/**\n * @namespace Services\n * @property {module} Helpers\n * @property {module} Platform\n * @property {module} Rhsm\n * @property {module} User\n */\n\n/**\n * Apply a global custom service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  ...passedConfig\n});\n\n/**\n * Use a global Axios configuration.\n *\n * @param {object} config\n * @param {object} config.cache\n * @param {boolean} config.cancel\n * @param {string} config.cancelId\n * @param {object} config.params\n * @param {Array} config.schema\n * @param {Array} config.transform\n * @param {string|Function} config.url\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n  return axiosServiceCall(serviceConfig(config));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import JoiBase from 'joi';\nimport JoiDate from '@joi/date';\nimport { schemaResponse } from '../common/helpers';\nimport { rhsmConstants } from './rhsmConstants';\n\n/**\n * @memberof Rhsm\n * @module RhsmSchemas\n */\n\n/**\n * Extend Joi with date.\n *\n * @type {*}\n */\nconst Joi = JoiBase.extend(JoiDate);\n\n/**\n * Error response item.\n *\n * @type {*} Joi schema\n */\nconst errorItem = Joi.object({\n  code: Joi.string().default(null),\n  detail: Joi.string().default(null)\n}).unknown(true);\n\n/**\n * Error response.\n *\n * @type {*} Joi schema\n */\nconst errorResponseSchema = Joi.object()\n  .keys({\n    errors: Joi.array().items(errorItem).default([])\n  })\n  .unknown(true);\n\nconst linksSchema = Joi.object();\n\n/**\n * RHSM base response meta field.\n *\n * @type {*} Joi schema\n */\nconst metaResponseSchema = Joi.object()\n  .keys({\n    count: Joi.number().integer().default(0),\n    product: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_PRODUCT_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Capacity response meta field.\n *\n * @type {*} Joi schema\n */\nconst capacityMetaSchema = metaResponseSchema\n  .keys({\n    metric_id: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Capacity response item.\n *\n * @type {*} Joi schema\n */\nconst capacityItem = Joi.object({\n  date: Joi.date().utc().allow(null),\n  has_data: Joi.boolean().optional().allow(null),\n  has_infinite_quantity: Joi.boolean().optional().allow(null),\n  value: Joi.number().allow(null).default(0)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Capacity response.\n *\n * @type {*} Joi schema\n */\nconst capacityResponseSchema = Joi.object().keys({\n  data: Joi.array().items(capacityItem).default([]),\n  links: linksSchema.default({}),\n  meta: capacityMetaSchema.default({})\n});\n\n/**\n * Guests response meta field.\n *\n * @type {*} Joi schema\n */\nconst guestsMetaSchema = Joi.object()\n  .keys({\n    count: Joi.number().integer().default(0)\n  })\n  .unknown(true);\n\n/**\n * Guests response item.\n *\n * @type {*} Joi schema\n */\nconst guestsItem = Joi.object({\n  inventory_id: Joi.string().optional().allow(null),\n  display_name: Joi.string().optional().allow(null),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Guests response.\n *\n * @type {*} Joi schema\n */\nconst guestsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(guestsItem).default([]),\n  links: linksSchema.default({}),\n  meta: guestsMetaSchema.default({})\n});\n\n/**\n * Instances response meta field.\n *\n * @type {*} Joi schema\n */\nconst instancesMetaSchema = metaResponseSchema\n  .keys({\n    count: Joi.number().integer().default(0),\n    measurements: Joi.array()\n      .items(Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)))\n      .default([])\n  })\n  .unknown(true);\n\n/**\n * Instances response item.\n *\n * @type {*} Joi schema\n */\nconst instancesItem = Joi.object({\n  instance_id: Joi.string().optional().allow(null),\n  category: Joi.string().lowercase().optional().allow(null),\n  cloud_provider: Joi.string().lowercase().optional().allow(null, ''),\n  display_name: Joi.string().optional().allow(null),\n  billing_provider: Joi.string().lowercase().optional().allow(null, ''),\n  billing_account_id: Joi.string().optional().allow(null),\n  measurements: Joi.array().default([]),\n  number_of_guests: Joi.number().integer().default(0),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Instances response.\n *\n * @type {*} Joi schema\n */\nconst instancesResponseSchema = Joi.object().keys({\n  data: Joi.array().items(instancesItem).default([]),\n  links: linksSchema.default({}),\n  meta: instancesMetaSchema.default({})\n});\n\n/**\n * Subscriptions response meta field.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsMetaSchema = metaResponseSchema\n  .keys({\n    subscription_type: Joi.string().valid(null, ...Object.values(rhsmConstants.RHSM_API_RESPONSE_SUBSCRIPTION_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Subscriptions response item.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsItem = Joi.object({\n  has_infinite_quantity: Joi.boolean().optional().allow(null),\n  next_event_date: Joi.date().utc().allow(null),\n  product_name: Joi.string().optional().allow(null),\n  quantity: Joi.number().allow(null).default(0),\n  service_level: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_RESPONSE_SLA_TYPES)),\n  total_capacity: Joi.number().allow(null).default(0),\n  uom: Joi.string()\n    .lowercase()\n    .valid(...Object.values(rhsmConstants.RHSM_API_RESPONSE_UOM_TYPES))\n})\n  .unknown(true)\n  .default();\n\n/**\n * Subscriptions response.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(subscriptionsItem).default([]),\n  links: linksSchema.default({}),\n  meta: subscriptionsMetaSchema.default({})\n});\n\n/**\n * Tally and capacity metric response item.\n *\n * @type {*} Joi schema\n */\nconst tallyItem = Joi.object({\n  date: Joi.date().utc().allow(null),\n  has_data: Joi.boolean().optional().allow(null),\n  value: Joi.number().allow(null).default(0)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Tally response meta field.\n *\n * @type {*} Joi schema\n */\nconst tallyMetaSchema = metaResponseSchema\n  .keys({\n    has_cloudigrade_data: Joi.boolean().optional().allow(null),\n    has_cloudigrade_mismatch: Joi.boolean().optional().allow(null),\n    metric_id: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)),\n    total_monthly: tallyItem\n  })\n  .unknown(true);\n\n/**\n * Tally response.\n *\n * @type {*} Joi schema\n */\nconst tallyResponseSchema = Joi.object().keys({\n  data: Joi.array().items(tallyItem).default([]),\n  links: linksSchema.default({}),\n  meta: tallyMetaSchema.default({})\n});\n\nconst rhsmSchemas = {\n  capacity: response => schemaResponse({ response, schema: capacityResponseSchema, id: 'RHSM capacity' }),\n  errors: response => schemaResponse({ response, schema: errorResponseSchema, id: 'RHSM errors' }),\n  guests: response => schemaResponse({ response, schema: guestsResponseSchema, id: 'RHSM guests' }),\n  instances: response => schemaResponse({ response, schema: instancesResponseSchema, id: 'RHSM instances' }),\n  subscriptions: response =>\n    schemaResponse({ response, schema: subscriptionsResponseSchema, id: 'RHSM subscriptions' }),\n  tally: response => schemaResponse({ response, schema: tallyResponseSchema, id: 'RHSM tally' })\n};\n\nexport { rhsmSchemas as default, rhsmSchemas };\n","import moment from 'moment';\nimport {\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES as INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES as TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES as TALLY_CAPACITY_META_TYPES,\n  rhsmConstants\n} from './rhsmConstants';\nimport { dateHelpers } from '../../common';\n\n/**\n * Transform RHSM responses. Replaces selector usage.\n *\n * @memberof Rhsm\n * @module RhsmTransformers\n */\n\n/**\n * ToDO: remove the UOM fallback if/when the API supports returning some form of the UOM in the response\n * This is a temporary fix that passes the selected _uom from params in the event the API doesn't\n * include it.\n */\n/**\n * Parse RHSM instances response for caching.\n *\n * @param {object} response\n * @param {object} config\n * @param {object} config.params\n * @returns {object}\n */\nconst rhsmInstances = (response, { params } = {}) => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const metaMeasurements = meta[INSTANCES_META_TYPES.MEASUREMENTS];\n\n  updatedResponse.data = data.map(\n    ({\n      [INSTANCES_DATA_TYPES.MEASUREMENTS]: measurements,\n      [INSTANCES_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      ...dataResponse\n    }) => {\n      const updatedData = {\n        [INSTANCES_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n        numberOfGuests,\n        ...dataResponse\n      };\n\n      metaMeasurements?.forEach((measurement, index) => {\n        updatedData[measurement] = measurements[index];\n      });\n\n      return updatedData;\n    }\n  );\n\n  let normalizedUom = meta?.[INSTANCES_META_TYPES.UOM] ?? params?.[INSTANCES_META_TYPES.UOM];\n\n  if (normalizedUom?.toLowerCase() === RHSM_API_PATH_METRIC_TYPES.SOCKETS.toLowerCase()) {\n    normalizedUom = RHSM_API_PATH_METRIC_TYPES.SOCKETS;\n  } else if (normalizedUom?.toLowerCase() === RHSM_API_PATH_METRIC_TYPES.CORES.toLowerCase()) {\n    normalizedUom = RHSM_API_PATH_METRIC_TYPES.CORES;\n  }\n\n  updatedResponse.meta = {\n    count: meta[INSTANCES_META_TYPES.COUNT],\n    uom: normalizedUom,\n    productId: meta[INSTANCES_META_TYPES.PRODUCT]\n  };\n\n  return updatedResponse;\n};\n\n/**\n * Temporary guests response cache.\n *\n * @type {{}}\n */\nconst rhsmInstancesGuestsCache = {};\n\n/**\n * Parse RHSM guests instances response. Return an infinite list at the transformer level.\n *\n * @param {object} response\n * @param {object} config\n * @param {object} config.params\n * @param {object} config._id\n * @returns {object}\n */\nconst rhsmInstancesGuests = (response, { params, _id } = {}) => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n\n  updatedResponse.data = data;\n  updatedResponse.meta = meta;\n\n  if (_id) {\n    let cacheIndex =\n      Number.parseInt(params?.[RHSM_API_QUERY_SET_TYPES.OFFSET], 10) /\n      Number.parseInt(params?.[RHSM_API_QUERY_SET_TYPES.LIMIT], 10);\n\n    // Note: null is considered \"finite\"\n    cacheIndex = (!Number.isNaN(cacheIndex) && Number.isFinite(cacheIndex) && cacheIndex) || 0;\n\n    if (cacheIndex <= 0) {\n      rhsmInstancesGuestsCache[_id] = [];\n    }\n\n    rhsmInstancesGuestsCache[_id][cacheIndex] = data;\n\n    updatedResponse.data = rhsmInstancesGuestsCache[_id].flat();\n  }\n\n  return updatedResponse;\n};\n\n/**\n * Parse RHSM subscriptions response for caching.\n * The Subscriptions' response \"meta\" includes the uom field if it is included within the query parameters. We attempt to\n * normalize this for both casing, similar to the Instances meta response, BUT we also add a concatenated string uom for responses\n * without the uom query parameter in the form of \"Sockets\", \"Sockets-Cores\", or \"Cores\", dependent on the returned response\n * data.\n *\n * @param {object} response\n * @param {object} config\n * @param {object} config.params\n * @returns {object}\n */\nconst rhsmSubscriptions = (response, { params } = {}) => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n\n  updatedResponse.data = data;\n\n  let normalizedUom = params?.[RHSM_API_QUERY_SET_TYPES.UOM];\n\n  if (!normalizedUom) {\n    const tempUom = [];\n\n    const isSocketsUom =\n      data.find(({ [SUBSCRIPTIONS_DATA_TYPES.UOM]: uom }) =>\n        new RegExp(RHSM_API_PATH_METRIC_TYPES.SOCKETS, 'i').test(uom)\n      ) !== undefined;\n\n    if (isSocketsUom) {\n      tempUom.push(RHSM_API_PATH_METRIC_TYPES.SOCKETS);\n    }\n\n    const isCoresUom =\n      data.find(({ [SUBSCRIPTIONS_DATA_TYPES.UOM]: uom }) =>\n        new RegExp(RHSM_API_PATH_METRIC_TYPES.CORES, 'i').test(uom)\n      ) !== undefined;\n\n    if (isCoresUom) {\n      tempUom.push(RHSM_API_PATH_METRIC_TYPES.CORES);\n    }\n\n    normalizedUom = tempUom.join('-');\n  }\n  if (normalizedUom?.toLowerCase() === RHSM_API_PATH_METRIC_TYPES.SOCKETS.toLowerCase()) {\n    normalizedUom = RHSM_API_PATH_METRIC_TYPES.SOCKETS;\n  } else if (normalizedUom?.toLowerCase() === RHSM_API_PATH_METRIC_TYPES.CORES.toLowerCase()) {\n    normalizedUom = RHSM_API_PATH_METRIC_TYPES.CORES;\n  }\n\n  updatedResponse.meta = {\n    ...meta,\n    count: meta[SUBSCRIPTIONS_META_TYPES.COUNT],\n    uom: normalizedUom,\n    productId: meta[SUBSCRIPTIONS_META_TYPES.PRODUCT]\n  };\n\n  return updatedResponse;\n};\n\n/**\n * ToDo: Confirm category meta response for Capacity\n * We're temporarily applying category from submitted params. API docs indicate\n * category only comes through on metric capacity?\n */\n/**\n * Parse RHSM tally response for caching.\n *\n * @param {object} response\n * @param {object} config\n * @param {boolean} config._isCapacity\n * @param {object} config.params\n * @returns {object}\n */\nconst rhsmTallyCapacity = (response, { _isCapacity, params } = {}) => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const currentDate = moment.utc(dateHelpers.getCurrentDate());\n  const currentDateStr = moment.utc(dateHelpers.getCurrentDate()).format('MM-D-YYYY');\n  let futureDateCount = 0;\n\n  updatedResponse.data = data.map(\n    (\n      {\n        [TALLY_CAPACITY_DATA_TYPES.DATE]: date,\n        [TALLY_CAPACITY_DATA_TYPES.VALUE]: value,\n        [TALLY_CAPACITY_DATA_TYPES.HAS_DATA]: hasData,\n        [TALLY_CAPACITY_DATA_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity\n      },\n      index\n    ) => {\n      const updatedDate = moment.utc(date);\n      const isCurrentDate = updatedDate.format('MM-D-YYYY') === currentDateStr;\n      const isFutureDate = updatedDate.diff(currentDate) > 0;\n\n      if (isFutureDate && !isCurrentDate) {\n        futureDateCount += 1;\n      }\n\n      return {\n        x: index,\n        y:\n          (_isCapacity === true && isFutureDate) ||\n          (_isCapacity === true && hasInfiniteQuantity === true) ||\n          (!_isCapacity && hasData === false && isFutureDate) ||\n          (!_isCapacity && hasData === false && isCurrentDate)\n            ? null\n            : value,\n        date,\n        hasData,\n        hasInfiniteQuantity,\n        isCurrentDate,\n        isFutureDate\n      };\n    }\n  );\n\n  /**\n   * Add an extra date to the first entry of the range to help Victory charts display.\n   */\n  if (futureDateCount === updatedResponse.data.length - 1) {\n    updatedResponse.data = [\n      {\n        ...updatedResponse.data[0],\n        x: 0,\n        isCurrentDate: false\n      },\n      ...updatedResponse.data\n    ].map((props, index) => ({ ...props, x: index }));\n  }\n\n  updatedResponse.meta = {\n    category: params?.[RHSM_API_QUERY_SET_TYPES.CATEGORY],\n    count: meta[TALLY_CAPACITY_META_TYPES.COUNT],\n    cloudigradeHasMismatch: meta?.[TALLY_CAPACITY_META_TYPES.HAS_CLOUDIGRADE_MISMATCH],\n    metricId: meta[TALLY_CAPACITY_META_TYPES.METRIC_ID],\n    productId: meta[TALLY_CAPACITY_META_TYPES.PRODUCT],\n    totalMonthlyDate: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.DATE],\n    totalMonthlyHasData: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.HAS_DATA],\n    totalMonthlyValue: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.VALUE]\n  };\n\n  return updatedResponse;\n};\n\nconst rhsmTransformers = {\n  guests: rhsmInstancesGuests,\n  instances: rhsmInstances,\n  subscriptions: rhsmSubscriptions,\n  tallyCapacity: rhsmTallyCapacity\n};\n\nexport {\n  rhsmTransformers as default,\n  rhsmTransformers,\n  rhsmInstances,\n  rhsmInstancesGuests,\n  rhsmSubscriptions,\n  rhsmTallyCapacity\n};\n","import { RHSM_API_QUERY_SET_TYPES } from './rhsmConstants';\n\n/**\n * @memberof Rhsm\n * @module RhsmHelpers\n */\n\n/**\n * ToDo: remove filterArchitectureVariant when the API supports architecture, variant params\n */\n/**\n * Patch for returning a made up API architecture, variant param as a product ID\n *\n * @param {string} id\n * @param {object} params\n * @returns {string}\n */\nconst filterArchitectureVariant = (id, params = {}) => {\n  const updatedId = id;\n\n  if (params?.[RHSM_API_QUERY_SET_TYPES.VARIANT]?.length) {\n    return params?.[RHSM_API_QUERY_SET_TYPES.VARIANT];\n  }\n\n  return updatedId;\n};\n\nconst rhsmHelpers = {\n  filterArchitectureVariant\n};\n\nexport { rhsmHelpers as default, rhsmHelpers, filterArchitectureVariant };\n","import { serviceCall } from '../config';\nimport { rhsmSchemas } from './rhsmSchemas';\nimport { helpers } from '../../common';\nimport { rhsmTransformers } from './rhsmTransformers';\nimport { rhsmHelpers } from './rhsmHelpers';\n\n/**\n * RHSM API service calls.\n *\n * @memberof Rhsm\n * @module RhsmServices\n */\n\n/**\n * ToDo: remove rhsmHelpers.filterArchitectureVariant\n * We're using a temporary helper to emulate a param for architectures and/or variants.\n * When the api supports architecture and variant query params this needs to be refactored.\n */\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getApiVersion = (options = {}) => {\n  const { cache = false, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Sockets Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50.090125,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": false,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Sockets\",\n *         \"product\": \"RHEL for x86\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Cores Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50.090125,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": false,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Cores\",\n *         \"product\": \"RHEL for x86\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Transfer-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Transfer-gibibytes\",\n *         \"product\": \"RHEL for x86\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 1024,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Storage-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Storage-gibibyte\",\n *         \"product\": \"RHEL for x86\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2048,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Storage-gibibyte-months Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Storage-gibibyte-months\",\n *         \"product\": \"RHEL for x86\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2048,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Instance-hours Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 1000000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 1000000,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Instance-hours\",\n *         \"product\": \"RHEL for x86\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2000,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n */\n/* Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string|Array} id String ID, or an array of identifiers to update a dotenv url path\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getGraphTally = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.tally, rhsmSchemas.errors],\n    transform = [rhsmTransformers.tallyCapacity]\n  } = options;\n  const updatedId = (typeof id === 'string' && [id]) || (Array.isArray(id) && id) || [];\n\n  let url = `${process.env.REACT_APP_SERVICES_RHSM_TALLY}`;\n  updatedId.forEach((value, index) => {\n    let updatedValue = value;\n    if (index === 0) {\n      updatedValue = rhsmHelpers.filterArchitectureVariant(value, params);\n    }\n\n    url = url.replace(`{${index}}`, updatedValue);\n  });\n\n  return serviceCall({\n    url,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id/:metric_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 100,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 100,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"product\": \"RHEL for x86\",\n *         \"metric_id\": \"Sockets\",\n *         \"granularity\": \"daily\",\n *         \"service_level\": \"\",\n *         \"usage\": \"\",\n *         \"category\": \"\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string|Array} id String ID, or an array of identifiers to update a dotenv url path\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.capacity, rhsmSchemas.errors],\n    transform = [rhsmTransformers.tallyCapacity]\n  } = options;\n  const updatedId = (typeof id === 'string' && [id]) || (Array.isArray(id) && id) || [];\n\n  let url = `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}`;\n  updatedId.forEach((value, index) => {\n    let updatedValue = value;\n    if (index === 0) {\n      updatedValue = rhsmHelpers.filterArchitectureVariant(value, params);\n    }\n\n    url = url.replace(`{${index}}`, updatedValue);\n  });\n\n  return serviceCall({\n    url,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform,\n    _isCapacity: true\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/instances/:instance_id/guests Get RHSM instances/systems table/inventory guests data\n * @apiDescription Retrieve instances/systems table/inventory guests data.\n *\n * Reference [RHSM for instances guests](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"display_name\": \"guest01.example.com\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"display_name\": \"guest02.example.com\",\n *           \"subscription_manager_id\": \"b101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest03.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"display_name\": \"guest04.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest05.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest06.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest07.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest08.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest09.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest10.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/instances/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/instances/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/instances/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 70\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API instances table/inventory guests data.\n *\n * @param {string} id Instance ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getInstancesInventoryGuests = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = false,\n    cancelId,\n    schema = [rhsmSchemas.guests, rhsmSchemas.errors],\n    transform = [rhsmTransformers.guests]\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_INVENTORY_INSTANCES_GUESTS.replace('{0}', updatedId),\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform,\n    _id: updatedId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 750\n * @api {get} /api/rhsm-subscriptions/v1/instances/products/:product_id Get RHSM instances table/inventory data\n * @apiDescription Retrieve instances table/inventory data.\n *\n * Reference [RHSM for instances table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"category\": \"physical\",\n *           \"billing_account_id\": \"xxxxx-xxxx-CCCCC-xxxx-xxxx10\",\n *           \"instance_id\": \"CCCCC-b344-4778-831c-CCCCCCC\",\n *           \"subscription_manager_id\": \"CCCCC-5b00-42fa-CCCCC-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              200,\n *              10,\n *              500.0000345678,\n *              200\n *           ],\n *           \"last_seen\": \"2022-12-03T00:00:00Z\"\n *         },\n *         {\n *           \"category\": \"virtual\",\n *           \"billing_account_id\": \"xxxxx-xxxx-FFFFF-xxxx-xxxx40\",\n *           \"instance_id\": \"FFFFF-b344-4778-831c-FFFFF\",\n *           \"subscription_manager_id\": \"FFFFF-5b00-42fa-FFFFF-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              200,\n *              10,\n *              500.0000345678,\n *              200\n *           ],\n *           \"last_seen\": \"2022-10-03T00:00:00Z\"\n *         },\n *         {\n *           \"number_of_guests\": 70,\n *           \"category\": \"cloud\",\n *           \"billing_provider\": \"red hat\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx01\",\n *           \"instance_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"display_name\": \"rhv.example.com\",\n *           \"measurements\": [\n *              42,\n *              10,\n *              0.000003563,\n *              1\n *           ],\n *           \"last_seen\": \"2022-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"category\": \"cloud\",\n *           \"billing_provider\": \"azure\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx02\",\n *           \"instance_id\": \"XXXXXX-b344-4778-831c-XXXXXXXX\",\n *           \"subscription_manager_id\": \"XXXXXX-5b00-42fa-XXXX-75801d45cc6d\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"measurements\": [\n *              20,\n *              100,\n *              null,\n *              1000\n *           ],\n *           \"last_seen\": \"2022-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"category\": \"physical\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx03\",\n *           \"instance_id\": \"BBBBB-b344-4778-831c-BBBBBBB\",\n *           \"subscription_manager_id\": \"BBBBB-5b00-42fa-BBBBB-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              4000,\n *              50,\n *              10000.0000345678,\n *              3000\n *           ],\n *           \"last_seen\": \"2022-04-03T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 5,\n *         \"measurements\": [\n *           \"Instance-hours\",\n *           \"Sockets\",\n *           \"Storage-gibibyte-months\",\n *           \"Transfer-gibibytes\"\n *         ],\n *         \"product\": \"RHEL for x86\",\n *         \"service_level\": \"Premium\",\n *         \"usage\": \"Production\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API instances data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getInstancesInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.instances, rhsmSchemas.errors],\n    transform = [rhsmTransformers.instances]\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_INSTANCES}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 0\n * @api {get} /api/rhsm-subscriptions/v1/subscriptions/products/:product_id Get RHSM subscriptions table/inventory data\n * @apiDescription Retrieve subscriptions table/inventory data.\n *\n * Reference [RHSM for subscriptions table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"sku\": \"RH00011\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium (Physical and 4 Virtual Nodes)(L3 Only)\",\n *           \"billing_provider\": \"red hat\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" },\n *              { \"id\": \"ipsum\", \"number\": \"1234567890\" },\n *              { \"id\": \"lorem\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 1,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\",\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"sku\": \"RH00010\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server\",\n *           \"billing_provider\": \"azure\",\n *           \"service_level\": \"Self-Support\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [],\n *           \"next_event_date\": \"2020-04-02T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 15,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\",\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"sku\": \"RH00009\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium\",\n *           \"billing_provider\": \"Unknown\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription End\",\n *           \"quantity\": 3000,\n *           \"physical_capacity\": 2,\n *           \"virtual_capacity\": 2,\n *           \"total_capacity\": 4,\n *           \"uom\": \"Cores\",\n *           \"has_infinite_quantity\": false\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3,\n *         \"subscription_type\": \"On-demand\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API subscriptions data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getSubscriptionsInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.subscriptions, rhsmSchemas.errors],\n    transform = [rhsmTransformers.subscriptions]\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_SUBSCRIPTIONS}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\nconst rhsmServices = {\n  getApiVersion,\n  getGraphCapacity,\n  getGraphTally,\n  getInstancesInventory,\n  getInstancesInventoryGuests,\n  getSubscriptionsInventory\n};\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport {\n  rhsmServices as default,\n  rhsmServices,\n  getApiVersion,\n  getGraphCapacity,\n  getGraphTally,\n  getInstancesInventory,\n  getInstancesInventoryGuests,\n  getSubscriptionsInventory\n};\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsm/rhsmServices';\nimport { generateChartIds } from '../../components/graphCard/graphCardHelpers';\n\n/**\n * RHSM service wrappers for dispatch, state update.\n *\n * @memberof Actions\n * @module RhsmActions\n */\n\n/**\n * Get a RHSM response from multiple Tally, or Capacity, IDs and metrics.\n *\n * @param {object|Array} idMetric An object, or an Array of objects, in the form of { id: PRODUCT_ID, metric: METRIC_ID, isCapacity: boolean }\n * @param {object} query\n * @param {object} options\n * @param {string} options.cancelId\n * @returns {Function}\n */\nconst getGraphMetrics =\n  (idMetric = {}, query = {}, options = {}) =>\n  dispatch => {\n    const { cancelId = 'graphTally' } = options;\n    const multiMetric = (Array.isArray(idMetric) && idMetric) || [idMetric];\n    const multiDispatch = [];\n\n    multiMetric.forEach(({ id, metric, isCapacity, query: metricQuery }) => {\n      const methodService = isCapacity ? rhsmServices.getGraphCapacity : rhsmServices.getGraphTally;\n      const methodType = isCapacity ? rhsmTypes.GET_GRAPH_CAPACITY_RHSM : rhsmTypes.GET_GRAPH_TALLY_RHSM;\n      const methodCancelId = isCapacity ? 'graphCapacity' : cancelId;\n      const generatedId = generateChartIds({ isCapacity, metric, productId: id, query: metricQuery });\n\n      multiDispatch.push({\n        type: methodType,\n        payload: methodService(\n          [id, metric],\n          { ...query, ...metricQuery },\n          {\n            cancelId: `${methodCancelId}_${generatedId}`\n          }\n        ),\n        meta: {\n          id: generatedId,\n          query: { ...query, ...metricQuery },\n          notifications: {}\n        }\n      });\n    });\n\n    return Promise.all(dispatch(multiDispatch));\n  };\n\n/**\n * Get an instances response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getInstancesInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM,\n      payload: rhsmServices.getInstancesInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get an instance guest response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getInstancesInventoryGuests =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_INSTANCES_INVENTORY_GUESTS_RHSM,\n      payload: rhsmServices.getInstancesInventoryGuests(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a subscriptions response from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getSubscriptionsInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM,\n      payload: rhsmServices.getSubscriptionsInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\nconst rhsmActions = {\n  getGraphMetrics,\n  getInstancesInventory,\n  getInstancesInventoryGuests,\n  getSubscriptionsInventory\n};\n\nexport {\n  rhsmActions as default,\n  rhsmActions,\n  getGraphMetrics,\n  getInstancesInventory,\n  getInstancesInventoryGuests,\n  getSubscriptionsInventory\n};\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'iso-639-1';\nimport { serviceCall } from '../config';\nimport { helpers } from '../../common';\n\n/**\n * User, and RHSM, calls for locale and Opt-In.\n *\n * @memberof User\n * @module UserServices\n */\n\n/**\n * ToDo: Review moving the getLocale function under platformServices.\n * Also review using window.navigator.language as the primary pull for language.\n */\n/**\n * Return a browser locale, or fallback towards the platform locale cookie\n *\n * @returns {Promise<*>}\n */\nconst getLocale = () => {\n  const defaultLang = {\n    value: helpers.UI_LOCALE_DEFAULT,\n    key: helpers.UI_LOCALE_DEFAULT_DESC\n  };\n  const parseLang = value => {\n    const key = (value && LocaleCode.getName(value.split('-')[0])) || null;\n    return (key && { value, key }) || undefined;\n  };\n\n  return serviceCall({\n    url: async () => {\n      const cookieLang = await (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace(\n        '_',\n        '-'\n      );\n\n      return parseLang(cookieLang) || defaultLang;\n    }\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = (options = {}) => {\n  const { cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport { userServices as default, userServices, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/user/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * User, and RHSM, service wrappers for dispatch, state update.\n *\n * @memberof Actions\n * @module UserActions\n */\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_LOCALE,\n    payload: userServices.getLocale()\n  });\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn =\n  (query = {}) =>\n  dispatch =>\n    dispatch({\n      type: userTypes.UPDATE_USER_OPTIN,\n      payload: userServices.updateAccountOptIn(query),\n      meta: {\n        query,\n        notifications: {\n          rejected: {\n            variant: 'danger',\n            title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsErrorDescription'),\n            dismissable: true\n          },\n          fulfilled: {\n            variant: 'success',\n            title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsSuccessDescription'),\n            dismissable: true,\n            autoDismiss: false\n          }\n        }\n      }\n    });\n\nconst userActions = { getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport { userActions as default, userActions, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Graph/Chart related API and user state reducer.\n *\n * @memberof Reducers\n * @module GraphReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: {}, legend: {}, tally: {}, capacity: {}}}\n */\nconst initialState = {\n  capacity: {},\n  legend: {},\n  reportCapacity: {},\n  tally: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          [action.id]: action.value\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'capacity', type: rhsmTypes.GET_GRAPH_CAPACITY_RHSM },\n          { ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM },\n          { ref: 'tally', type: rhsmTypes.GET_GRAPH_TALLY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { rhsmTypes } from '../types/rhsmTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { inventoryTypes } from '../types';\n\n/**\n * Inventory, and tabs, related API and user state reducer.\n *\n * @memberof Reducers\n * @module InventoryReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{subscriptionsInventory: {}, instancesGuests: {}, instancesInventory: {}, tabs: {}}}\n */\nconst initialState = {\n  instancesInventory: {},\n  instancesGuests: {},\n  subscriptionsInventory: {},\n  tabs: {}\n};\n\n/**\n * Apply generated inventory observer/reducer for system and subscriptions inventory to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst inventoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case inventoryTypes.SET_INVENTORY_TAB:\n      return reduxHelpers.setStateProp(\n        'tabs',\n        {\n          ...action.tabs\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case inventoryTypes.CLEAR_INVENTORY_GUESTS:\n      return reduxHelpers.setStateProp(\n        'instancesGuests',\n        {\n          [action.id]: {}\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'instancesInventory', type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM },\n          { ref: 'instancesGuests', type: rhsmTypes.GET_INSTANCES_INVENTORY_GUESTS_RHSM },\n          { ref: 'subscriptionsInventory', type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ninventoryReducer.initialState = initialState;\n\nexport { inventoryReducer as default, initialState, inventoryReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Banner messages related API state reducer.\n *\n * @memberof Reducers\n * @module MessagesReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{report: {}}}\n */\nconst initialState = {\n  bannerMessages: {}\n};\n\n/**\n * Generated daily observer/reducer for messages to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst messagesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.message.SET_BANNER_MESSAGES:\n      return reduxHelpers.setStateProp(\n        'bannerMessages',\n        {\n          [action.viewId]: action.bannerMessages\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nmessagesReducer.initialState = initialState;\n\nexport { messagesReducer as default, initialState, messagesReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Toolbar related user state reducer.\n *\n * @memberof Reducers\n * @module ToolbarReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{filters: {}}}\n */\nconst initialState = {\n  filters: {}\n};\n\n/**\n * Apply user observer/reducer logic for toolbar to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst toolbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.toolbar.SET_ACTIVE_FILTERS:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            activeFilters: action.activeFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.toolbar.SET_FILTER_TYPE:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            currentFilter: action.currentFilter\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\ntoolbarReducer.initialState = initialState;\n\nexport { toolbarReducer as default, initialState, toolbarReducer };\n","import _get from 'lodash/get';\nimport { appTypes, platformTypes, userTypes } from '../types';\nimport { rhsmConstants } from '../../services/rhsm/rhsmConstants';\nimport { reduxHelpers } from '../common';\n\n/**\n * User related API, platform and user state reducer.\n *\n * @memberof Reducers\n * @module UserReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{auth: {}, optin: {}, locale: null, errors: {}}}\n */\nconst initialState = {\n  auth: {},\n  errors: {},\n  locale: {},\n  optin: {}\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(reduxHelpers.getDataFromResults(action), [rhsmConstants.RHSM_API_RESPONSE_ERRORS], []);\n\n        return reduxHelpers.setStateProp(\n          'errors',\n          {\n            error: true,\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            data: errorCodes.map(value => value[rhsmConstants.RHSM_API_RESPONSE_ERRORS_TYPES.CODE]),\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'locale', type: userTypes.USER_LOCALE },\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN },\n          { ref: 'auth', type: platformTypes.PLATFORM_USER_AUTH }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { productConfig } from '../../config';\nimport { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_SET_TYPES as RHSM_API_QUERY_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * View query related user state reducer.\n *\n * @memberof Reducers\n * @module ViewReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{product: {}, graphTallyQuery: {}, inventoryHostsQuery: {}, inventorySubscriptionsQuery: {},\n *     query: {}, productConfig: {}, inventoryGuestsQuery: {}}}\n */\nconst initialState = {\n  query: {},\n  graphTallyQuery: {},\n  inventoryGuestsQuery: {},\n  inventoryHostsQuery: {},\n  inventorySubscriptionsQuery: {},\n  product: {},\n  productConfig: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.app.SET_PRODUCT_VARIANT_QUERY_RESET_ALL:\n      const updateVariantResetQueries = (query = {}, id) => {\n        const queryIds =\n          productConfig.sortedConfigs().byGroupIdConfigs[id]?.map(({ viewId }) => viewId) || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          delete updatedQuery[queryId];\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          query: updateVariantResetQueries(state.query, action.productGroup),\n          graphTallyQuery: updateVariantResetQueries(state.graphTallyQuery, action.productGroup),\n          inventoryGuestsQuery: updateVariantResetQueries(state.inventoryGuestsQuery, action.productGroup),\n          inventoryHostsQuery: updateVariantResetQueries(state.inventoryHostsQuery, action.productGroup),\n          inventorySubscriptionsQuery: updateVariantResetQueries(state.inventorySubscriptionsQuery, action.productGroup)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST:\n      const updateResetQueries = (query = {}, id) => {\n        const queryIds = productConfig.sortedConfigs().byViewIds[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n\n          delete productQuery[RHSM_API_QUERY_TYPES.DIRECTION];\n          delete productQuery[RHSM_API_QUERY_TYPES.SORT];\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateResetQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateResetQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST:\n      const updateClearQueries = (query = {}, id) => {\n        const queryIds = productConfig.sortedConfigs().byViewIds[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateClearQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateClearQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST:\n      const updateClearGuestQuery = (query = {}, id) => {\n        const queryIds = productConfig.sortedConfigs().byViewIds[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryGuestsQuery: updateClearGuestQuery(state.inventoryGuestsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            ...action.clearFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [action.filter]: action.value\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY]:\n      return reduxHelpers.setStateProp(\n        'graphTallyQuery',\n        {\n          [action.viewId]: {\n            ...state.graphTallyQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.GRANULARITY]: action[RHSM_API_QUERY_TYPES.GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.START_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.START_DATE]: action[RHSM_API_QUERY_TYPES.START_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.END_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.END_DATE]: action[RHSM_API_QUERY_TYPES.END_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.BILLING_PROVIDER]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.BILLING_PROVIDER]: action[RHSM_API_QUERY_TYPES.BILLING_PROVIDER]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SLA]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.SLA]: action[RHSM_API_QUERY_TYPES.SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.UOM]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.UOM]: action[RHSM_API_QUERY_TYPES.UOM]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.USAGE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.USAGE]: action[RHSM_API_QUERY_TYPES.USAGE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryGuestsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryGuestsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryGuestsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryGuestsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: action[RHSM_API_QUERY_TYPES.DISPLAY_NAME]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.app.SET_PRODUCT:\n      return reduxHelpers.setStateProp(\n        'product',\n        {\n          config: action.config\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.app.SET_PRODUCT_VARIANT:\n      return reduxHelpers.setStateProp(\n        'product',\n        {\n          variant: {\n            ...state?.product?.variant,\n            [action.productGroup]: action.variant\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport inventoryReducer from './inventoryReducer';\nimport messagesReducer from './messagesReducer';\nimport toolbarReducer from './toolbarReducer';\nimport userReducer from './userReducer';\nimport viewReducer from './viewReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  inventory: inventoryReducer,\n  messages: messagesReducer,\n  toolbar: toolbarReducer,\n  user: userReducer,\n  view: viewReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport {\n  reduxReducers as default,\n  reduxReducers,\n  graphReducer,\n  inventoryReducer,\n  messagesReducer,\n  toolbarReducer,\n  userReducer,\n  viewReducer\n};\n","import { platformConstants as platformApiTypes } from '../../services/platform/platformConstants';\n\n/**\n * @memberof Middleware\n * @module ActionRecordMiddleware\n */\n\n/**\n * Modify actions' payload for privacy.\n *\n * @param {object} action\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeActionHeaders = ({ payload, ...action }) => {\n  if (payload) {\n    let updatedPayload = { ...payload, headers: {} };\n\n    if (Array.isArray(payload)) {\n      updatedPayload = payload.map(({ headers, ...obj }) => ({ ...obj, headers: {} }));\n    }\n\n    return { payload: updatedPayload, ...action };\n  }\n\n  return { ...action };\n};\n\n/**\n * Modify actions' payload data for privacy.\n *\n * @param {object} action\n * @param {string} action.type\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeData = ({ type, payload, ...action }) => {\n  const removeUserIdentity = obj => {\n    if (obj?.data?.user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]) {\n      return {\n        ...obj,\n        data: {\n          ...obj.data,\n          user: {\n            ...obj.data.user,\n            [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]: {\n              ...obj.data.user[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY],\n              [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]: {}\n            }\n          }\n        }\n      };\n    }\n\n    return undefined;\n  };\n\n  const updatedPayload = removeUserIdentity(payload) || payload;\n  const updatedAction = removeUserIdentity(action) || action;\n\n  if (updatedPayload) {\n    return { type, payload: updatedPayload, ...updatedAction };\n  }\n\n  return { type, ...updatedAction };\n};\n\n/**\n * Return existing sessionStorage log.\n *\n * @param {string} id\n * @param {number} limit\n * @returns {Array}\n */\nconst getActions = (id, limit) => {\n  const { sessionStorage } = window;\n  const item = sessionStorage.getItem(id);\n  let parsedItems = (item && (JSON.parse(item) || {})?.actions) || [];\n\n  if (parsedItems?.length && limit > 0) {\n    parsedItems = parsedItems.slice(limit * -1);\n  }\n\n  return parsedItems;\n};\n\n/**\n * Store actions against an id in sessionStorage.\n *\n * @param {object} action\n * @param {object} config\n * @param {number} config.id\n * @param {number} config.limit\n */\nconst recordAction = (action, { id, limit, ...config }) => {\n  const { navigator, sessionStorage } = window;\n  const items = getActions(id, limit) || [];\n  const priorItem = items[items.length - 1];\n  const updatedAction = sanitizeData(sanitizeActionHeaders(action));\n  const actionObj = {\n    diff: 0,\n    timestamp: Date.now(),\n    action: updatedAction\n  };\n\n  if (priorItem && priorItem.timestamp) {\n    actionObj.diff = actionObj.timestamp - priorItem.timestamp;\n  }\n\n  items.push(actionObj);\n  sessionStorage.setItem(\n    id,\n    JSON.stringify({\n      browser: navigator.userAgent,\n      timestamp: new Date().toLocaleString(),\n      ...config,\n      actions: items\n    })\n  );\n};\n\n/**\n * Expose settings and record middleware.\n *\n * @param {object} config\n * @returns {Function}\n */\nconst actionRecordMiddleware =\n  (config = {}) =>\n  () =>\n  next =>\n  action => {\n    recordAction(action, {\n      id: 'actionRecordMiddleware/v1',\n      limit: 100,\n      ...config\n    });\n\n    return next(action);\n  };\n\nexport { actionRecordMiddleware as default, actionRecordMiddleware };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { multiActionMiddleware } from './multiActionMiddleware';\nimport { statusMiddleware } from './statusMiddleware';\nimport { actionRecordMiddleware } from './actionRecordMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  multiActionMiddleware,\n  promiseMiddleware,\n  actionRecordMiddleware({\n    id: process.env.REACT_APP_UI_LOGGER_ID,\n    app: { version: process.env.REACT_APP_UI_VERSION }\n  }),\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * @memberof Middleware\n * @module StatusMiddleware\n */\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @param {string} config.statusSuffix\n * @param {string} config.rangeSuffix\n * @param {string} config.rangeFiller\n * @param {string} config.statusDelimiter\n * @param {boolean} config.statusRange\n * @param {boolean} config.dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","/**\n * @memberof Middleware\n * @module MultiActionMiddleware\n */\n\n/**\n * Allow passing an array of actions for batch dispatch.\n *\n * @param {object} store\n * @returns {Function}\n */\nconst multiActionMiddleware = store => next => action =>\n  (Array.isArray(action) && action.map(a => store.dispatch(a))) || next(action);\n\nexport { multiActionMiddleware as default, multiActionMiddleware };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Redux store setup.\n *\n * @memberof Redux State\n * @module Store\n */\n\n/**\n * Create a Redux store.\n *\n * @type {{graph: object, notifications: Array, toolbar: object, inventory: object, user: object, view: object,\n *     messages: object}}\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","/**\n * @memberof Types\n * @module AppTypes\n */\n\nconst STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\nconst SET_PRODUCT = 'SET_PRODUCT';\nconst SET_PRODUCT_VARIANT = 'SET_PRODUCT_VARIANT';\nconst SET_PRODUCT_VARIANT_QUERY_RESET_ALL = 'SET_PRODUCT_VARIANT_QUERY_RESET_ALL';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, SET_PRODUCT_VARIANT: string, SET_PRODUCT_VARIANT_QUERY_RESET_ALL: string,\n *     SET_PRODUCT: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX,\n  SET_PRODUCT,\n  SET_PRODUCT_VARIANT,\n  SET_PRODUCT_VARIANT_QUERY_RESET_ALL\n};\n\nexport {\n  appTypes as default,\n  appTypes,\n  STATUS_4XX,\n  STATUS_5XX,\n  SET_PRODUCT,\n  SET_PRODUCT_VARIANT,\n  SET_PRODUCT_VARIANT_QUERY_RESET_ALL\n};\n","/**\n * @memberof Types\n * @module GraphTypes\n */\n\nconst SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","/**\n * @memberof Types\n * @module InventoryTypes\n */\n\nconst CLEAR_INVENTORY_GUESTS = 'CLEAR_INVENTORY_GUESTS';\nconst SET_INVENTORY_TAB = 'SET_INVENTORY_TAB';\n\n/**\n * Inventory action, reducer types.\n *\n * @type {{CLEAR_INVENTORY_GUESTS: string, SET_INVENTORY_TAB: string}}\n */\nconst inventoryTypes = {\n  CLEAR_INVENTORY_GUESTS,\n  SET_INVENTORY_TAB\n};\n\nexport { inventoryTypes as default, inventoryTypes, CLEAR_INVENTORY_GUESTS, SET_INVENTORY_TAB };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\n/**\n * @memberof Types\n * @module PlatformTypes\n */\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_GLOBAL_FILTER_HIDE = 'PLATFORM_GLOBAL_FILTER_HIDE';\nconst PLATFORM_USER_AUTH = 'PLATFORM_USER_AUTH';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_USER_AUTH: string, PLATFORM_GLOBAL_FILTER_HIDE: string, PLATFORM_CLEAR_NOTIFICATIONS: string,\n *     PLATFORM_ADD_NOTIFICATION: string, PLATFORM_REMOVE_NOTIFICATION: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_USER_AUTH\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_USER_AUTH\n};\n","import { RHSM_API_QUERY_SET_TYPES as RHSM_API_QUERY_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * @memberof Types\n * @module QueryTypes\n */\n\nconst SET_QUERY = 'SET_QUERY';\nconst SET_QUERY_CLEAR = 'SET_QUERY_CLEAR';\nconst SET_QUERY_CLEAR_INVENTORY_LIST = 'SET_QUERY_CLEAR_INVENTORY_LIST';\nconst SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST = 'SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST';\nconst SET_QUERY_RESET_INVENTORY_LIST = 'SET_QUERY_RESET_INVENTORY_LIST';\n\n/**\n * Query types associated with across ALL queries.\n */\nconst SET_QUERY_RHSM_TYPES = {\n  [RHSM_API_QUERY_TYPES.BILLING_PROVIDER]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.BILLING_PROVIDER}`,\n  [RHSM_API_QUERY_TYPES.END_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.END_DATE}`,\n  [RHSM_API_QUERY_TYPES.GRANULARITY]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.GRANULARITY}`,\n  [RHSM_API_QUERY_TYPES.SLA]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.SLA}`,\n  [RHSM_API_QUERY_TYPES.START_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.START_DATE}`,\n  [RHSM_API_QUERY_TYPES.UOM]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.UOM}`,\n  [RHSM_API_QUERY_TYPES.USAGE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.USAGE}`\n};\n\n/**\n * Inventory query types associated with only GUESTS' queries.\n */\nconst SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_GUESTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_GUESTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Inventory query types associated with only INSTANCES' queries.\n */\nconst SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DISPLAY_NAME}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Inventory query types associated with only SUBSCRIPTIONS' queries.\n */\nconst SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Query/filter reducer types.\n *\n * @type {{SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES: object, SET_QUERY_RHSM_TYPES: object,\n *     SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES: object, SET_QUERY_CLEAR: string, SET_QUERY_CLEAR_INVENTORY_LIST: string,\n *     SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES: object, SET_QUERY: string, SET_QUERY_RESET_INVENTORY_LIST: string,\n *     SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST: string}}\n */\nconst queryTypes = {\n  SET_QUERY,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n\nexport {\n  queryTypes as default,\n  queryTypes,\n  SET_QUERY,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n","/**\n * @memberof Types\n * @module ToolbarTypes\n */\n\nconst SET_ACTIVE_FILTERS = 'SET_ACTIVE_FILTERS';\nconst SET_FILTER_TYPE = 'SET_FILTER_TYPE';\n\n/**\n * Filter, toolbar reducer types.\n *\n * @type {{SET_FILTER_TYPE: string, SET_ACTIVE_FILTERS: string}}\n */\nconst toolbarTypes = {\n  SET_ACTIVE_FILTERS,\n  SET_FILTER_TYPE\n};\n\nexport { toolbarTypes as default, toolbarTypes, SET_ACTIVE_FILTERS, SET_FILTER_TYPE };\n","/**\n * @memberof Types\n * @module UserTypes\n */\n\nconst DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_LOCALE: string, GET_USER_OPTIN: string,\n *     UPDATE_USER_OPTIN: string, DELETE_USER_OPTIN: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { inventoryTypes } from './inventoryTypes';\nimport { messageTypes } from './messageTypes';\nimport { platformTypes } from './platformTypes';\nimport { queryTypes } from './queryTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  inventory: inventoryTypes,\n  message: messageTypes,\n  platform: platformTypes,\n  query: queryTypes,\n  rhsm: rhsmTypes,\n  toolbar: toolbarTypes,\n  user: userTypes\n};\n\nexport {\n  reduxTypes as default,\n  reduxTypes,\n  appTypes,\n  graphTypes,\n  inventoryTypes,\n  messageTypes,\n  platformTypes,\n  queryTypes,\n  rhsmTypes,\n  toolbarTypes,\n  userTypes\n};\n","/**\n * @memberof Types\n * @module MessageTypes\n */\n\nconst SET_BANNER_MESSAGES = 'SET_BANNER_MESSAGES';\n\n/**\n * User action, reducer types.\n *\n * @type {{SET_BANNER_MESSAGES: string}}\n */\nconst messageTypes = { SET_BANNER_MESSAGES };\n\nexport { messageTypes as default, messageTypes, SET_BANNER_MESSAGES };\n","/**\n * @memberof Types\n * @module RhsmTypes\n */\n\nconst GET_GRAPH_CAPACITY_RHSM = 'GET_GRAPH_CAPACITY_RHSM';\nconst GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst GET_GRAPH_TALLY_RHSM = 'GET_GRAPH_TALLY_RHSM';\nconst GET_INSTANCES_INVENTORY_RHSM = 'GET_INSTANCES_INVENTORY_RHSM';\nconst GET_INSTANCES_INVENTORY_GUESTS_RHSM = 'GET_INSTANCES_INVENTORY_GUESTS_RHSM';\nconst GET_SUBSCRIPTIONS_INVENTORY_RHSM = 'GET_SUBSCRIPTIONS_INVENTORY_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, GET_GRAPH_CAPACITY_RHSM: string, GET_INSTANCES_INVENTORY_GUESTS_RHSM: string,\n *     GET_SUBSCRIPTIONS_INVENTORY_RHSM: string, GET_INSTANCES_INVENTORY_RHSM: string, GET_GRAPH_TALLY_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_INSTANCES_INVENTORY_GUESTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_INSTANCES_INVENTORY_GUESTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n","/**\n * @memberof Platform\n * @module PlatformConstants\n */\n\n/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string, RESOURCE_DEFS: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\n// ToDo: clean up this app name piece, these facets come through the helpers and src/config/rbac.json\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES = {\n  SUBSCRIPTIONS: process.env.REACT_APP_UI_NAME\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES = {\n  ALL: '*'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES = {\n  ALL: '*',\n  READ: 'read',\n  WRITE: 'write'\n};\n\nconst platformConstants = {\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n\nexport {\n  platformConstants as default,\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n","/**\n * @memberof Rhsm\n * @module RhsmConstants\n */\n\n/**\n * RHSM path IDs for product RHEL variants.\n *\n * @type {{RHEL_ARM: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string, RHEL_X86: string}}\n */\nconst RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES = {\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86'\n};\n\n/**\n * RHSM path IDs for product Satellite variants.\n *\n * @type {{SATELLITE_SERVER: string, SATELLITE_CAPSULE: string}}\n */\nconst RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES = {\n  SATELLITE_CAPSULE: 'Satellite Capsule',\n  SATELLITE_SERVER: 'Satellite Server'\n};\n\n/**\n * RHSM path IDs for products.\n *\n * Internally the UI makes a distinction between \"variants\" and \"grouped variants\". Variants are considered\n * product ids that utilize the exact same graph and inventory display, and typically are assigned to the\n * [product configuration property \"productVariants\"]{@link ../config/}, i.e. RHEL and Satellite. Grouped\n * variants are product ids that have been force grouped together, and are considered separate because they use\n * dissimilar graph and inventory displays. Force grouped product ids are grouped with the\n * [product configuration property \"productGroup\"]{@link ../config/}, i.e. OpenShift et all.\n *\n * @type {{RHEL_ARM: string, OPENSHIFT_METRICS: string, RHEL_WORKSTATION: string, RHODS: string, ROSA: string, RHEL_X86: string,\n *     RHEL_COMPUTE_NODE: string, OPENSHIFT: string, SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string,\n *     SATELLITE_CAPSULE: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string, RHACS: string}}\n */\nconst RHSM_API_PATH_PRODUCT_TYPES = {\n  ...RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES,\n  ...RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHACS: 'rhacs',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHODS: 'rhods',\n  ROSA: 'rosa',\n  OPENSHIFT: 'OpenShift Container Platform',\n  OPENSHIFT_METRICS: 'OpenShift-metrics',\n  OPENSHIFT_DEDICATED_METRICS: 'OpenShift-dedicated-metrics'\n};\n\n/**\n * RHSM path IDs for metrics.\n *\n * @type {{CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     TRANSFER_GIBIBYTES: string, CORE_SECONDS: string, STORAGE_GIBIBYTE_MONTHS: string}}\n */\nconst RHSM_API_PATH_METRIC_TYPES = {\n  CORES: 'Cores',\n  SOCKETS: 'Sockets',\n  CORE_SECONDS: 'Core-seconds',\n  INSTANCE_HOURS: 'Instance-hours',\n  STORAGE_GIBIBYTES: 'Storage-gibibytes',\n  STORAGE_GIBIBYTE_MONTHS: 'Storage-gibibyte-months',\n  TRANSFER_GIBIBYTES: 'Transfer-gibibytes'\n};\n\n/**\n * RHSM response data type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_DATA = 'data';\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * RHSM response general meta types.\n *\n * @type {{PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count',\n  PRODUCT: 'product'\n};\n\n/**\n * RHSM response errors type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERRORS = 'errors';\n\n/**\n * RHSM response errors types.\n *\n * @type {{CODE: string}}\n */\nconst RHSM_API_RESPONSE_ERRORS_TYPES = {\n  CODE: 'code'\n};\n\n/**\n * RHSM response error codes.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERRORS_CODE_TYPES = {\n  GENERIC: 'SUBSCRIPTIONS1003',\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM combined response Instance and Instance Guests DATA types.\n * \"INSTANCE_ID\" and \"SUBSCRIPTION_MANAGER_ID\" are associated with instance guests.\n *\n * @type {{MEASUREMENTS: string, BILLING_ACCOUNT_ID: string, CATEGORY: string, SUBSCRIPTION_MANAGER_ID: string,\n *     INVENTORY_ID: string, NUMBER_OF_GUESTS: string, BILLING_PROVIDER: string, DISPLAY_NAME: string, CLOUD_PROVIDER: string,\n *     INSTANCE_ID: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_DATA_TYPES = {\n  BILLING_PROVIDER: 'billing_provider',\n  BILLING_ACCOUNT_ID: 'billing_account_id',\n  CLOUD_PROVIDER: 'cloud_provider',\n  CATEGORY: 'category',\n  DISPLAY_NAME: 'display_name',\n  INSTANCE_ID: 'instance_id',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENTS: 'measurements',\n  NUMBER_OF_GUESTS: 'number_of_guests',\n  SUBSCRIPTION_MANAGER_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response Instances META types.\n *\n * @type {{MEASUREMENTS: string, UOM: string, PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  MEASUREMENTS: 'measurements',\n  UOM: 'uom'\n};\n\n/**\n * RHSM response Subscriptions DATA types.\n *\n * @type {{BILLING_ACCOUNT_ID: string, QUANTITY: string, SUBSCRIPTION_MANAGER_ID: string, INVENTORY_ID: string,\n *     NUMBER_OF_GUESTS: string, HAS_INFINITE_QUANTITY: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string, DISPLAY_NAME: string, MEASUREMENTS: string, UOM: string, CATEGORY: string,\n *     NEXT_EVENT_DATE: string, BILLING_PROVIDER: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES = {\n  ...RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  HAS_INFINITE_QUANTITY: 'has_infinite_quantity',\n  NEXT_EVENT_DATE: 'next_event_date',\n  PRODUCT_NAME: 'product_name',\n  QUANTITY: 'quantity',\n  SERVICE_LEVEL: 'service_level',\n  TOTAL_CAPACITY: 'total_capacity',\n  UOM: 'uom'\n};\n\n/**\n * RHSM response Subscriptions META types.\n *\n * @type {{PRODUCT: string, SUBSCRIPTION_TYPE: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  SUBSCRIPTION_TYPE: 'subscription_type'\n};\n\n/**\n * RHSM response Tally DATA types.\n *\n * @type {{DATE: string, HAS_DATA: string, VALUE: string, HAS_INFINITE_QUANTITY: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES = {\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_DATA: 'has_data',\n  HAS_INFINITE_QUANTITY: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response Tally META types.\n *\n * @type {{TOTAL_MONTHLY: string, DATE: string, PRODUCT: string, HAS_CLOUDIGRADE_DATA: string,\n *     HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string, METRIC_ID: string, COUNT: string, VALUE: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_CLOUDIGRADE_DATA: 'has_cloudigrade_data',\n  HAS_CLOUDIGRADE_MISMATCH: 'has_cloudigrade_mismatch',\n  HAS_DATA: 'has_data',\n  METRIC_ID: 'metric_id',\n  TOTAL_MONTHLY: 'total_monthly'\n};\n\n/**\n * RHSM response, query parameters for GRANULARITY.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_RESPONSE_GRANULARITY_TYPES = {\n  DAILY: 'Daily',\n  WEEKLY: 'Weekly',\n  MONTHLY: 'Monthly',\n  QUARTERLY: 'Quarterly'\n};\n\n/**\n * ToDo: Activate available provider type as it becomes available 202205\n * (just uncomment)\n */\n/**\n * RHSM response, query parameters for BILLING_PROVIDER\n *\n * @type {{AZURE: string, GCP: string, RED_HAT: string, NONE: string, AWS: string, ORACLE: string}}\n */\nconst RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES = {\n  RED_HAT: 'red hat',\n  AWS: 'aws'\n  // GCP: 'gcp',\n  // AZURE: 'azure',\n  // ORACLE: 'oracle',\n  // NONE: ''\n};\n\n/**\n * RHSM response, query parameters for SLA.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_RESPONSE_SLA_TYPES = {\n  PREMIUM: 'Premium',\n  STANDARD: 'Standard',\n  SELF: 'Self-Support',\n  NONE: ''\n};\n\n/**\n * RHSM response, general parameters for subscription types\n *\n * @type {{ANNUAL: string, ON_DEMAND: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTION_TYPES = {\n  ANNUAL: 'Annual',\n  ON_DEMAND: 'On-demand'\n};\n\n/**\n * RHSM response, query parameters for UOM.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_RESPONSE_UOM_TYPES = {\n  CORES: 'cores',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM response, query parameters for USAGE.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_RESPONSE_USAGE_TYPES = {\n  PRODUCTION: 'Production',\n  DEVELOPMENT: 'Development/Test',\n  DISASTER: 'Disaster Recovery',\n  UNSPECIFIED: ''\n};\n\n/**\n * RHSM query/search parameter CATEGORY type values for TALLY/CAPACITY.\n *\n * @type {{CLOUD: string, PHYSICAL: string, ON_DEMAND: string, HYPERVISOR: string, PREPAID: string, VIRTUAL: string}}\n */\nconst RHSM_API_QUERY_CATEGORY_TYPES = {\n  CLOUD: 'cloud',\n  HYPERVISOR: 'hypervisor',\n  ON_DEMAND: 'on-demand',\n  PHYSICAL: 'physical',\n  PREPAID: 'prepaid',\n  VIRTUAL: 'virtual'\n};\n\nconst RHSM_API_QUERY_GRANULARITY_TYPES = RHSM_API_RESPONSE_GRANULARITY_TYPES;\n\n/**\n * RHSM API query/search parameter SORT type values for general inventory displays.\n *\n * @type {{CORES: string, STORAGE_GIBIBYTES: string, CATEGORY: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     NUMBER_OF_GUESTS: string, TRANSFER_GIBIBYTES: string, BILLING_PROVIDER: string, CORE_SECONDS: string,\n *     STORAGE_GIBIBYTE_MONTHS: string, LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_TYPES = {\n  ...RHSM_API_PATH_METRIC_TYPES,\n  BILLING_PROVIDER: 'billing_provider',\n  CATEGORY: 'category',\n  LAST_SEEN: 'last_seen',\n  NAME: 'display_name',\n  NUMBER_OF_GUESTS: 'number_of_guests'\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES = {\n  ASCENDING: 'asc',\n  DESCENDING: 'desc'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for SUBSCRIPTIONS.\n *\n * @type {{QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string, NEXT_EVENT_DATE: string,\n *     TOTAL_CAPACITY: string, PRODUCT_NAME: string, SKU: string, SERVICE_LEVEL: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES = {\n  NEXT_EVENT_DATE: 'next_event_date',\n  NEXT_EVENT_TYPE: 'next_event_type',\n  PRODUCT_NAME: 'product_name',\n  QUANTITY: 'quantity',\n  SKU: 'sku',\n  SERVICE_LEVEL: 'service_level',\n  TOTAL_CAPACITY: 'total_capacity',\n  USAGE: 'usage'\n};\n\nconst RHSM_API_QUERY_BILLING_PROVIDER_TYPES = RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES;\n\nconst RHSM_API_QUERY_SLA_TYPES = RHSM_API_RESPONSE_SLA_TYPES;\n\nconst RHSM_API_QUERY_UOM_TYPES = RHSM_API_RESPONSE_UOM_TYPES;\n\nconst RHSM_API_QUERY_USAGE_TYPES = RHSM_API_RESPONSE_USAGE_TYPES;\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{BILLING_ACCOUNT_ID: string, DIRECTION: string, END_DATE: string, SLA: string, LIMIT: string, START_DATE: string,\n *     VARIANT: string, DISPLAY_NAME: string, UOM: string, USAGE: string, CATEGORY: string, SORT: string, OFFSET: string,\n *     BILLING_PROVIDER: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  BILLING_PROVIDER: 'billing_provider',\n  BILLING_ACCOUNT_ID: 'billing_account_id',\n  CATEGORY: 'category',\n  DIRECTION: 'dir',\n  DISPLAY_NAME: 'display_name_contains',\n  END_DATE: 'ending',\n  LIMIT: 'limit',\n  OFFSET: 'offset',\n  SLA: 'sla',\n  SORT: 'sort',\n  START_DATE: 'beginning',\n  UOM: 'uom',\n  USAGE: 'usage',\n  VARIANT: 'variant'\n};\n\n/**\n * RHSM query parameter options for TALLY, CAPACITY endpoints.\n *\n * @type {{GRANULARITY: string, USAGE: string, CATEGORY: string, END_DATE: string, SLA: string,\n *     START_DATE: string, BILLING_PROVIDER: string, VARIANT: string, USE_RUNNING_TOTALS_FORMAT: string,\n *     BILLING_CATEGORY: string}}\n */\nconst RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES = {\n  BILLING_CATEGORY: 'billing_category',\n  BILLING_PROVIDER: 'billing_provider',\n  CATEGORY: 'category',\n  END_DATE: 'ending',\n  GRANULARITY: 'granularity',\n  SLA: 'sla',\n  START_DATE: 'beginning',\n  USAGE: 'usage',\n  USE_RUNNING_TOTALS_FORMAT: 'use_running_totals_format',\n  VARIANT: 'variant'\n};\n\n/**\n * Aggregate all query set types.\n *\n * @type {{GRANULARITY: string, BILLING_ACCOUNT_ID: string, DIRECTION: string, END_DATE: string, SLA: string,\n *     LIMIT: string, START_DATE: string, VARIANT: string, DISPLAY_NAME: string, USE_RUNNING_TOTALS_FORMAT: string,\n *     BILLING_CATEGORY: string, UOM: string, USAGE: string, CATEGORY: string, SORT: string, OFFSET: string,\n *     BILLING_PROVIDER: string}}\n */\nconst RHSM_API_QUERY_SET_TYPES = {\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES\n};\n\n/**\n * Product display types.\n *\n * @type {{CAPACITY: string, LEGACY: string, DUAL_AXES: string, PARTIAL: string, HOURLY: string}}\n */\nconst RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES = {\n  DUAL_AXES: 'dual-axes',\n  HOURLY: 'hourly',\n  LEGACY: 'legacy',\n  PARTIAL: 'partial',\n  CAPACITY: 'capacity'\n};\n\n/**\n * RHSM constants.\n *\n * @type {{RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES: {GRANULARITY: string, USAGE: string, CATEGORY: string, END_DATE: string, SLA: string,\n *     START_DATE: string, BILLING_PROVIDER: string, VARIANT: string, USE_RUNNING_TOTALS_FORMAT: string, BILLING_CATEGORY: string},\n *     RHSM_API_RESPONSE_DATA: string, RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES: {PRODUCT: string, SUBSCRIPTION_TYPE: string,\n *     COUNT: string}, RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES: {SATELLITE_SERVER: string, SATELLITE_CAPSULE: string},\n *     RHSM_API_PATH_METRIC_TYPES: {CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     TRANSFER_GIBIBYTES: string, CORE_SECONDS: string, STORAGE_GIBIBYTE_MONTHS: string},\n *     RHSM_API_RESPONSE_INSTANCES_META_TYPES: {MEASUREMENTS: string, UOM: string, PRODUCT: string, COUNT: string},\n *     RHSM_API_RESPONSE_INSTANCES_DATA_TYPES: {MEASUREMENTS: string, BILLING_ACCOUNT_ID: string, CATEGORY: string,\n *     SUBSCRIPTION_MANAGER_ID: string, INVENTORY_ID: string, NUMBER_OF_GUESTS: string, BILLING_PROVIDER: string, DISPLAY_NAME: string,\n *     CLOUD_PROVIDER: string, INSTANCE_ID: string, LAST_SEEN: string}, RHSM_API_RESPONSE_SLA_TYPES: {PREMIUM: string, SELF: string,\n *     NONE: string, STANDARD: string}, RHSM_API_RESPONSE_META_TYPES: {PRODUCT: string, COUNT: string},\n *     RHSM_API_RESPONSE_ERRORS_CODE_TYPES: {GENERIC: string, OPTIN: string}, RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string,\n *     QUARTERLY: string, DAILY: string, MONTHLY: string}, RHSM_API_RESPONSE_UOM_TYPES: {CORES: string, SOCKETS: string},\n *     RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES: {RHEL_ARM: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string, RHEL_X86: string},\n *     RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES: {BILLING_ACCOUNT_ID: string, QUANTITY: string, SUBSCRIPTION_MANAGER_ID: string,\n *     INVENTORY_ID: string, NUMBER_OF_GUESTS: string, HAS_INFINITE_QUANTITY: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string, DISPLAY_NAME: string, MEASUREMENTS: string, UOM: string, CATEGORY: string, NEXT_EVENT_DATE: string,\n *     BILLING_PROVIDER: string, LAST_SEEN: string}, RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES: {ASCENDING: string,\n *     DESCENDING: string}, RHSM_API_RESPONSE_SUBSCRIPTION_TYPES: {ANNUAL: string, ON_DEMAND: string},\n *     RHSM_API_QUERY_INVENTORY_SORT_TYPES: {CORES: string, STORAGE_GIBIBYTES: string, CATEGORY: string, SOCKETS: string,\n *     INSTANCE_HOURS: string, NUMBER_OF_GUESTS: string, TRANSFER_GIBIBYTES: string, BILLING_PROVIDER: string, CORE_SECONDS: string,\n *     STORAGE_GIBIBYTE_MONTHS: string, LAST_SEEN: string, NAME: string}, RHSM_API_PATH_PRODUCT_TYPES: {RHEL_ARM: string,\n *     OPENSHIFT_METRICS: string, RHEL_WORKSTATION: string, RHODS: string, ROSA: string, RHEL_X86: string, RHEL_COMPUTE_NODE: string,\n *     OPENSHIFT: string, SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string, SATELLITE_CAPSULE: string, RHEL_IBM_Z: string,\n *     RHEL_IBM_POWER: string, RHACS: string}, RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES: {AZURE: string, GCP: string, RED_HAT: string,\n *     NONE: string, AWS: string, ORACLE: string}, RHSM_API_RESPONSE_ERRORS_TYPES: {CODE: string},\n *     RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES: {DATE: string, HAS_DATA: string, VALUE: string, HAS_INFINITE_QUANTITY: string},\n *     RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES: {TOTAL_MONTHLY: string, DATE: string, PRODUCT: string, HAS_CLOUDIGRADE_DATA: string,\n *     HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string, METRIC_ID: string, COUNT: string, VALUE: string},\n *     RHSM_API_QUERY_BILLING_PROVIDER_TYPES: {AZURE: string, GCP: string, RED_HAT: string, NONE: string, AWS: string, ORACLE: string},\n *     RHSM_API_QUERY_CATEGORY_TYPES: {CLOUD: string, PHYSICAL: string, ON_DEMAND: string, HYPERVISOR: string, PREPAID: string,\n *     VIRTUAL: string}, RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string},\n *     RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_QUERY_SET_INVENTORY_TYPES: {BILLING_ACCOUNT_ID: string, DIRECTION: string, END_DATE: string, SLA: string, LIMIT: string,\n *     START_DATE: string, VARIANT: string, DISPLAY_NAME: string, UOM: string, USAGE: string, CATEGORY: string, SORT: string,\n *     OFFSET: string, BILLING_PROVIDER: string}, RHSM_API_RESPONSE_ERRORS: string, RHSM_API_QUERY_UOM_TYPES: {CORES: string,\n *     SOCKETS: string}, RHSM_API_RESPONSE_META: string, RHSM_API_RESPONSE_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string,\n *     DAILY: string, MONTHLY: string}, RHSM_API_QUERY_SET_TYPES: {GRANULARITY: string, BILLING_ACCOUNT_ID: string, DIRECTION: string,\n *     END_DATE: string, SLA: string, LIMIT: string, START_DATE: string, VARIANT: string, DISPLAY_NAME: string,\n *     USE_RUNNING_TOTALS_FORMAT: string, BILLING_CATEGORY: string, UOM: string, USAGE: string, CATEGORY: string, SORT: string,\n *     OFFSET: string, BILLING_PROVIDER: string}, RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES: {QUANTITY: string, USAGE: string,\n *     NEXT_EVENT_TYPE: string, NEXT_EVENT_DATE: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string, SKU: string,\n *     SERVICE_LEVEL: string}, RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES: {CAPACITY: string, LEGACY: string, DUAL_AXES: string,\n *     PARTIAL: string, HOURLY: string}, RHSM_API_RESPONSE_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string,\n *     PRODUCTION: string}}}\n */\nconst rhsmConstants = {\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_ERRORS,\n  RHSM_API_RESPONSE_ERRORS_TYPES,\n  RHSM_API_RESPONSE_ERRORS_CODE_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTION_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_BILLING_PROVIDER_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES\n};\n\nexport {\n  rhsmConstants as default,\n  rhsmConstants,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_ERRORS,\n  RHSM_API_RESPONSE_ERRORS_TYPES,\n  RHSM_API_RESPONSE_ERRORS_CODE_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTION_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_BILLING_PROVIDER_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES\n};\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var map = {\n\t\"./authentication/authentication.js\": [\n\t\t67719\n\t],\n\t\"./authentication/authenticationContext.js\": [\n\t\t98944\n\t],\n\t\"./bannerMessages/bannerMessages.js\": [\n\t\t87585,\n\t\t7585\n\t],\n\t\"./bannerMessages/bannerMessagesContext.js\": [\n\t\t31824,\n\t\t1824\n\t],\n\t\"./chart/chart.js\": [\n\t\t30211\n\t],\n\t\"./chart/chartAxisLabel.js\": [\n\t\t76395\n\t],\n\t\"./chart/chartContext.js\": [\n\t\t98326\n\t],\n\t\"./chart/chartElements.js\": [\n\t\t54096\n\t],\n\t\"./chart/chartHelpers.js\": [\n\t\t61026\n\t],\n\t\"./chart/chartIcon.js\": [\n\t\t1138\n\t],\n\t\"./chart/chartLegend.js\": [\n\t\t52902\n\t],\n\t\"./chart/chartTooltip.js\": [\n\t\t78213\n\t],\n\t\"./form/checkbox.js\": [\n\t\t34467,\n\t\t6170,\n\t\t7235,\n\t\t2181,\n\t\t1302\n\t],\n\t\"./form/formHelpers.js\": [\n\t\t44044\n\t],\n\t\"./form/select.js\": [\n\t\t49844\n\t],\n\t\"./form/textInput.js\": [\n\t\t18710,\n\t\t8710\n\t],\n\t\"./graphCard/graphCard.js\": [\n\t\t10608,\n\t\t9517,\n\t\t136,\n\t\t1799,\n\t\t608\n\t],\n\t\"./graphCard/graphCardChart.js\": [\n\t\t91799,\n\t\t9517,\n\t\t136,\n\t\t1799\n\t],\n\t\"./graphCard/graphCardChartLegend.js\": [\n\t\t64418,\n\t\t9517,\n\t\t136,\n\t\t4418\n\t],\n\t\"./graphCard/graphCardChartTitleTooltip.js\": [\n\t\t99171,\n\t\t9517,\n\t\t136,\n\t\t939\n\t],\n\t\"./graphCard/graphCardChartTooltip.js\": [\n\t\t44024,\n\t\t4024\n\t],\n\t\"./graphCard/graphCardContext.js\": [\n\t\t25394,\n\t\t9517,\n\t\t136,\n\t\t5394\n\t],\n\t\"./graphCard/graphCardHelpers.js\": [\n\t\t78139\n\t],\n\t\"./graphCard/graphCardMetricTotals.js\": [\n\t\t29407,\n\t\t9517,\n\t\t136,\n\t\t9407\n\t],\n\t\"./i18n/i18n.js\": [\n\t\t83109\n\t],\n\t\"./i18n/i18nHelpers.js\": [\n\t\t32643\n\t],\n\t\"./inventoryCard/inventoryCard.js\": [\n\t\t76587,\n\t\t6587\n\t],\n\t\"./inventoryCard/inventoryCardHelpers.js\": [\n\t\t12243,\n\t\t2243\n\t],\n\t\"./inventoryCardInstances/inventoryCardInstances.js\": [\n\t\t56235,\n\t\t9517,\n\t\t136,\n\t\t3441,\n\t\t6235\n\t],\n\t\"./inventoryCardInstances/inventoryCardInstancesContext.js\": [\n\t\t2176,\n\t\t9517,\n\t\t136,\n\t\t3441\n\t],\n\t\"./inventoryCardSubscriptions/inventoryCardSubscriptions.js\": [\n\t\t16696,\n\t\t9517,\n\t\t136,\n\t\t3441,\n\t\t6696,\n\t\t2302\n\t],\n\t\"./inventoryCardSubscriptions/inventoryCardSubscriptionsContext.js\": [\n\t\t62881,\n\t\t9517,\n\t\t136,\n\t\t3441,\n\t\t2881\n\t],\n\t\"./inventoryGuests/inventoryGuests.js\": [\n\t\t15242,\n\t\t9517,\n\t\t136,\n\t\t3441\n\t],\n\t\"./inventoryGuests/inventoryGuestsContext.js\": [\n\t\t32293,\n\t\t9517,\n\t\t136,\n\t\t3441\n\t],\n\t\"./inventoryTabs/inventoryTab.js\": [\n\t\t80931,\n\t\t931\n\t],\n\t\"./inventoryTabs/inventoryTabs.js\": [\n\t\t69051,\n\t\t9051\n\t],\n\t\"./loader/loader.js\": [\n\t\t1797\n\t],\n\t\"./messageView/messageView.js\": [\n\t\t79719\n\t],\n\t\"./minHeight/minHeight.js\": [\n\t\t91339,\n\t\t1339\n\t],\n\t\"./optinView/optinView.js\": [\n\t\t649\n\t],\n\t\"./pageLayout/pageColumns.js\": [\n\t\t5937\n\t],\n\t\"./pageLayout/pageHeader.js\": [\n\t\t58816\n\t],\n\t\"./pageLayout/pageLayout.js\": [\n\t\t52422\n\t],\n\t\"./pageLayout/pageMessages.js\": [\n\t\t54803\n\t],\n\t\"./pageLayout/pageSection.js\": [\n\t\t99781\n\t],\n\t\"./pageLayout/pageToolbar.js\": [\n\t\t89484\n\t],\n\t\"./pagination/pagination.js\": [\n\t\t68900,\n\t\t8900\n\t],\n\t\"./pagination/paginationHelpers.js\": [\n\t\t65020,\n\t\t5020\n\t],\n\t\"./productView/productView.js\": [\n\t\t29175,\n\t\t9517,\n\t\t136,\n\t\t2181,\n\t\t3441,\n\t\t1799,\n\t\t6696,\n\t\t2582\n\t],\n\t\"./productView/productViewContext.js\": [\n\t\t51858,\n\t\t1858\n\t],\n\t\"./productView/productViewMissing.js\": [\n\t\t91233,\n\t\t1233\n\t],\n\t\"./router/index.js\": [\n\t\t94976\n\t],\n\t\"./router/router.js\": [\n\t\t27097\n\t],\n\t\"./router/routerContext.js\": [\n\t\t43301\n\t],\n\t\"./router/routerHelpers.js\": [\n\t\t97712\n\t],\n\t\"./table/table.js\": [\n\t\t78697\n\t],\n\t\"./table/tableEmpty.js\": [\n\t\t30817\n\t],\n\t\"./table/tableHelpers.js\": [\n\t\t57752\n\t],\n\t\"./table/tableSkeleton.js\": [\n\t\t62540\n\t],\n\t\"./tabs/tabs.js\": [\n\t\t70031,\n\t\t31\n\t],\n\t\"./toolbar/toolbar.js\": [\n\t\t92227,\n\t\t9517,\n\t\t136,\n\t\t2181,\n\t\t2227\n\t],\n\t\"./toolbar/toolbarContext.js\": [\n\t\t83280,\n\t\t9517,\n\t\t136,\n\t\t3280\n\t],\n\t\"./toolbar/toolbarFieldBillingProvider.js\": [\n\t\t31663,\n\t\t1663\n\t],\n\t\"./toolbar/toolbarFieldCategory.js\": [\n\t\t93597,\n\t\t3597\n\t],\n\t\"./toolbar/toolbarFieldDisplayName.js\": [\n\t\t89517,\n\t\t9517\n\t],\n\t\"./toolbar/toolbarFieldGranularity.js\": [\n\t\t2738,\n\t\t2738\n\t],\n\t\"./toolbar/toolbarFieldGroupVariant.js\": [\n\t\t12258,\n\t\t2258\n\t],\n\t\"./toolbar/toolbarFieldRangedMonthly.js\": [\n\t\t65876,\n\t\t5876\n\t],\n\t\"./toolbar/toolbarFieldSelectCategory.js\": [\n\t\t70136,\n\t\t9517,\n\t\t136\n\t],\n\t\"./toolbar/toolbarFieldSla.js\": [\n\t\t33267,\n\t\t3267\n\t],\n\t\"./toolbar/toolbarFieldUom.js\": [\n\t\t74097,\n\t\t4097\n\t],\n\t\"./toolbar/toolbarFieldUsage.js\": [\n\t\t49928,\n\t\t9928\n\t],\n\t\"./toolbar/toolbarFieldVariant.js\": [\n\t\t22622,\n\t\t2622\n\t],\n\t\"./toolbar/toolbarFilter.js\": [\n\t\t17098,\n\t\t2181,\n\t\t7098\n\t],\n\t\"./tooltip/tooltip.js\": [\n\t\t3969\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 58908;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./product.openshiftContainer.js\": 74925,\n\t\"./product.openshiftDedicated.js\": 1816,\n\t\"./product.openshiftMetrics.js\": 33092,\n\t\"./product.rhacs.js\": 22624,\n\t\"./product.rhel.js\": 79326,\n\t\"./product.rhods.js\": 43016,\n\t\"./product.rosa.js\": 9362,\n\t\"./product.satellite.js\": 36272\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 25264;"],"names":["module","exports","App","_ref","getLocale","useDispatch","useAliasDispatch","useSelector","useAliasSelector","dispatch","value","locale","_ref2","_user$locale","user","data","platformNotifications","useMount","helpers","React","NotificationsPortal","I18n","Authentication","Router","propTypes","PropTypes","defaultProps","reduxActions","storeHooks","memo","func","cacheLimit","arguments","length","undefined","cache","_len","args","Array","_key","key","JSON","stringify","map","arg","toString","keyIndex","indexOf","result","call","unshift","ized","noop","Function","prototype","noopPromise","Promise","resolve","objFreeze","obj","Object","freeze","oIsFunction","hasOwnProp","hasOwnProperty","getOwnPropertyNames","forEach","prop","isFrozen","setImmutableData","isClone","_cloneDeep","PROD_MODE","process","UI_WINDOW_ID","aggregatedError","errors","message","name","AggregateError","Error","window","err","isArray","isEmulated","browserExpose","options","limit","id","generateHash","anyValue","method","cryptoSha1","_isPlainObject","entries","sort","a","b","localeCompare","_ref3","_ref4","concat","generateId","prefix","Math","ceil","random","isDate","date","isPromise","test","numberDisplay","Number","isNaN","numbro","DEV_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DEPLOY_PATH_LINK_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_NOTIFICATIONS","UI_DISABLED_TABLE","UI_DISABLED_TABLE_INSTANCES","UI_DISABLED_TABLE_SUBSCRIPTIONS","UI_DISABLED_TOOLBAR","UI_DISABLED_TOOLBAR_GROUP_VARIANT","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LINK_CONTACT_US","UI_LINK_LEARN_MORE","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","UI_LOCALE_DEFAULT","UI_LOCALE_DEFAULT_DESC","UI_LOGGER_ID","UI_LOGGER_FILE","UI_NAME","UI_PATH","UI_VERSION","getCurrentDate","moment","toDate","REACT_APP_DEBUG_DEFAULT_DATETIME","setRangedDateTime","subtract","measurement","endOfMeasurement","startDate","startOf","endDate","endOf","currentDateTime","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","rangedYearDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedMonthDateTime","month","currentYear","parseInt","year","keyDateTimeRanges","listDateTimeRanges","startDateUpdated","endDateUpdated","format","dateTime","titleYear","title","titleIndex","isNextYear","_title","toLowerCase","add","translate","context","push","reverse","isCurrent","current","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats","timestampTimeFormats","timeLong","yearTimeLong","timeShort","yearTimeShort","timestampUTCTimeFormats","debugLog","async","sessionStorage","fileName","replace","parse","getItem","fileType","reject","document","navigator","URL","blob","Blob","type","msSaveBlob","anchorTag","createElement","href","createObjectURL","style","display","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","error","downloadData","e","appName","children","isDisabled","t","useGetAuthorization","useAliasGetAuthorization","pending","authorized","errorCodes","errorStatus","isAuthorized","AuthenticationContext","MessageView","Maintenance","description","pageTitle","icon","BinocularsIcon","includes","rhsmConstants","OptinView","NotAuthorized","serviceName","routerHelpers","DEFAULT_CONTEXT","useAuthContext","useContext","_responses$id","_responses$id$errors","authorizeUser","hideGlobalFilter","useChrome","useAliasChrome","useSelectorsResponse","useAliasSelectorsResponse","updateDocumentTitle","fulfilled","responses","selector","auth","_user$errors","app","status","useSession","useAliasAuthContext","Chart","chartLegend","chartTooltip","dataSets","padding","themeColor","xAxisChartLabel","yAxisChartLabel","xAxisFixLabelOverlap","xAxisLabelIncrement","xAxisTickFormat","yAxisTickFormat","xValueFormat","yValueFormat","setContext","useState","dataSetsToggle","setDataSetsToggle","containerRef","useRef","tooltipRef","width","chartWidth","useResizeObserver","useEffect","updatedSettings","chartContainerRef","chartSettings","updateChartSettings","toggledDataSets","filter","tooltipDataSetLookUp","chartHelpers","content","maxX","maxY","individualMaxY","xAxisProps","yAxisProps","isMultiYAxis","chartElementsProps","domain","domainPadding","chartDomain","hasData","tickValues","bottom","left","right","top","chartTooltipRef","ChartContext","className","ref","ChartElements","ChartLegend","x","y","xAxisLabel","Date","animate","chartType","values","ChartTypeVariant","fill","stroke","strokeWidth","strokeDasharray","themeVariant","interpolation","isStacked","xAxisUseDataSet","yAxisUseDataSet","ChartThemeColor","chartAxisLabel","axis","index","text","height","xmlns","useChartContext","useToggleData","useAliasChartContext","contextDataSetsToggle","onHide","useCallback","prevState","onRevert","onToggle","updatedToggle","getIsToggled","chartTypeDefaults","containerComponent","ChartContainer","xAxis","yAxis","chartElements","stackedChartElements","_Object$values$sort","VictoryVoronoiCursorContainer","createContainer","TooltipLabelComponent","cursorDimension","voronoiDimension","labels","labelComponent","ChartCursorTooltip","dx","dy","centerOffset","flyoutStyle","voronoiPadding","mouseFollowTooltips","keys","updatedXAxisProps","label","AxisLabelComponent","axisLabelComponent","ChartAxis","_extends","axisProps","updatedAxisProps","orientation","setChartElement","props","component","Component","elements","stackedElements","duration","ChartStack","isRequired","ChartArea","onLoad","ChartLine","ChartThreshold","area","line","threshold","generateMaxXY","individualDataSetsMaxY","combinedDataSetMaxX","combinedDataSetsMaxY","max","_value$y","dataSetMaxY","_value$y2","generateDomains","updatedChartDomain","updatedPadding","generatedDomain","floored","pow","floor","log10","generateElementsProps","chartTypeVariant","elementsById","stackedElementsById","dataSet","dataColorStroke","updatedProps","datum","xValue","yValue","isMultiAxis","generateTooltipData","_dataSets$","itemsByKey","_data$data","color","mockDatum","tooltip","generateXAxisProps","xAxisPropDefaults","reduce","acc","tickFormat","tick","_data$tick","tickIndex","previousItem","nextItem","item","generateYAxisProps","yAxisPropDefaults","tickLabels","updatedMaxY","generateAxisProps","fixLabelOverlap","xAxisDataSet","yAxisDataSets","slice","dependentAxis","showGrid","getSize","size","parseFloat","ChartIcon","symbol","svgProps","iconProps","fontProps","fontSize","emSvgSize","setIcon","viewBox","role","x1","y1","x2","y2","EyeIcon","EyeSlashIcon","SquareIcon","IconSize","legendProps","chart","hide","revert","toggle","isToggled","marginLeft","marginRight","minChartWidth","getXCoordinate","tooltipWidth","minWidth","getYCoordinate","tooltipHeight","updatedMultiplier","tailPosition","_tooltipDataSetLookUp","_containerRef$current","_containerRef$current2","_tooltipRef$current","containerBounds","querySelector","getBoundingClientRect","tooltipBounds","isOutsideGraphBottom","isOutsideGraphLeft","isOutsideGraphRight","isOutsideGraphTop","updatedClassName","createMockEvent","event","_updatedCurrentTarget","persistEvent","checked","currentTarget","keyCode","persist","target","updatedCurrentTarget","doesNotHaveMinimumCharacters","characters","formHelpers","SplitButtonVariant","action","checkbox","ButtonVariant","PfButtonVariant","SelectButtonVariant","SelectDirection","DropdownDirection","SelectPosition","DropdownPosition","formatOptions","selectField","selectedOptions","variant","domElement","dataAttributes","updatedOptions","isSelectedOptionsStringNumber","activateOptions","updateSelected","option","convertedOption","textContent","isSelected","_findIndex","find","activeOption","selected","SelectVariant","opt","firstChild","setAttribute","formatSelectProps","_memoize","placeholder","hasPlaceholderStyle","formatButtonProps","buttonVariant","onSplitButton","splitButtonCopy","splitButtonVariant","splitButtonVariantPropLookup","splitButtonItems","DropdownToggleAction","onClick","DropdownToggleCheckbox","default","toggleVariant","plain","isPlain","toggleIndicator","primary","secondary","isText","Select","ariaLabel","direction","isDropdownButton","isFlipEnabled","isInline","isToggleText","maxHeight","onSelect","baseOptions","position","toggleIcon","isMounted","setIsMounted","isExpanded","setIsExpanded","setOptions","setSelected","useUnmount","useShallowCompareEffect","updatedSelected","expanded","onDropdownSelect","titleSelection","optionsIndex","findIndex","_event$currentTarget$","getAttribute","innerText","mockUpdatedOptions","mockTarget","selectedIndex","mockEvent","Dropdown","isOpen","DropdownToggle","dropdownItems","DropdownItem","btoa","updatedButtonProps","formatButtonParentProps","PfSelect","down","selections","placeholderText","PfSelectOption","generateChartIds","isCapacity","metric","productId","query","metricCategory","RHSM_API_QUERY_SET_TYPES","billingCategory","generateIsToolbarFilter","generateChartSettings","filters","settings","graphCardSettings","filtersSettings","combinedSettings","filterSettings","isMultiMetric","isFirst","isLast","remainingCombinedSettings","updatedChartType","isThreshold","isAxisLabel","baseFilterSettings","isToolbarFilter","chartColorGreenDark","_remainingCombinedSet","_remainingCombinedSet2","isMetricDisplay","cards","isStandalone","groupMetric","Set","metrics","stringId","_filtersSettings","currentLastFiltersSettingsEntry","_filtersSettings2","lastFiltersSettingsEntry","from","join","groupedMetrics","groupedMetricsSettings","remainingSettings","metricFilter","getChartXAxisLabelIncrement","getTooltipDate","momentDate","callback","previousDate","isNewYear","formattedDate","_helpers$numberDispla","_helpers$numberDispla2","average","mantissa","trimMantissa","lowPrecision","toUpperCase","generateExtendedChartSettings","_settings$xAxisLabelI","getMetricTotalCurrentOrLastData","currentDate","currentHasData","currentValue","isCurrentDate","lastDate","lastHasData","lastValue","getDailyMonthlyTotals","meta","totalMonthlyDate","monthlyDate","totalMonthlyHasData","monthlyHasData","totalMonthlyValue","monthlyValue","dailyDate","dailyHasData","dailyValue","getPrepaidTallyCapacity","_data$find","_data$find2","capacityData","_ref5","RegExp","tallyData","_ref6","CATEGORY_TYPES","getRemainingCapacity","capacityHasData","capacityValue","tallyHasData","tallyValue","response","remainingCapacityHasData","remainingCapacity","getRemainingOverage","remainingOverageHasData","remainingOverage","graphCardHelpers","fallbackLng","loadPath","initialized","setInitialized","i18next","XHR","use","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","EMPTY_CONTEXT","noopTranslate","components","updatedKey","updatedValue","updatedComponents","splitContext","emptyContextValue","split","parseContext","translateKey","aliasSplitContext","updatedTranslateKey","updatedContext","tempContext","flat","lastContext","pop","parseTranslateKey","aliasI18next","isDebug","aliasNoopTranslate","aliasParseContext","aliasParseTranslateKey","updatedValues","baseUpdatedTranslateKey","TestElement","parsedContext","parsedAgainTranslateKey","testId","defaultTestId","updatedDataTest","setI18nTestElement","store","Trans","i18nKey","translateComponent","withTranslation","i18n","displayName","i18nHelpers","Loader","skeletonProps","tableProps","Skeleton","SkeletonSize","TableSkeleton","PageLayout","PageHeader","Spinner","borders","colCount","colWidth","rowCount","TableVariant","PageSection","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","EmptyStateBody","updateAccountOptIn","useAliasSession","optin","onSubmitOptIn","Card","Flex","flex","FlexItem","CardTitle","CardBody","CardFooter","renderOptinForm","disableButton","Form","ActionGroup","Button","alignSelf","CardHeader","CardHeaderMain","Brand","srcSet","graphPng4x","graphPng2x","src","alt","PageColumns","alignItems","sm","spaceItems","child","grow","productLabel","RcsPageHeader","justifyContent","PageHeaderTitle","ExternalLinkAltIcon","iconPosition","PageMessages","PageToolbar","Main","Section","redirectRoute","routes","useSetRouteDetail","useAliasSetRouteDetail","updatedRoutes","View","Route","path","element","fallback","Routes","redirect","Navigate","to","disabled","useLocation","useAliasLocation","useLocationRRD","windowLocation","aliasWindowLocation","location","updatedLocation","setUpdatedLocation","_id","hash","search","useNavigate","useAliasNavigate","useRRDNavigate","navigate","pathLocation","pathName","pathname","firstMatch","productPath","reduxTypes","config","useRouteDetail","useSelectors","useAliasSelectors","getBundleData","bundleData","productVariant","_view$product","view","product","_view$product2","detail","setDetail","updatedVariantPath","hashPath","_passed","routeConfig","_routeConfig","_routeConfig$firstMat","selectedVariant","productGroup","allConfigs","availableVariants","configs","isClosest","bundleTitle","errorRoute","productConfig","useSearchParams","useAliasSearchParams","useRRDSearchParams","setAliasSearchParams","setSearchParams","updatedQuery","isMerged","currentSearch","updatedSearch","assign","updatedPath","_view$product3","dynamicBaseName","applicationName","dynamicBasePath","routesConfig","getRouteConfigByPath","_updatedPathName$toLo","_updatedPathName$toLo2","_updatedPathName$toLo3","_updatedPathName$toLo4","_updatedPathName$toLo5","_updatedPathName$toLo6","_updatedPathName$toLo7","byAnything","byAnythingPathIds","byAnythingVariants","byProductIdConfigs","updatedPathName","trimmedPathName","focusedStr","_trimmedPathName$spli","closestStr","closest","configsByAnything","importView","p","parseSearchParams","currentPathAndOrSearch","decodeURIComponent","URLSearchParams","parsedSearch","param","v","pathJoin","paths","hasLead","Table","_updatedHeaderAndRows2","columnHeaders","componentClassNames","emptyTable","isBorders","isHeader","isStriped","onSort","onExpand","rows","summary","updatedHeaderAndRows","setUpdatedHeaderAndRows","updatedIsExpandableRow","setUpdatedIsExpandableRow","updatedIsExpandableCell","setUpdatedIsExpandableCell","updatedIsSelectTable","setUpdatedIsSelectTable","onExpandTable","rowIndex","cellIndex","nextBodyRows","bodyRows","nextBodyRowCells","cells","cellProps","cell","updatedCompoundExpand","compoundExpand","expand","onSelectTable","_prevState$bodyRows","row","select","nextHeaderSelectProps","headerSelectProps","_prevState$bodyRows2","onSortTable","originalIndex","nextHeaderRow","headerRow","headerCell","_updatedHeaderCell$pr","updatedHeaderCell","sortBy","isAllSelected","parsedIsAllSelected","isExpandableCell","parsedIsExpandableCell","isExpandableRow","parsedIsExpandableRow","isSelectTable","parsedIsSelectTable","parsedRows","tableHelpers","parsedHeaderRow","parsedHeaderSelectProps","Grid","GridItem","span","TableComposable","table","Thead","Tr","tr","Td","th","Th","tdSelect","cellKey","renderBody","_updatedHeaderAndRows","BodyWrapper","Tbody","_expandedCell$props","_expandedCell$props$c","_expandedRow$props","_expandedCell$props2","rowKey","expandedContent","expandedCell","_cell$props","_cell$props$compoundE","expandedRow","CellWrapper","cellWrapperProps","td","tdExpand","isTHeader","WrapperCell","isActionCell","tdAction","noPadding","tdExpanded","tdExpandedWrapper","colSpan","tdExpandedContent","ExpandableRowContent","TableEmpty","isSort","isSortActive","sortDirection","SortByDirection","trExpand","trExpanded","trExpandedContent","tableHeading","PlatformEmptyTableWrapper","SearchIcon","SortByDirectionVariant","WrapModifierVariant","wrap","noWrap","truncate","breakWord","fitContent","parseContent","tableHeader","isRowExpand","updatedColumnHeaders","updatedHeaderSelectProps","parsedRowData","_event","columnHeader","dataLabel","info","modifier","headerCellData","tempColumnHeader","updatedColumnIndex","columnIndex","_colIndex","tableRows","updatedRows","selectedRows","rowData","rowObj","updatedIsSelected","isRowSelected","disable","isRowToggleExpanded","remainingProps","updatedWidthClassName","_cell$isExpanded","updateIsExpanded","isCellToggleExpanded","updatedHeader","updatedCell","Tooltip","isNoWrap","PfTooltip","distance","enableFlip","entryDelay","exitDelay","TooltipPosition","productConfigs","require","console","warn","sortedProductConfigs","viewIdConfigs","productAliases","productIds","productIdConfigs","productPathConfigs","anything","anythingVariants","groupIdConfigs","groupedGroupIds","groupedVariants","groupedViewIds","aliases","productVariants","viewId","_anything$productGrou","_anything$productId","_anything$productLabe","_anything$productPath","_productPathConfigs$p","_groupIdConfigs$produ","_groupedVariants$prod","_groupedGroupIds$prod","_groupedVariants$prod2","_groupedVariants$prod3","_viewIdConfigs$viewId","_groupedViewIds$viewI","alias","_productAliases$alias","_anything$alias","_productAliases$varia","_anything$variant","_anythingVariants$key","byAlias","byGroupIdConfigs","byGroupIds","byGroupIdVariants","byProductPathConfigs","byProductIds","byViewIdConfigs","byViewIds","products","sortedConfigs","activateOnError","RHSM_API_PATH_PRODUCT_TYPES","productDisplay","DISPLAY_TYPES","productContextFilterUom","RHSM_API_QUERY_UOM_TYPES","toISOString","graphTallyQuery","inventoryGuestsQuery","inventoryHostsQuery","INVENTORY_SORT_TYPES","SORT_DIRECTION_TYPES","inventorySubscriptionsQuery","SUBSCRIPTIONS_SORT_TYPES","initialOption","initialGraphFilters","RHSM_API_PATH_METRIC_TYPES","isOptional","chartColorBlueLight","chartColorBlueDark","initialGraphSettings","isCardTitleDescription","actions","initialGuestsFilters","INVENTORY_TYPES","header","inventoryId","session","inventory","updatedDisplayName","lastSeen","DateFormat","initialInventoryFilters","instanceId","numberOfGuests","count","PfLabel","INVENTORY_META_TYPES","uom","isWrap","initialInventorySettings","guestContent","initialSubscriptionsInventoryFilters","SUBSCRIPTIONS_INVENTORY_TYPES","hasInfiniteQuantity","totalCapacity","nextEventDate","initialToolbarFilters","chartColorCyanLight","chartColorCyanDark","_dataSets$$display","chartId","_dataSets$2","_dataSets$2$display","_dataSets$3","_dataSets$3$display","_dataSets$4","_dataSets$4$display","_dataSets$5","_dataSets$5$display","_dataSets$6","_dataSets$6$display","total","footer","_dataSets$7","_dataSets$7$display","_dataSets$8","_dataSets$8$display","_dataSets$9","_dataSets$9$display","_dataSets$10","_dataSets$10$display","_helpers$numberDispla3","_helpers$numberDispla4","_dataSets$11","_dataSets$11$display","_dataSets$12","_dataSets$12$display","_dataSets$13","_dataSets$13$display","_dataSets$14","_dataSets$14$display","_helpers$numberDispla7","_helpers$numberDispla8","_helpers$numberDispla5","_helpers$numberDispla6","cores","toFixed","instanceHours","isSecondary","RHSM_API_QUERY_INVENTORY_SORT_TYPES","RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES","provider","_helpers$numberDispla9","SUBSCRIPTIONS_INVENTORY_META_TYPES","subscriptionType","RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES","chartColorPurpleLight","chartColorPurpleDark","chartColorOrangeLight","chartColorOrangeDark","isDisabledLegendClick","cloudProvider","category","sockets","isSortable","chartColorGoldLight","chartColorGoldDark","RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES","dimensions","setDimensions","isElementResize","ResizeObserver","timeout","removeObserver","handler","clientHeight","clientWidth","innerHeight","innerWidth","resizeObserver","observe","unobserve","addEventListener","removeEventListener","clearTimeout","FULFILLED_ACTION","PENDING_ACTION","REJECTED_ACTION","setResponseSchemas","initialValue","schema","generated","getSingleResponseFromResultArray","results","updatedResults","payload","updatedResultsMessage","firstErrorResponse","_get","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","formattedStatus","trim","getDateFromResults","getStatusFromResults","setStateProp","state","initialState","reset","singlePromiseDataResponseFromArray","reduxHelpers","HTTP_STATUS_RANGE","setApiQuery","setNormalizedResponse","parsedResponses","customResponseEntry","customResponseValue","keyPrefix","keyCase","updatedData","generatedSchema","parsedResponse","dataObj","keyCaseType","customEntry","customValue","update","updatedDataObj","casedDataObjKey","dataObjKey","dataObjValue","_camelCase","_snakeCase","val","isInteger","generateReflectedData","generatedData","generatedPromiseActionReducer","types","expandedTypes","subVal","whichType","baseState","errorMessage","fromEntries","expandMetaTypes","setId","_action$meta","_action$meta2","errorResponse","cancelled","getDataFromResults","deepEqual","_isEqual","selectors","_useAliasSelector2","equality","useReactReduxSelector","updatedSelectors","selectorIds","multiSelector","createSelector","listMultiSelectorResponse","undefinedMultiSelectorResponse","idMultiSelectorResponse","customResponse","selectorResponse","isSelectorResponseArray","cancelledById","cancelledByList","cancelledDataById","cancelledDataByList","errorByList","errorById","errorDataById","errorDataByList","fulfilledByList","fulfilledById","fulfilledDataById","fulfilledDataByList","pendingByList","responsesById","responsesByList","dataById","dataByList","idList","updatedSelectorResponse","updatedResponse","isServiceResponse","_cancelledByList","_errorByList","_fulfilledByList","isById","list","_errorByList$","reactReduxHooks","shallowEqual","dispatchEvent","_useAliasSelector","useSelectorsAllSettledResponse","baseResponse","useSelectorsAnyResponse","keyList","useSelectorsRaceResponse","_errorByList$2","reactRedux","camelCase","updatedObj","schemaResponse","casing","convert","details","validate","serviceHelpers","passDataToCallback","timeoutFunctionCancel","clearTimer","race","_","updatedFunc","finally","globalXhrTimeout","globalCancelTokens","globalResponseCache","LruCache","ttl","updateAgeOnGet","axiosServiceCall","cancelledMessage","responseCache","xhrTimeout","updatedConfig","cacheResponse","responseTransformers","axiosInstance","axios","cacheId","exposeCacheId","cancel","cancelTokensId","cancelId","params","CancelToken","cancelToken","token","cachedResponse","get","adapter","adapterConfig","transform","successTransform","errorTransform","transformers","normalizeError","interceptors","set","url","emulateCallback","emulatedResponse","isSuccess","Joi","JoiBase","JoiDate","userResponseSchema","object","identity","is_org_admin","boolean","unknown","entitlements","is_entitled","permissionsItem","permission","string","optional","allow","resourceDefinitions","array","permissionsResponseSchema","items","platformSchemas","permissions","platformTransformers","_identity$platformCon","_entitlements$helpers","platformConstants","isAdmin","isEntitled","rbacConfig","definitions","resource","operation","_updatedResponse$perm","_updatedResponse$perm2","all","resources","RESOURCE_TYPES","OPERATION_TYPES","_updatedResponse$perm3","resourcePermissions","_updatedResponse$perm4","_updatedResponse$perm5","_updatedResponse$perm6","res","op","platformServices","insights","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","getUser","updatedAppName","userPermissions","allPermissions","USER_PERMISSION_TYPES","REACT_APP_DEBUG_PERMISSION_APP_ONE","REACT_APP_DEBUG_PERMISSION_APP_TWO","getUserPermissions","platformMethod","isHidden","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","platformTypes","serviceCall","headers","serviceConfig","errorItem","code","errorResponseSchema","linksSchema","metaResponseSchema","number","integer","valid","capacityMetaSchema","metric_id","capacityItem","utc","has_data","has_infinite_quantity","capacityResponseSchema","links","guestsMetaSchema","guestsItem","inventory_id","display_name","subscription_manager_id","last_seen","guestsResponseSchema","instancesMetaSchema","measurements","instancesItem","instance_id","lowercase","cloud_provider","billing_provider","billing_account_id","number_of_guests","instancesResponseSchema","subscriptionsMetaSchema","subscription_type","subscriptionsItem","next_event_date","product_name","quantity","service_level","total_capacity","subscriptionsResponseSchema","tallyItem","tallyMetaSchema","has_cloudigrade_data","has_cloudigrade_mismatch","total_monthly","tallyResponseSchema","rhsmSchemas","capacity","guests","instances","subscriptions","tally","rhsmInstancesGuestsCache","rhsmTransformers","cacheIndex","isFinite","_meta$INSTANCES_META_","_normalizedUom","_normalizedUom2","metaMeasurements","INSTANCES_META_TYPES","INSTANCES_DATA_TYPES","normalizedUom","_normalizedUom3","_normalizedUom4","tempUom","SUBSCRIPTIONS_DATA_TYPES","SUBSCRIPTIONS_META_TYPES","tallyCapacity","_meta$TALLY_CAPACITY_","_meta$TALLY_CAPACITY_2","_meta$TALLY_CAPACITY_3","_isCapacity","currentDateStr","futureDateCount","TALLY_CAPACITY_DATA_TYPES","updatedDate","isFutureDate","diff","TALLY_CAPACITY_META_TYPES","cloudigradeHasMismatch","metricId","rhsmHelpers","_params$RHSM_API_QUER","updatedId","rhsmServices","getApiVersion","getGraphCapacity","getGraphTally","getInstancesInventory","getInstancesInventoryGuests","getSubscriptionsInventory","rhsmActions","getGraphMetrics","idMetric","multiMetric","multiDispatch","metricQuery","methodService","methodType","rhsmTypes","methodCancelId","generatedId","notifications","userServices","defaultLang","LocaleCode","parseLang","Cookies","deleteAccountOptIn","getAccountOptIn","userActions","userTypes","rejected","dismissable","autoDismiss","platform","rhsm","legend","reportCapacity","graphReducer","graphTypes","instancesInventory","instancesGuests","subscriptionsInventory","tabs","inventoryReducer","inventoryTypes","bannerMessages","messagesReducer","toolbarReducer","activeFilters","currentFilter","userReducer","appTypes","actionStatus","viewReducer","_state$product","updateVariantResetQueries","_productConfig$sorted","queryIds","queryId","updateResetQueries","productQuery","RHSM_API_QUERY_TYPES","updateClearQueries","updateClearGuestQuery","clearFilters","reducers","graph","messages","toolbar","reduxReducers","combineReducers","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","next","httpStatus","payloadConfig","range","statusMiddleware","promiseMiddleware","recordAction","getActions","_parsedItems","parsedItems","priorItem","updatedAction","removeUserIdentity","_obj$data","_obj$data$user","platformApiTypes","updatedPayload","sanitizeData","sanitizeActionHeaders","actionObj","timestamp","now","setItem","browser","userAgent","toLocaleString","actionRecordMiddleware","version","notificationsMiddleware","createStore","applyMiddleware","STATUS_4XX","STATUS_5XX","SET_PRODUCT","SET_PRODUCT_VARIANT","SET_PRODUCT_VARIANT_QUERY_RESET_ALL","SET_GRAPH_LEGEND","CLEAR_INVENTORY_GUESTS","SET_INVENTORY_TAB","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_GLOBAL_FILTER_HIDE","PLATFORM_USER_AUTH","queryTypes","SET_QUERY","SET_QUERY_CLEAR","SET_QUERY_CLEAR_INVENTORY_LIST","SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST","SET_QUERY_RESET_INVENTORY_LIST","SET_QUERY_RHSM_TYPES","SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_LOCALE","USER_LOGOUT","SET_BANNER_MESSAGES","SET_ACTIVE_FILTERS","SET_FILTER_TYPE","GET_GRAPH_CAPACITY_RHSM","GET_GRAPH_REPORT_CAPACITY_RHSM","GET_GRAPH_TALLY_RHSM","GET_INSTANCES_INVENTORY_RHSM","GET_INSTANCES_INVENTORY_GUESTS_RHSM","GET_SUBSCRIPTIONS_INVENTORY_RHSM","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","RESOURCE_DEFS","PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES","ALL","PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES","READ","WRITE","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES","SUBSCRIPTIONS","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","SATELLITE_CAPSULE","SATELLITE_SERVER","RHACS","RHEL_COMPUTE_NODE","RHEL_WORKSTATION","RHODS","ROSA","OPENSHIFT","OPENSHIFT_METRICS","OPENSHIFT_DEDICATED_METRICS","CORES","SOCKETS","CORE_SECONDS","INSTANCE_HOURS","STORAGE_GIBIBYTES","STORAGE_GIBIBYTE_MONTHS","TRANSFER_GIBIBYTES","RHSM_API_RESPONSE_META_TYPES","COUNT","PRODUCT","RHSM_API_RESPONSE_INSTANCES_DATA_TYPES","BILLING_PROVIDER","BILLING_ACCOUNT_ID","CLOUD_PROVIDER","CATEGORY","DISPLAY_NAME","INSTANCE_ID","INVENTORY_ID","LAST_SEEN","MEASUREMENTS","NUMBER_OF_GUESTS","SUBSCRIPTION_MANAGER_ID","RHSM_API_RESPONSE_INSTANCES_META_TYPES","UOM","RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES","HAS_INFINITE_QUANTITY","NEXT_EVENT_DATE","PRODUCT_NAME","QUANTITY","SERVICE_LEVEL","TOTAL_CAPACITY","RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES","SUBSCRIPTION_TYPE","RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES","DATE","VALUE","HAS_DATA","RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES","HAS_CLOUDIGRADE_DATA","HAS_CLOUDIGRADE_MISMATCH","METRIC_ID","TOTAL_MONTHLY","RHSM_API_RESPONSE_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES","RED_HAT","AWS","RHSM_API_RESPONSE_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","RHSM_API_RESPONSE_UOM_TYPES","RHSM_API_RESPONSE_USAGE_TYPES","PRODUCTION","DEVELOPMENT","DISASTER","UNSPECIFIED","RHSM_API_QUERY_CATEGORY_TYPES","CLOUD","HYPERVISOR","ON_DEMAND","PHYSICAL","PREPAID","VIRTUAL","RHSM_API_QUERY_GRANULARITY_TYPES","NAME","RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES","ASCENDING","DESCENDING","NEXT_EVENT_TYPE","SKU","USAGE","RHSM_API_QUERY_BILLING_PROVIDER_TYPES","RHSM_API_QUERY_SLA_TYPES","RHSM_API_QUERY_USAGE_TYPES","RHSM_API_QUERY_SET_INVENTORY_TYPES","DIRECTION","END_DATE","LIMIT","OFFSET","SLA","SORT","START_DATE","VARIANT","RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES","BILLING_CATEGORY","GRANULARITY","USE_RUNNING_TOTALS_FORMAT","RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES","DUAL_AXES","HOURLY","LEGACY","PARTIAL","CAPACITY","RHSM_API_RESPONSE_DATA","RHSM_API_RESPONSE_META","RHSM_API_RESPONSE_ERRORS","RHSM_API_RESPONSE_ERRORS_TYPES","CODE","RHSM_API_RESPONSE_ERRORS_CODE_TYPES","GENERIC","OPTIN","RHSM_API_RESPONSE_SUBSCRIPTION_TYPES","ANNUAL","webpackContext","req","webpackContextResolve","__webpack_require__","o","webpackAsyncContext","then","ids"],"sourceRoot":""}
{"version":3,"file":"js/9051.2319b4ae60a31b9639df.js","mappings":"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","sources":["webpack:///./src/components/inventoryTabs/inventoryTab.js","webpack:///./src/components/inventoryTabs/inventoryTabs.js","webpack:///./src/components/tabs/tabs.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * @memberof InventoryTabs\n * @module InventoryTab\n */\n\n/**\n * A tab pass-through component for passing props to InventoryTabs.\n *\n * @param {object} props\n * @param {boolean} props.active\n * @param {React.ReactNode} props.children\n * @param {string} props.title\n * @returns {React.ReactNode}\n */\n// eslint-disable-next-line no-unused-vars\nconst InventoryTab = ({ active, children, title }) => children;\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nInventoryTab.propTypes = {\n  children: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  title: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nInventoryTab.defaultProps = {\n  active: false\n};\n\nexport { InventoryTab as default, InventoryTab };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { useProduct } from '../productView/productViewContext';\nimport { Tabs } from '../tabs/tabs';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\nimport { InventoryTab } from './inventoryTab';\n\n/**\n * An inventory tabs display with state. Consume Tabs.\n *\n * @see Tabs\n * @memberof Components\n * @module InventoryTabs\n * @property {module} InventoryTab\n */\n\n/**\n * Update tab state.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnTab = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  return ({ index } = {}) => {\n    dispatch({\n      type: reduxTypes.inventory.SET_INVENTORY_TAB,\n      tabs: {\n        [productId]: index\n      }\n    });\n  };\n};\n\n/**\n * An inventory tabs component.\n * Render inventory tabs using Inventory tab passed props only.\n *\n * @fires onTab\n * @param {object} props\n * @param {number} props.activeTab\n * @param {React.ReactNode} props.children\n * @param {number} props.defaultActiveTab\n * @param {boolean} props.isDisabled\n * @param {Function} props.t\n * @param {Function} props.useOnTab\n * @param {Function} props.useProduct\n * @param {Function} props.useSelector\n * @returns {React.ReactNode|null}\n */\nconst InventoryTabs = ({\n  activeTab,\n  children,\n  defaultActiveTab,\n  isDisabled,\n  t,\n  useOnTab: useAliasOnTab,\n  useProduct: useAliasProduct,\n  useSelector: useAliasSelector\n}) => {\n  const { productId } = useAliasProduct();\n  const updatedActiveTab = useAliasSelector(({ inventory }) => inventory.tabs?.[productId], activeTab);\n  const onTab = useAliasOnTab();\n\n  if (isDisabled) {\n    return null;\n  }\n\n  const updatedChildren = React.Children.toArray(children).map((child, index) => {\n    const { props: childProps = {} } = child;\n\n    return {\n      active: childProps.active || false,\n      content: childProps.children || child,\n      title: childProps.title || t('curiosity-inventory.tabSubHeading', { count: index })\n    };\n  });\n\n  return (\n    <React.Fragment>\n      <Title headingLevel=\"h2\" className=\"sr-only\">\n        {t('curiosity-inventory.tabHeading', { count: updatedChildren.length })}\n      </Title>\n      <Tabs activeTab={updatedActiveTab} defaultActiveTab={defaultActiveTab} onTab={onTab} tabs={updatedChildren} />\n    </React.Fragment>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useOnTab: Function, useProduct: Function, t: Function, children: React.ReactNode,\n *     useSelector: Function, defaultActiveTab: number, isDisabled: boolean, activeTab: number}}\n */\nInventoryTabs.propTypes = {\n  activeTab: PropTypes.number,\n  children: PropTypes.node.isRequired,\n  defaultActiveTab: PropTypes.number,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  useOnTab: PropTypes.func,\n  useProduct: PropTypes.func,\n  useSelector: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useOnTab: Function, useProduct: Function, t: translate, useSelector: Function,\n *     defaultActiveTab: number, isDisabled: boolean, activeTab: number}}\n */\nInventoryTabs.defaultProps = {\n  activeTab: 0,\n  defaultActiveTab: 0,\n  isDisabled: helpers.UI_DISABLED_TABLE,\n  t: translate,\n  useOnTab,\n  useProduct,\n  useSelector: storeHooks.reactRedux.useSelector\n};\n\nexport { InventoryTabs as default, InventoryTabs, InventoryTab, useOnTab };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs as PfTabs, Tab, TabTitleText, Grid, GridItem } from '@patternfly/react-core';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { helpers } from '../../common';\n\n/**\n * PF tabs with state.\n *\n * @memberof Components\n * @module Tabs\n */\n\n/**\n * FixMe: PF tabs misinterprets \"isElementInView\" when tab title nodes are loaded dynamically\n * It appears the use of isElementInView within PF tabs is trying to be predicative in using\n * \"getBoundingClientRect\" but produces questionable results in scenarios where content is\n * async created. isElementInView assumes some form of the content will always be there\n * instead of scenarios where someone tries to dynamically apply components. It may be good to\n * review using a window.setTimeout(() => handleScrollButtons()) in componentDidMount.\n *\n * Our temporary solution is to simply hide the buttons with a manual set flag affecting the\n * CSS class. This will most likely cause long-term issues.\n */\n/**\n * ToDo: Insights frontend components uses a custom tabs layout, investigate related CSS classes\n * Originally we applied the CSS classes, but they appeared to provide nothing. Since Insights\n * rolled its own tabs we're hesitant to apply said classes without understanding what they provide.\n */\n/**\n * A set of tabs.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass Tabs extends React.Component {\n  state = {\n    updatedActiveTab: null,\n    updatedTabs: null\n  };\n\n  componentDidMount() {\n    const { updatedTabs } = this.state;\n\n    if (updatedTabs === null) {\n      this.setTabData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tabs } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (!_isEqualWith(prevProps.tabs, tabs, customizer)) {\n      this.setTabData();\n    }\n  }\n\n  /**\n   * On tab selected\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {number} params.index\n   */\n  onTab = ({ index }) => {\n    const { onTab } = this.props;\n\n    this.setState(\n      {\n        updatedActiveTab: index\n      },\n      () => onTab({ index })\n    );\n  };\n\n  /**\n   * Convert tab objects into the required PF Tab format.\n   */\n  setTabData() {\n    const { activeTab, defaultActiveTab, tabs } = this.props;\n    let updatedActiveTab = defaultActiveTab;\n\n    const updatedTabs = tabs.map(({ active, content, title }, index) => {\n      updatedActiveTab = active ? index : updatedActiveTab;\n\n      return (\n        <Tab key={title} eventKey={index} title={<TabTitleText>{title}</TabTitleText>}>\n          {content}\n        </Tab>\n      );\n    });\n\n    if (typeof activeTab === 'number') {\n      updatedActiveTab = activeTab;\n    }\n\n    this.setState({\n      updatedActiveTab,\n      updatedTabs\n    });\n  }\n\n  /**\n   * Apply props to tabs.\n   *\n   * @returns {React.ReactNode}\n   */\n  renderTabs() {\n    const { updatedActiveTab, updatedTabs } = this.state;\n    const { className, hasOverflowScroll } = this.props;\n\n    return (\n      <PfTabs\n        className={`curiosity-tabs${(!hasOverflowScroll && '__no-scroll') || ''} ${className || ''}`}\n        activeKey={updatedActiveTab}\n        onSelect={(event, index) => this.onTab({ event, index })}\n        mountOnEnter\n        unmountOnExit\n        inset={{\n          default: 'insetNone',\n          md: 'insetLg'\n        }}\n      >\n        {updatedTabs}\n      </PfTabs>\n    );\n  }\n\n  /**\n   * Render tabs.\n   *\n   * @returns {React.ReactNode}\n   */\n  render() {\n    return (\n      <Grid className=\"curiosity-tabs-container\">\n        <GridItem span={12}>{this.renderTabs()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.propTypes = {\n  activeTab: PropTypes.number,\n  className: PropTypes.string,\n  defaultActiveTab: PropTypes.number,\n  hasOverflowScroll: PropTypes.bool,\n  onTab: PropTypes.func,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      active: PropTypes.bool,\n      content: PropTypes.node.isRequired,\n      title: PropTypes.node.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.defaultProps = {\n  activeTab: null,\n  className: '',\n  defaultActiveTab: 0,\n  hasOverflowScroll: false,\n  onTab: helpers.noop,\n  tabs: []\n};\n\nexport { Tabs as default, Tabs };\n"],"names":["InventoryTab","_ref","active","children","title","propTypes","PropTypes","defaultProps","useOnTab","arguments","length","undefined","_ref$useDispatch","useDispatch","useAliasDispatch","storeHooks","_ref$useProduct","useProduct","productId","dispatch","index","type","reduxTypes","tabs","_defineProperty","InventoryTabs","_ref3","activeTab","defaultActiveTab","isDisabled","t","useAliasOnTab","useAliasProduct","useAliasSelector","useSelector","updatedActiveTab","_ref4","_inventory$tabs","inventory","onTab","updatedChildren","React","map","child","_child$props","props","childProps","content","count","Title","headingLevel","className","Tabs","helpers","translate","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","apply","concat","state","updatedTabs","setState","_createClass","key","value","this","setTabData","prevProps","_isEqualWith","valueA","valueB","toString","_this$props","_ref2","Tab","eventKey","TabTitleText","_this2","_this$state","_this$props2","hasOverflowScroll","PfTabs","activeKey","onSelect","event","mountOnEnter","unmountOnExit","inset","default","md","Grid","GridItem","span","renderTabs"],"sourceRoot":""}
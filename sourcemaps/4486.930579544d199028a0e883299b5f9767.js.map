{"version":3,"file":"js/4486.1649860792815.600cc2c9173c8ce500d7.js","mappings":"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","sources":["webpack:///./src/components/inventoryCardSubscriptions/inventoryCardSubscriptions.js","webpack:///./src/components/inventoryCardSubscriptions/inventoryCardSubscriptionsContext.js","webpack:///./src/components/minHeight/minHeight.js","webpack:///./src/components/productView/productViewContext.js","webpack:///./node_modules/fast-shallow-equal/index.js","webpack:///./node_modules/lodash/_baseTrim.js","webpack:///./node_modules/lodash/_trimmedEndIndex.js","webpack:///./node_modules/lodash/debounce.js","webpack:///./node_modules/lodash/now.js","webpack:///./node_modules/lodash/toNumber.js","webpack:///./node_modules/react-use/esm/useShallowCompareEffect.js","webpack:///./node_modules/react-use/esm/useCustomCompareEffect.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  useProductInventorySubscriptionsConfig,\n  useProductInventorySubscriptionsQuery\n} from '../productView/productViewContext';\nimport {\n  useGetSubscriptionsInventory,\n  useOnPageSubscriptions,\n  useOnColumnSortSubscriptions\n} from './inventoryCardSubscriptionsContext';\nimport InventoryCard from '../inventoryCard/inventoryCard';\nimport { helpers } from '../../common';\n\n/**\n * A subscriptions' system inventory component.\n *\n * @param {object} props\n * @param {boolean} props.isDisabled\n * @param {Function} props.useGetInventory\n * @param {Function} props.useOnPage\n * @param {Function} props.useOnColumnSort\n * @param {Function} props.useProductInventoryConfig\n * @param {Function} props.useProductInventoryQuery\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n * @returns {Node}\n */\nconst InventoryCardSubscriptions = ({ ...props }) => <InventoryCard cardActions={null} {...props} />;\n\n/**\n * Prop types.\n *\n * @type {{useOnPage: Function, isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function,\n *     useOnColumnSort: Function, useProductInventoryQuery: Function}}\n */\nInventoryCardSubscriptions.propTypes = {\n  isDisabled: PropTypes.bool,\n  useGetInventory: PropTypes.func,\n  useOnPage: PropTypes.func,\n  useOnColumnSort: PropTypes.func,\n  useProductInventoryConfig: PropTypes.func,\n  useProductInventoryQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useOnPage: Function, isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function,\n *     useOnColumnSort: Function, useProductInventoryQuery: Function}}\n */\nInventoryCardSubscriptions.defaultProps = {\n  isDisabled: helpers.UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  useGetInventory: useGetSubscriptionsInventory,\n  useOnPage: useOnPageSubscriptions,\n  useOnColumnSort: useOnColumnSortSubscriptions,\n  useProductInventoryConfig: useProductInventorySubscriptionsConfig,\n  useProductInventoryQuery: useProductInventorySubscriptionsQuery\n};\n\nexport { InventoryCardSubscriptions as default, InventoryCardSubscriptions };\n","import { useShallowCompareEffect } from 'react-use';\nimport _camelCase from 'lodash/camelCase';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventorySubscriptionsQuery } from '../productView/productViewContext';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\n\n/**\n * Combined Redux RHSM Actions, getSubscriptionsInventory, and inventory selector response.\n *\n * @param {object} options\n * @param {boolean} options.isDisabled\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsResponse\n * @returns {Function}\n */\nconst useGetSubscriptionsInventory = ({\n  isDisabled = false,\n  getInventory = reduxActions.rhsm.getSubscriptionsInventory,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct,\n  useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventorySubscriptionsQuery,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const query = useAliasProductInventoryQuery();\n  const dispatch = useAliasDispatch();\n  const { error, cancelled, fulfilled, pending, data } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.subscriptionsInventory?.[productId]\n  );\n\n  useShallowCompareEffect(() => {\n    if (!isDisabled) {\n      getInventory(productId, query)(dispatch);\n    }\n  }, [dispatch, isDisabled, productId, query]);\n\n  return {\n    error,\n    fulfilled,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * An onPage callback for subscriptions inventory.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnPageSubscriptions = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for subscriptions inventory.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   * @returns {void}\n   */\n  return ({ offset, perPage }) => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n};\n\n/**\n * An onColumnSort callback for subscriptions inventory.\n *\n * @param {object} options\n * @param {object} options.sortColumns\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnColumnSortSubscriptions = ({\n  sortColumns = SORT_TYPES,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for subscriptions inventory.\n   *\n   * @event onColumnSort\n   * @param {*} _data\n   * @param {object} params\n   * @param {string} params.direction\n   * @param {string} params.id\n   * @returns {void}\n   */\n  return (_data, { direction, id }) => {\n    const updatedSortColumn = Object.values(sortColumns).find(value => value === id || _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n};\n\nconst context = {\n  useGetSubscriptionsInventory,\n  useOnPageSubscriptions,\n  useOnColumnSortSubscriptions\n};\n\nexport {\n  context as default,\n  context,\n  useGetSubscriptionsInventory,\n  useOnPageSubscriptions,\n  useOnColumnSortSubscriptions\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React, { useCallback, useContext } from 'react';\nimport { reduxHelpers } from '../../redux/common';\nimport { storeHooks } from '../../redux/hooks';\nimport { RHSM_API_QUERY_TYPES, rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Route context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst ProductViewContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated product view context.\n *\n * @returns {React.Context<{}>}\n */\nconst useProductViewContext = () => useContext(ProductViewContext);\n\n/**\n * Return a query object from initial product config and Redux store.\n *\n * @param {string} queryType An identifier used to pull from both config and Redux, they should named the same.\n * @param {object} options\n * @param {string} options.overrideId A custom identifier, used for scenarios like the Guest inventory IDs\n * @param {object} options.useProductViewContext\n * @returns {object}\n */\nconst useProductQueryFactory = (\n  queryType,\n  { overrideId, useProductViewContext: useAliasProductViewContext = useProductViewContext } = {}\n) => {\n  const { [queryType]: initialQuery, productId, viewId } = useAliasProductViewContext();\n  const queryOverride = storeHooks.reactRedux.useSelector(({ view }) => view?.[queryType]?.[overrideId], undefined);\n  const queryProduct = storeHooks.reactRedux.useSelector(({ view }) => view?.[queryType]?.[productId], undefined);\n  const queryView = storeHooks.reactRedux.useSelector(({ view }) => view?.[queryType]?.[viewId], undefined);\n\n  return {\n    ...initialQuery,\n    ...queryOverride,\n    ...queryProduct,\n    ...queryView\n  };\n};\n\n/**\n * Return a base product query\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductQuery = ({ queryType = 'query', options } = {}) => useProductQueryFactory(queryType, options);\n\n/**\n * Return the graph query based off of tally and capacity.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductGraphTallyQuery = ({\n  queryType = 'graphTallyQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return the inventory query for guests. Use fallback/defaults for guests offset, limit.\n *\n * @param {object} options\n * @param {number} options.defaultLimit\n * @param {number} options.defaultOffset\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryGuestsQuery = ({\n  defaultLimit = 100,\n  defaultOffset = 0,\n  queryType = 'inventoryGuestsQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      [RHSM_API_QUERY_SET_TYPES.LIMIT]: defaultLimit,\n      [RHSM_API_QUERY_SET_TYPES.OFFSET]: defaultOffset,\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for hosts.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryHostsQuery = ({\n  queryType = 'inventoryHostsQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for subscriptions.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventorySubscriptionsQuery = ({\n  queryType = 'inventorySubscriptionsQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Get a filtered product configuration context.\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductViewContext\n * @returns {object}\n */\nconst useProductContext = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductViewContext: useAliasProductViewContext = useProductViewContext\n} = {}) => {\n  const { [RHSM_API_QUERY_TYPES.UOM]: uomFilter } = useAliasProductQuery();\n  const {\n    initialGraphFilters = [],\n    initialInventoryFilters = [],\n    initialSubscriptionsInventoryFilters = [],\n    productContextFilterUom,\n    ...config\n  } = useAliasProductViewContext();\n\n  const applyUomFilter = useCallback(() => {\n    if (productContextFilterUom === true) {\n      const filterFilters = ({ id, isOptional }) => {\n        if (!isOptional) {\n          return true;\n        }\n        return new RegExp(uomFilter, 'i').test(id);\n      };\n\n      return {\n        ...config,\n        initialGraphFilters: initialGraphFilters.filter(filterFilters),\n        initialInventoryFilters: initialInventoryFilters.filter(filterFilters),\n        initialSubscriptionsInventoryFilters: initialSubscriptionsInventoryFilters.filter(filterFilters)\n      };\n    }\n\n    return {\n      ...config,\n      initialGraphFilters,\n      initialInventoryFilters,\n      initialSubscriptionsInventoryFilters\n    };\n  }, [\n    config,\n    initialGraphFilters,\n    initialInventoryFilters,\n    initialSubscriptionsInventoryFilters,\n    productContextFilterUom,\n    uomFilter\n  ]);\n\n  return applyUomFilter();\n};\n\n/**\n * Return product identifiers.\n *\n * @param {object} options\n * @param {Function} options.useProductViewContext\n * @returns {{productLabel: string, viewId: string, productId: string, productGroup: string}}\n */\nconst useProduct = ({ useProductViewContext: useAliasProductViewContext = useProductViewContext } = {}) => {\n  const { productGroup, productId, productLabel, viewId } = useAliasProductViewContext();\n  return {\n    productGroup,\n    productId,\n    productLabel,\n    viewId\n  };\n};\n\n/**\n * Return graph configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductGraphConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialGraphFilters, initialGraphSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGraphFilters,\n    settings: initialGraphSettings\n  };\n};\n\n/**\n * Return guests inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryGuestsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { inventoryGuestsQuery = {}, initialGuestsFilters, initialGuestsSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGuestsFilters,\n    initialQuery: inventoryGuestsQuery,\n    settings: initialGuestsSettings\n  };\n};\n\n/**\n * Return hosts inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryHostsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialInventoryFilters, initialInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialInventoryFilters,\n    settings: initialInventorySettings\n  };\n};\n\n/**\n * Return subscriptions inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventorySubscriptionsConfig = ({\n  useProductContext: useAliasProductContext = useProductContext\n} = {}) => {\n  const { initialSubscriptionsInventoryFilters, initialSubscriptionsInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialSubscriptionsInventoryFilters,\n    settings: initialSubscriptionsInventorySettings\n  };\n};\n\n/**\n * Return primary toolbar configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductToolbarConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialToolbarFilters, initialToolbarSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialToolbarFilters,\n    settings: initialToolbarSettings\n  };\n};\n\nconst context = {\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useQuery: useProductQuery,\n  useQueryFactory: useProductQueryFactory,\n  useGraphTallyQuery: useProductGraphTallyQuery,\n  useInventoryGuestsQuery: useProductInventoryGuestsQuery,\n  useInventoryHostsQuery: useProductInventoryHostsQuery,\n  useInventorySubscriptionsQuery: useProductInventorySubscriptionsQuery,\n  useProduct,\n  useGraphConfig: useProductGraphConfig,\n  useInventoryGuestsConfig: useProductInventoryGuestsConfig,\n  useInventoryHostsConfig: useProductInventoryHostsConfig,\n  useInventorySubscriptionsConfig: useProductInventorySubscriptionsConfig,\n  useToolbarConfig: useProductToolbarConfig\n};\n\nexport {\n  context as default,\n  context,\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useProductQuery,\n  useProductQueryFactory,\n  useProductGraphTallyQuery,\n  useProductInventoryGuestsQuery,\n  useProductInventoryHostsQuery,\n  useProductInventorySubscriptionsQuery,\n  useProduct,\n  useProductGraphConfig,\n  useProductInventoryGuestsConfig,\n  useProductInventoryHostsConfig,\n  useProductInventorySubscriptionsConfig,\n  useProductToolbarConfig\n};\n","var keyList = Object.keys;\n\nexports.equal = function equal (a, b) {\n  if (a === b) return true;\n  if (!(a instanceof Object) || !(b instanceof Object)) return false;\n\n  var keys = keyList(a);\n  var length = keys.length;\n\n  for (var i = 0; i < length; i++)\n    if (!(keys[i] in b)) return false;\n\n  for (var i = 0; i < length; i++)\n    if (a[keys[i]] !== b[keys[i]]) return false;\n\n  return length === keyList(b).length;\n};\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","import { equal as isShallowEqual } from 'fast-shallow-equal';\nimport useCustomCompareEffect from './useCustomCompareEffect';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar shallowEqualDepsList = function (prevDeps, nextDeps) {\n    return prevDeps.every(function (dep, index) { return isShallowEqual(dep, nextDeps[index]); });\n};\nvar useShallowCompareEffect = function (effect, deps) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useShallowCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useShallowCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n    }\n    useCustomCompareEffect(effect, deps, shallowEqualDepsList);\n};\nexport default useShallowCompareEffect;\n","import { useEffect, useRef } from 'react';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar useCustomCompareEffect = function (effect, deps, depsEqual) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useCustomCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useCustomCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n        if (typeof depsEqual !== 'function') {\n            console.warn('`useCustomCompareEffect` should be used with depsEqual callback for comparing deps list');\n        }\n    }\n    var ref = useRef(undefined);\n    if (!ref.current || !depsEqual(deps, ref.current)) {\n        ref.current = deps;\n    }\n    useEffect(effect, ref.current);\n};\nexport default useCustomCompareEffect;\n"],"names":["InventoryCardSubscriptions","props","cardActions","defaultProps","isDisabled","helpers","useGetInventory","useGetSubscriptionsInventory","useOnPage","useOnPageSubscriptions","useOnColumnSort","useOnColumnSortSubscriptions","useProductInventoryConfig","useProductInventorySubscriptionsConfig","useProductInventoryQuery","useProductInventorySubscriptionsQuery","getInventory","reduxActions","useDispatch","useAliasDispatch","storeHooks","useProduct","useAliasProduct","useAliasProductInventoryQuery","useSelectorsResponse","useAliasSelectorsResponse","productId","query","dispatch","inventory","subscriptionsInventory","error","cancelled","fulfilled","pending","data","useShallowCompareEffect","length","offset","perPage","type","reduxTypes","RHSM_API_QUERY_SET_TYPES","viewId","sortColumns","SORT_TYPES","_data","updatedDirection","direction","id","updatedSortColumn","Object","values","find","value","_camelCase","SortByDirection","SORT_DIRECTION_TYPES","console","warn","context","MinHeight","containerRef","React","innerContainerRef","updatedContainerWidth","resizeObserver","onResizeContainer","updateOnResize","clientWidth","current","setMinHeight","this","window","setTimeout","setResizeObserver","updateOnContent","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","style","addEventListener","removeEventListener","children","className","ref","DEFAULT_CONTEXT","ProductViewContext","useProductViewContext","useContext","useProductQueryFactory","queryType","overrideId","useAliasProductViewContext","initialQuery","queryOverride","view","undefined","queryProduct","queryView","useProductQuery","options","useProductGraphTallyQuery","schemaCheck","rhsmApiTypes","reduxHelpers","useProductInventoryGuestsQuery","defaultLimit","defaultOffset","useProductInventoryHostsQuery","useProductContext","useAliasProductQuery","uomFilter","RHSM_API_QUERY_TYPES","initialGraphFilters","initialInventoryFilters","initialSubscriptionsInventoryFilters","productContextFilterUom","config","applyUomFilter","useCallback","filterFilters","isOptional","RegExp","test","filter","productGroup","productLabel","useProductGraphConfig","useAliasProductContext","initialGraphSettings","filters","settings","useProductInventoryGuestsConfig","inventoryGuestsQuery","initialGuestsFilters","initialGuestsSettings","useProductInventoryHostsConfig","initialInventorySettings","initialSubscriptionsInventorySettings","useProductToolbarConfig","initialToolbarFilters","initialToolbarSettings","useQuery","useQueryFactory","useGraphTallyQuery","useInventoryGuestsQuery","useInventoryHostsQuery","useInventorySubscriptionsQuery","useGraphConfig","useInventoryGuestsConfig","useInventoryHostsConfig","useInventorySubscriptionsConfig","useToolbarConfig","keyList","keys","exports","a","b","i","trimmedEndIndex","reTrimStart","module","string","slice","replace","reWhitespace","index","charAt","isObject","now","toNumber","nativeMax","Math","max","nativeMin","min","func","wait","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","clearTimeout","cancel","flush","root","Date","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","shallowEqualDepsList","prevDeps","nextDeps","every","dep","effect","deps","depsEqual","useRef","useEffect"],"sourceRoot":""}
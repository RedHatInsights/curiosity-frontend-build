{"version":3,"file":"js/2902.1642719022818.0c25cfefda5424e92bdd.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/TableToolbar/TableToolbar.js","webpack:///./src/components/form/formHelpers.js","webpack:///./src/components/form/textInput.js","webpack:///./src/components/inventoryList/inventoryList.deprecated.js","webpack:///./src/components/pagination/pagination.js","webpack:///./src/components/pagination/paginationHelpers.js","webpack:///./src/components/toolbar/toolbarFieldDisplayName.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React, { Fragment } from 'react';\nimport { Toolbar } from \"@patternfly/react-core/dist/esm/components/Toolbar/Toolbar.js\";\nimport { useOUIAId } from '@patternfly/react-core/';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\nimport \"../../TableToolbar/./TableToolbar.css\";\n\nfunction generateCount(results) {\n  if (results > 1 || results < 1) {\n    return \"\".concat(results, \" Results\");\n  } else {\n    return \"\".concat(results, \" Result\");\n  }\n}\n\nvar TableToolbar = function TableToolbar(_ref) {\n  var isFooter = _ref.isFooter,\n      results = _ref.results,\n      className = _ref.className,\n      selected = _ref.selected,\n      children = _ref.children,\n      ouiaId = _ref.ouiaId,\n      _ref$ouiaSafe = _ref.ouiaSafe,\n      ouiaSafe = _ref$ouiaSafe === void 0 ? true : _ref$ouiaSafe,\n      props = _objectWithoutProperties(_ref, [\"isFooter\", \"results\", \"className\", \"selected\", \"children\", \"ouiaId\", \"ouiaSafe\"]);\n\n  var tableToolbarClasses = classNames('ins-c-table__toolbar', _defineProperty({}, \"ins-m-footer\", isFooter), className);\n  var ouiaComponentType = 'RHI/TableToolbar';\n  var ouiaFinalId = useOUIAId(ouiaComponentType, ouiaId, ouiaSafe);\n  return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(Toolbar, _extends({\n    className: tableToolbarClasses,\n    \"data-ouia-component-type\": ouiaComponentType,\n    \"data-ouia-component-id\": ouiaFinalId,\n    \"data-ouia-safe\": ouiaSafe\n  }, props), children), (results >= 0 || selected >= 0) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ins-c-table__toolbar-results\"\n  }, results >= 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ins-c-table__toolbar-results-count\"\n  }, \" \", generateCount(results), \" \"), selected >= 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ins-c-table__toolbar-results-selected\"\n  }, \" \", selected, \" Selected \")));\n};\n\nexport default TableToolbar;\nTableToolbar.propTypes = {\n  isFooter: propTypes.bool,\n  results: propTypes.number,\n  children: propTypes.any,\n  className: propTypes.string,\n  selected: propTypes.number,\n  ouiaId: propTypes.string,\n  ouiaSafe: propTypes.bool\n};\nTableToolbar.defaultProps = {\n  isFooter: false\n};","import { helpers } from '../../common/helpers';\n\n/**\n * Create a consistent mock event object.\n *\n * @param {object} event\n * @param {boolean} persistEvent\n * @returns {{keyCode, currentTarget, name, id: *, persist: Function, value, target}}\n */\nconst createMockEvent = (event, persistEvent = false) => {\n  const { checked, currentTarget = {}, keyCode, persist = helpers.noop, target = {} } = { ...event };\n  if (persistEvent) {\n    persist();\n  }\n\n  return {\n    checked,\n    currentTarget,\n    keyCode,\n    id: currentTarget.id || currentTarget.name,\n    name: currentTarget.name,\n    persist,\n    value: currentTarget.value,\n    target\n  };\n};\n\n/**\n * Confirm a string has minimum length.\n *\n * @param {string} value\n * @param {number} characters\n * @returns {boolean}\n */\nconst doesNotHaveMinimumCharacters = (value, characters = 1) =>\n  (typeof value === 'string' && value.length < characters) || typeof value !== 'string';\n\nconst formHelpers = {\n  createMockEvent,\n  doesNotHaveMinimumCharacters\n};\n\nexport { formHelpers as default, formHelpers, createMockEvent, doesNotHaveMinimumCharacters };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput as PfTextInput } from '@patternfly/react-core';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly TextInput. Provides restructured event data,\n * and an onClear event for the search type.\n *\n * @augments React.Component\n * @fires onKeyUp\n * @fires onMouseUp\n * @fires onChange\n */\nclass TextInput extends React.Component {\n  state = {\n    updatedValue: null\n  };\n\n  /**\n   * onKeyUp event, provide additional functionality for onClear event.\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  onKeyUp = event => {\n    const { onClear, onKeyUp, type } = this.props;\n    const { currentTarget, keyCode } = event;\n    const clonedEvent = { ...event };\n\n    onKeyUp(createMockEvent(event, true));\n\n    if (keyCode === 27) {\n      if (type === 'search' && currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      } else {\n        this.setState({ updatedValue: '' }, () => {\n          onClear(\n            createMockEvent({ ...clonedEvent, ...{ currentTarget: { ...clonedEvent.currentTarget, value: '' } } })\n          );\n        });\n      }\n    }\n  };\n\n  /**\n   * onMouseUp event, provide additional functionality for onClear event.\n   *\n   * @event onMouseUp\n   * @param {object} event\n   */\n  onMouseUp = event => {\n    const { onClear, onMouseUp, type } = this.props;\n    const { currentTarget } = event;\n    const clonedEvent = { ...event };\n\n    onMouseUp(createMockEvent(event, true));\n\n    if (type !== 'search' || currentTarget.value === '') {\n      return;\n    }\n\n    setTimeout(() => {\n      if (currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      }\n    });\n  };\n\n  /**\n   * onChange event, provide restructured event.\n   *\n   * @param {string} value\n   * @param {object} event\n   */\n  onChange = (value, event) => {\n    const { onChange } = this.props;\n    const clonedEvent = { ...event };\n\n    this.setState({ updatedValue: value }, () => {\n      onChange(createMockEvent(clonedEvent));\n    });\n  };\n\n  /**\n   * Render a text input.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedValue } = this.state;\n    const {\n      className,\n      id,\n      isDisabled,\n      name,\n      onChange,\n      onClear,\n      onKeyUp,\n      onMouseUp,\n      isReadOnly,\n      type,\n      value,\n      ...props\n    } = this.props;\n    const updatedName = name || helpers.generateId();\n    const updatedId = id || updatedName;\n\n    return (\n      <PfTextInput\n        id={updatedId}\n        name={updatedName}\n        className={`curiosity-text-input ${className}`}\n        isDisabled={isDisabled || false}\n        onChange={this.onChange}\n        onKeyUp={this.onKeyUp}\n        onMouseUp={this.onMouseUp}\n        isReadOnly={isReadOnly || false}\n        type={type}\n        value={updatedValue ?? value ?? ''}\n        {...props}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onClear: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.defaultProps = {\n  className: '',\n  id: null,\n  isDisabled: false,\n  isReadOnly: false,\n  name: null,\n  onChange: helpers.noop,\n  onClear: helpers.noop,\n  onKeyUp: helpers.noop,\n  onMouseUp: helpers.noop,\n  type: 'text',\n  value: ''\n};\n\nexport { TextInput as default, TextInput };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader, CardHeaderMain } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport GuestsList from '../guestsList/guestsList';\nimport { inventoryListHelpers } from './inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport { ToolbarFieldDisplayName } from '../toolbar/toolbarFieldDisplayName';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A hosts system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n */\nclass InventoryList extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * On paging and on perPage events.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   */\n  onPage = ({ offset, perPage }) => {\n    const { productId } = this.props;\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getHostsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getHostsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterGuestsData, filterInventoryData, listData, query, session, settings } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      const guestsId = cellData?.subscriptionManagerId;\n      let hasGuests = cellData?.numberOfGuests > 0 && guestsId;\n\n      // Apply hasGuests callback, return boolean\n      if (typeof settings?.hasGuests === 'function') {\n        hasGuests = settings.hasGuests({ ...cellData }, { ...session });\n      }\n\n      return {\n        cells,\n        expandedContent:\n          (hasGuests && (\n            <GuestsList\n              key={guestsId}\n              filterGuestsData={filterGuestsData}\n              numberOfGuests={cellData?.numberOfGuests}\n              id={guestsId}\n              query={query}\n            />\n          )) ||\n          undefined\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      query,\n      t,\n      viewId\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedOffset = query[RHSM_API_QUERY_TYPES.OFFSET];\n    const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n            <CardHeaderMain>\n              <ToolbarFieldDisplayName viewId={viewId} />\n            </CardHeaderMain>\n            <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter\n            className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n            aria-hidden={error || !itemCount || false}\n          >\n            <TableToolbar isFooter>\n              <Pagination\n                dropDirection=\"up\"\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{settings:object, productId: string, listData: Array, session: object, pending: boolean,\n *     query: object, fulfilled: boolean, getHostsInventory: Function, error: boolean,\n *     itemCount: number, viewId: string, t: Function, filterInventoryData: Array, filterGuestsData: Array,\n *     perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterGuestsData: PropTypes.array,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  settings: PropTypes.shape({\n    hasGuests: PropTypes.func\n  }),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{settings: object, listData: Array, session: object, pending: boolean, fulfilled: boolean,\n *     getHostsInventory: Function, error: boolean, itemCount: number, viewId: string, t: translate,\n *     filterInventoryData: Array, filterGuestsData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterGuestsData: [],\n  filterInventoryData: [],\n  getHostsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_HOSTS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  settings: {},\n  t: translate,\n  viewId: 'inventoryList'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventory: (id, query) => dispatch(reduxActions.rhsm.getHostsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.inventoryList.makeInventoryList();\n\nconst ConnectedInventoryList = connect(makeMapStateToProps, mapDispatchToProps)(InventoryList);\n\nexport { ConnectedInventoryList as default, ConnectedInventoryList, InventoryList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n","/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup } from '@patternfly/react-core';\nimport _debounce from 'lodash/debounce';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport { TextInput } from '../form/textInput';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: evaluate the debounce milliseconds, currently based off platforms default 800 ms\n */\n/**\n * Display a display name input field for search.\n *\n * @fires onSubmit\n * @fires onClear\n * @fires onKeyUp\n * @param {object} props\n * @param {Function} props.t\n * @param {Function} props.useDispatch\n * @param {Function} props.useProduct\n * @param {Function} props.useProductInventoryHostsQuery\n * @returns {Node}\n */\nconst ToolbarFieldDisplayName = ({\n  t,\n  useDispatch: useAliasDispatch,\n  useProduct: useAliasProduct,\n  useProductInventoryHostsQuery: useAliasProductInventoryHostsQuery\n}) => {\n  const { viewId } = useAliasProduct();\n  const { [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: currentValue } = useAliasProductInventoryHostsQuery();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On submit, dispatch type.\n   *\n   * @event onSubmit\n   * @param {string} submitValue\n   * @returns {void}\n   */\n  const onSubmit = submitValue =>\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: submitValue?.trim() || null\n      }\n    ]);\n\n  /**\n   * On clear, dispatch type.\n   *\n   * @event onClear\n   * @returns {void}\n   */\n  const onClear = () => {\n    if (currentValue === '' || !currentValue) {\n      return;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: null\n      }\n    ]);\n  };\n\n  /**\n   * Set up submit debounce event to allow for bypass.\n   */\n  const debounced = _debounce(onSubmit, 700);\n\n  /**\n   * On enter submit value, on type submit value, and on esc ignore (clear value at component level).\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case 13:\n        onSubmit(event.value);\n        break;\n      case 27:\n        break;\n      default:\n        debounced(event.value);\n        break;\n    }\n  };\n\n  return (\n    <InputGroup>\n      <TextInput\n        aria-label={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        className=\"curiosity-input__display-name\"\n        iconVariant=\"search\"\n        maxLength={255}\n        onClear={onClear}\n        onKeyUp={onKeyUp}\n        value={currentValue}\n        placeholder={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        data-test=\"toolbarFieldDisplayName\"\n      />\n    </InputGroup>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.propTypes = {\n  t: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductInventoryHostsQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.defaultProps = {\n  t: translate,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useProduct,\n  useProductInventoryHostsQuery\n};\n\nexport { ToolbarFieldDisplayName as default, ToolbarFieldDisplayName };\n"],"names":["TableToolbar","_ref","isFooter","results","className","selected","children","ouiaId","_ref$ouiaSafe","ouiaSafe","props","tableToolbarClasses","ouiaComponentType","ouiaFinalId","Fragment","concat","generateCount","propTypes","defaultProps","createMockEvent","event","persistEvent","checked","currentTarget","keyCode","persist","helpers","target","id","name","value","doesNotHaveMinimumCharacters","characters","length","formHelpers","TextInput","state","updatedValue","onKeyUp","onClear","type","clonedEvent","setState","onMouseUp","setTimeout","onChange","this","isDisabled","isReadOnly","updatedName","updatedId","React","InventoryList","onColumnSort","data","updatedDirection","direction","productId","updatedSortColumn","Object","values","SORT_TYPES","find","_camelCase","SortByDirection","SORT_DIRECTION_TYPES","store","reduxTypes","RHSM_API_QUERY_TYPES","viewId","console","warn","onPage","offset","perPage","onUpdateInventoryData","getHostsInventory","query","prevProps","_isEqual","filterGuestsData","filterInventoryData","listData","session","settings","updatedColumnHeaders","updatedRows","map","cellData","inventoryListHelpers","filters","onSort","columnHeaders","cells","guestsId","subscriptionManagerId","hasGuests","numberOfGuests","expandedContent","key","undefined","borders","variant","TableVariant","rows","error","fulfilled","itemCount","pending","perPageDefault","t","Card","CardBody","Bullseye","context","updatedPerPage","updatedOffset","isLastPage","paginationHelpers","minHeightContentRefreshKey","MinHeight","updateOnContent","CardHeader","CardHeaderMain","ToolbarFieldDisplayName","CardActions","isCompact","onPerPage","Loader","tableProps","colCount","keys","colWidth","cellWidth","rowCount","renderTable","CardFooter","dropDirection","translate","makeMapStateToProps","reduxSelectors","ConnectedInventoryList","connect","dispatch","reduxActions","Pagination","onSetPage","page","limit","onPerPageSelect","calculateOffsetFromPage","calculatePageFromOffset","Math","ceil","useAliasDispatch","useDispatch","useAliasProduct","useProduct","useAliasProductInventoryHostsQuery","useProductInventoryHostsQuery","currentValue","onSubmit","submitValue","trim","debounced","_debounce","InputGroup","iconVariant","maxLength","placeholder","storeHooks"],"sourceRoot":""}
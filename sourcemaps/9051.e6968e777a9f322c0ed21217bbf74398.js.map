{"version":3,"file":"js/9051.44dc8002ef0f0ed752c2.js","mappings":"uXAeMA,E,gMAQJC,MAAQ,YAAe,IAAZC,EAAY,EAAZA,MACDC,EAAc,EAAKC,MAAnBD,UAERE,EAAAA,EAAAA,SAAe,CACbC,KAAMC,EAAAA,GAAAA,UAAAA,kBACNC,MAAM,UACHL,EAAYD,M,uCAWnB,WAAS,MAC0DO,KAAKL,MAA9DM,EADD,EACCA,UAAWC,EADZ,EACYA,SAAUC,EADtB,EACsBA,iBAAkBC,EADxC,EACwCA,WAAYC,EADpD,EACoDA,EAE3D,GAAID,EACF,OAAO,KAGT,IAAME,EAAkBC,IAAAA,SAAAA,QAAuBL,GAAUM,KAAI,SAACC,EAAOhB,GAAU,MACtDgB,EAAfd,MAAAA,OADqE,MAC7D,GAD6D,EAG7E,MAAO,CACLe,OAAQf,EAAMe,SAAU,EACxBC,QAAShB,EAAMO,UAAYO,EAC3BG,MAAOjB,EAAMiB,OAASP,EAAE,oCAAqC,CAAEQ,MAAOpB,QAI1E,OACE,kBAAC,aAAD,KACE,kBAAC,EAAAqB,MAAD,CAAOC,aAAa,KAAKC,UAAU,WAChCX,EAAE,iCAAkC,CAAEQ,MAAOP,EAAgBW,UAEhE,kBAAC,EAAAC,KAAD,CAAMjB,UAAWA,EAAWE,iBAAkBA,EAAkBX,MAAOQ,KAAKR,MAAOO,KAAMO,S,GA/CrEC,IAAAA,WAyE5BhB,EAAc4B,aAAe,CAC3BlB,UAAW,EACXE,iBAAkB,EAClBC,WAAYgB,EAAAA,GAAAA,kBACZf,EAAGgB,EAAAA,WAQL,IAEMC,GAAyBC,EAAAA,EAAAA,KAFP,SAAC,EAAD,SAAGC,EAAH,EAAGA,UAAe9B,EAAlB,EAAkBA,UAAlB,MAAmC,CAAEO,UAAS,UAAEuB,EAAUzB,YAAZ,aAAE,EAAiBL,MAE1D6B,CAAyBhC","sources":["webpack:///./src/components/inventoryTabs/inventoryTabs.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { Tabs } from '../tabs/tabs';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\nimport { InventoryTab } from './inventoryTab';\n\n/**\n * A system inventory tabs component.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass InventoryTabs extends React.Component {\n  /**\n   * On tab update state.\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {string} params.index tab index\n   */\n  onTab = ({ index }) => {\n    const { productId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.inventory.SET_INVENTORY_TAB,\n      tabs: {\n        [productId]: index\n      }\n    });\n  };\n\n  /**\n   * Render inventory tabs using Inventory tab passed props only. A parallel outcome can be\n   * achieved by passing an array of objects through a prop.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { activeTab, children, defaultActiveTab, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const updatedChildren = React.Children.toArray(children).map((child, index) => {\n      const { props = {} } = child;\n\n      return {\n        active: props.active || false,\n        content: props.children || child,\n        title: props.title || t('curiosity-inventory.tabSubHeading', { count: index })\n      };\n    });\n\n    return (\n      <React.Fragment>\n        <Title headingLevel=\"h2\" className=\"sr-only\">\n          {t('curiosity-inventory.tabHeading', { count: updatedChildren.length })}\n        </Title>\n        <Tabs activeTab={activeTab} defaultActiveTab={defaultActiveTab} onTab={this.onTab} tabs={updatedChildren} />\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, t: Function, children: Node, defaultActiveTab: number, isDisabled: boolean,\n *     activeTab: number}}\n */\nInventoryTabs.propTypes = {\n  activeTab: PropTypes.number,\n  children: PropTypes.node.isRequired,\n  defaultActiveTab: PropTypes.number,\n  isDisabled: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, defaultActiveTab: number, isDisabled: boolean, activeTab: number}}\n */\nInventoryTabs.defaultProps = {\n  activeTab: 0,\n  defaultActiveTab: 0,\n  isDisabled: helpers.UI_DISABLED_TABLE,\n  t: translate\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst mapStateToProps = ({ inventory }, { productId }) => ({ activeTab: inventory.tabs?.[productId] });\n\nconst ConnectedInventoryTabs = connect(mapStateToProps)(InventoryTabs);\n\nexport { ConnectedInventoryTabs as default, ConnectedInventoryTabs, InventoryTabs, InventoryTab };\n"],"names":["InventoryTabs","onTab","index","productId","props","store","type","reduxTypes","tabs","this","activeTab","children","defaultActiveTab","isDisabled","t","updatedChildren","React","map","child","active","content","title","count","Title","headingLevel","className","length","Tabs","defaultProps","helpers","translate","ConnectedInventoryTabs","connect","inventory"],"sourceRoot":""}
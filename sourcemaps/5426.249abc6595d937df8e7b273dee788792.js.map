{"version":3,"file":"js/5426.8ea5d54f493eb63ac096.js","mappings":"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,EAAM,CACT,qCAAsC,CACrC,OAED,4CAA6C,CAC5C,OAED,qCAAsC,CACrC,MACA,KACA,MAED,4CAA6C,CAC5C,MACA,KACA,MAED,mBAAoB,CACnB,OAED,4BAA6B,CAC5B,OAED,0BAA2B,CAC1B,OAED,2BAA4B,CAC3B,OAED,0BAA2B,CAC1B,OAED,uBAAwB,CACvB,MAED,yBAA0B,CACzB,OAED,0BAA2B,CAC1B,OAED,qBAAsB,CACrB,MACA,KACA,KACA,KACA,MAED,wBAAyB,CACxB,OAED,sBAAuB,CACtB,MACA,KAED,mBAAoB,CACnB,OAED,sBAAuB,CACtB,MACA,MAED,2BAA4B,CAC3B,MACA,KACA,IACA,KACA,MAED,gCAAiC,CAChC,MACA,KACA,IACA,KACA,MAED,sCAAuC,CACtC,MACA,KACA,IACA,MAED,4CAA6C,CAC5C,MACA,KACA,IACA,KAED,uCAAwC,CACvC,MACA,KACA,MAED,kCAAmC,CAClC,MACA,KACA,IACA,MAED,kCAAmC,CAClC,OAED,uCAAwC,CACvC,MACA,KACA,IACA,MAED,iBAAkB,CACjB,OAED,wBAAyB,CACxB,OAED,mCAAoC,CACnC,MACA,KACA,KACA,KACA,MAED,0CAA2C,CAC1C,MACA,KACA,MAED,0CAA2C,CAC1C,MACA,MAED,wCAAyC,CACxC,MACA,KACA,KACA,KACA,KAED,6DAA8D,CAC7D,MACA,KACA,KACA,KACA,MAED,oEAAqE,CACpE,MACA,KACA,MAED,uCAAwC,CACvC,MACA,KACA,MAED,8CAA+C,CAC9C,MACA,KACA,MAED,kCAAmC,CAClC,MACA,KAED,mCAAoC,CACnC,MACA,KACA,MAED,qBAAsB,CACrB,MAED,+BAAgC,CAC/B,OAED,2BAA4B,CAC3B,MACA,KAED,2BAA4B,CAC3B,KAED,8BAA+B,CAC9B,MAED,6BAA8B,CAC7B,OAED,6BAA8B,CAC7B,OAED,+BAAgC,CAC/B,OAED,8BAA+B,CAC9B,OAED,8BAA+B,CAC9B,OAED,6BAA8B,CAC7B,MACA,MAED,oCAAqC,CACpC,MACA,MAED,+BAAgC,CAC/B,MACA,KACA,IACA,KACA,KACA,KACA,MAED,sCAAuC,CACtC,MACA,MAED,sCAAuC,CACtC,MACA,MAED,oBAAqB,CACpB,OAED,qBAAsB,CACrB,OAED,4BAA6B,CAC5B,OAED,4BAA6B,CAC5B,OAED,mBAAoB,CACnB,OAED,wBAAyB,CACxB,OAED,2BAA4B,CAC3B,OAED,iBAAkB,CACjB,MACA,IAED,uBAAwB,CACvB,MACA,KACA,IACA,MAED,8BAA+B,CAC9B,MACA,KACA,IACA,MAED,2CAA4C,CAC3C,MACA,KACA,MAED,oCAAqC,CACpC,MACA,KACA,MAED,uCAAwC,CACvC,MACA,KACA,MAED,uCAAwC,CACvC,KACA,KACA,MAED,wCAAyC,CACxC,MACA,KACA,MAED,yCAA0C,CACzC,MACA,KACA,MAED,0CAA2C,CAC1C,MACA,KACA,KAED,+BAAgC,CAC/B,MACA,KACA,MAED,+BAAgC,CAC/B,MACA,KACA,MAED,iCAAkC,CACjC,MACA,KACA,MAED,mCAAoC,CACnC,MACA,KACA,MAED,uBAAwB,CACvB,OAGF,SAASy/D,EAAoBJ,GAC5B,IAAIE,EAAoBC,EAAEx/D,EAAKq/D,GAC9B,OAAOx+D,QAAQC,UAAU4+D,MAAK,WAC7B,IAAIruC,EAAI,IAAI5uB,MAAM,uBAAyB48D,EAAM,KAEjD,MADAhuC,EAAEyxB,KAAO,mBACHzxB,CACP,IAGD,IAAIsuC,EAAM3/D,EAAIq/D,GAAMp8D,EAAK08D,EAAI,GAC7B,OAAO9+D,QAAQ0+C,IAAIogB,EAAI7+C,MAAM,GAAG9gB,IAAIu/D,EAAoBluC,IAAIquC,MAAK,WAChE,OAAOH,EAAoBt8D,EAC5B,GACD,CACAw8D,EAAoB9lD,KAAO,WAAa,OAAO1Y,OAAO0Y,KAAK3Z,EAAM,EACjEy/D,EAAoBx8D,GAAK,MACzB5F,EAAOC,QAAUmiE,C,wBChVjB,IAAIz/D,EAAM,CACT,kCAAmC,MACnC,kCAAmC,KACnC,gCAAiC,MACjC,qBAAsB,MACtB,oBAAqB,MACrB,qBAAsB,MACtB,sBAAuB,MACvB,oBAAqB,KACrB,yBAA0B,OAI3B,SAASo/D,EAAeC,GACvB,IAAIp8D,EAAKq8D,EAAsBD,GAC/B,OAAOE,EAAoBt8D,EAC5B,CACA,SAASq8D,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEx/D,EAAKq/D,GAAM,CACpC,IAAIhuC,EAAI,IAAI5uB,MAAM,uBAAyB48D,EAAM,KAEjD,MADAhuC,EAAEyxB,KAAO,mBACHzxB,CACP,CACA,OAAOrxB,EAAIq/D,EACZ,CACAD,EAAezlD,KAAO,WACrB,OAAO1Y,OAAO0Y,KAAK3Z,EACpB,EACAo/D,EAAet+D,QAAUw+D,EACzBjiE,EAAOC,QAAU8hE,EACjBA,EAAen8D,GAAK,K","sources":["webpack:///./config/build.empty.js","webpack:///./src/app.js","webpack:///./src/common/helpers.js","webpack:///./src/common/dateHelpers.js","webpack:///./src/common/downloadHelpers.js","webpack:///./src/components/authentication/authentication.js","webpack:///./src/components/authentication/authenticationContext.js","webpack:///./src/components/chart/chart.js","webpack:///./src/hooks/useWindow.js","webpack:///./src/components/chart/chartAxisLabel.js","webpack:///./src/components/chart/chartContext.js","webpack:///./src/components/chart/chartElements.js","webpack:///./src/components/chart/chartHelpers.js","webpack:///./src/components/chart/chartIcon.js","webpack:///./src/components/chart/chartLegend.js","webpack:///./src/components/chart/chartTooltip.js","webpack:///./src/components/form/formHelpers.js","webpack:///./src/components/form/select.js","webpack:///./src/components/graphCard/graphCardHelpers.js","webpack:///./src/components/i18n/i18n.js","webpack:///./src/components/i18n/i18nHelpers.js","webpack:///./src/components/loader/loader.js","webpack:///./src/components/messageView/messageView.js","webpack:///./src/components/optinView/optinView.js","webpack:///./src/components/pageLayout/pageColumns.js","webpack:///./src/components/pageLayout/pageHeader.js","webpack:///./src/components/pageLayout/pageLayout.js","webpack:///./src/components/pageLayout/pageMessages.js","webpack:///./src/components/pageLayout/pageSection.js","webpack:///./src/components/pageLayout/pageToolbar.js","webpack:///./src/components/router/router.js","webpack:///./src/components/router/routerContext.js","webpack:///./src/components/router/routerHelpers.js","webpack:///./src/components/table/table.js","webpack:///./src/components/table/tableEmpty.js","webpack:///./src/components/table/tableSkeleton.js","webpack:///./src/components/tooltip/tooltip.js","webpack:///./src/config/products.js","webpack:///./src/config/routes.js","webpack:///./src/config/product.openshiftContainer.js","webpack:///./src/config/product.openshiftDedicated.js","webpack:///./src/config/product.openshiftMetrics.js","webpack:///./src/config/product.rhacs.js","webpack:///./src/config/product.rhel.js","webpack:///./src/config/product.rhods.js","webpack:///./src/config/product.rhosak.js","webpack:///./src/config/product.rosa.js","webpack:///./src/config/product.satellite.js","webpack:///./src/redux/common/reduxHelpers.js","webpack:///./src/redux/hooks/useReactRedux.js","webpack:///./src/redux/hooks/index.js","webpack:///./src/services/common/helpers.js","webpack:///./src/services/common/serviceConfig.js","webpack:///./src/services/platform/platformSchemas.js","webpack:///./src/services/platform/platformTransformers.js","webpack:///./src/services/platform/platformServices.js","webpack:///./src/redux/actions/platformActions.js","webpack:///./src/services/config.js","webpack:///./src/services/rhsm/rhsmSchemas.js","webpack:///./src/services/rhsm/rhsmTransformers.js","webpack:///./src/services/rhsm/rhsmHelpers.js","webpack:///./src/services/rhsm/rhsmServices.js","webpack:///./src/redux/actions/rhsmActions.js","webpack:///./src/services/user/userServices.js","webpack:///./src/redux/actions/userActions.js","webpack:///./src/redux/actions/index.js","webpack:///./src/redux/reducers/graphReducer.js","webpack:///./src/redux/reducers/inventoryReducer.js","webpack:///./src/redux/reducers/messagesReducer.js","webpack:///./src/redux/reducers/toolbarReducer.js","webpack:///./src/redux/reducers/userReducer.js","webpack:///./src/redux/reducers/viewReducer.js","webpack:///./src/redux/reducers/index.js","webpack:///./src/redux/middleware/index.js","webpack:///./src/redux/middleware/statusMiddleware.js","webpack:///./src/redux/middleware/multiActionMiddleware.js","webpack:///./src/redux/middleware/actionRecordMiddleware.js","webpack:///./src/redux/store.js","webpack:///./src/redux/types/appTypes.js","webpack:///./src/redux/types/graphTypes.js","webpack:///./src/redux/types/inventoryTypes.js","webpack:///./src/redux/types/platformTypes.js","webpack:///./src/redux/types/queryTypes.js","webpack:///./src/redux/types/userTypes.js","webpack:///./src/redux/types/index.js","webpack:///./src/redux/types/messageTypes.js","webpack:///./src/redux/types/toolbarTypes.js","webpack:///./src/redux/types/rhsmTypes.js","webpack:///./src/services/platform/platformConstants.js","webpack:///./src/services/rhsm/rhsmConstants.js","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/components/ lazy ^\\.\\/.*\\.js$ exclude: \\.test\\.js$ namespace object","webpack:///./src/config/ sync nonrecursive product\\.[\\d\\D]+\\.js$/"],"sourcesContent":["// Used as an empty module to save bundle size\nmodule.exports = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMount } from 'react-use';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { reduxActions, storeHooks } from './redux';\nimport { I18n } from './components/i18n/i18n';\nimport { Router } from './components/router';\nimport Authentication from './components/authentication/authentication';\nimport { helpers } from './common';\n\n/**\n * @memberof Base\n * @module App\n */\n\n/**\n * ToDo: Investigate replacing NotificationsPortal\n * NotificationsPortal takes down the entire app when the parent Redux store is unavailable.\n */\n/**\n * Curiosity application start.\n * - Loads locale\n * - Provides authentication\n *\n * @param {object} props\n * @param {Function} props.getLocale\n * @param {Function} props.useDispatch\n * @param {Function} props.useSelector\n * @returns {React.ReactNode}\n */\nconst App = ({ getLocale, useDispatch: useAliasDispatch, useSelector: useAliasSelector }) => {\n  const dispatch = useAliasDispatch();\n  const { value: locale } = useAliasSelector(({ user }) => user?.locale?.data, {});\n  let platformNotifications = null;\n\n  useMount(() => {\n    if (!locale) {\n      dispatch(getLocale());\n    }\n  });\n\n  if (!helpers.UI_DISABLED_NOTIFICATIONS) {\n    platformNotifications = <NotificationsPortal />;\n  }\n\n  return (\n    <I18n locale={locale}>\n      {platformNotifications}\n      <Authentication>\n        <Router />\n      </Authentication>\n    </I18n>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelector: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: reduxActions.user.getLocale,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelector: storeHooks.reactRedux.useSelector\n};\n\nexport { App as default, App };\n","import numbro from 'numbro';\nimport cryptoSha1 from 'crypto-js/sha1';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isPlainObject from 'lodash/isPlainObject';\n\n/**\n * @memberof Helpers\n * @module General\n */\n\n/**\n * Fill for AggregatedError\n *\n * @param {Array|*} errors An array of errors\n * @param {string|*} message\n * @param {object} options\n * @param {string} options.name\n * @returns {Error|window.AggregateError<Error>}\n */\nconst aggregatedError = (errors, message, { name = 'AggregateError' } = {}) => {\n  const { AggregateError, Error } = window;\n  let err;\n\n  if (AggregateError) {\n    err = new AggregateError(errors, message);\n  } else {\n    err = new Error(message);\n    err.name = name;\n    err.errors = (Array.isArray(errors) && errors) || [errors];\n    err.isEmulated = true;\n  }\n  return err;\n};\n\n/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n/**\n * Check if \"is a Date\"\n *\n * @param {Date|*} date\n * @returns {boolean}\n */\nconst isDate = date => Object.prototype.toString.call(date) === '[object Date]';\n\n/**\n * Check if \"is a Promise\", \"Promise like\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => /^\\[object (Promise|Async|AsyncFunction)]/.test(Object.prototype.toString.call(obj));\n\n/**\n * Generate a consistent hash\n *\n * @param {*|object} anyValue\n * @param {object} options\n * @param {Function} options.method\n * @returns {*|string}\n */\nconst generateHash = (anyValue, { method = cryptoSha1 } = {}) =>\n  method(\n    JSON.stringify({\n      value:\n        (_isPlainObject(anyValue) &&\n          JSON.stringify(\n            Object.entries(anyValue).sort(([a], [b]) => a.localeCompare(b)),\n            (key, value) => {\n              if (value !== anyValue && _isPlainObject(value)) {\n                return JSON.stringify(Object.entries(value).sort(([a], [b]) => a.localeCompare(b)) || []);\n              }\n              if (typeof value === 'function') {\n                return value.toString();\n              }\n              return value;\n            }\n          )) ||\n        `${typeof anyValue}${anyValue?.toString() || anyValue}`\n    })\n  ).toString();\n\n/**\n * Simple memoize, cache based arguments with adjustable limit.\n *\n * @param {Function} func\n * @param {object} options\n * @param {number} options.cacheLimit\n * @returns {Function}\n */\nconst memo = (func, { cacheLimit = 1 } = {}) => {\n  // eslint-disable-next-line func-names\n  const ized = function () {\n    const cache = [];\n\n    return (...args) => {\n      const key = JSON.stringify({ value: [...args].map(arg => (typeof arg === 'function' && arg.toString()) || arg) });\n      const keyIndex = cache.indexOf(key);\n\n      if (keyIndex < 0) {\n        const result = func.call(null, ...args);\n        cache.unshift(key, result);\n        cache.length = cacheLimit * 2;\n        return cache[1];\n      }\n\n      return cache[keyIndex + 1];\n    };\n  };\n\n  return ized();\n};\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * ToDo: review adding \"locale\" for numbro\n */\n/**\n * Convenience wrapper for numbro. Numbro assumes all values passed to it conform as \"number\".\n * This allows us to optional chain the function results.\n *\n * @param {*} value\n * @returns {numbro.Numbro|*}\n */\nconst numberDisplay = value => {\n  if (typeof value !== 'number' || Number.isNaN(value)) {\n    return value;\n  }\n  return numbro(value);\n};\n\n/**\n * Recursive object and props freeze/immutable.\n * Used from deep-freeze-strict, an older npm package, license - public domain\n * https://bit.ly/3HR4XWP and https://bit.ly/3Ye4S6B\n *\n * @param {object} obj\n * @returns {*}\n */\nconst objFreeze = obj => {\n  Object.freeze(obj);\n\n  const oIsFunction = typeof obj === 'function';\n  const hasOwnProp = Object.prototype.hasOwnProperty;\n\n  Object.getOwnPropertyNames(obj).forEach(prop => {\n    if (\n      hasOwnProp.call(obj, prop) &&\n      (oIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true) &&\n      obj[prop] !== null &&\n      (typeof obj[prop] === 'object' || typeof obj[prop] === 'function') &&\n      !Object.isFrozen(obj[prop])\n    ) {\n      objFreeze(obj[prop]);\n    }\n  });\n\n  return obj;\n};\n\n/**\n * Quick set data as \"immutable-like\". Typically used to pass object and array data through configuration callbacks.\n *\n * @param {*} data\n * @param {object} options\n * @param {boolean} options.isClone Clone your data before mutating it.\n * @returns {*}\n */\nconst setImmutableData = memo(\n  (data, { isClone = false } = {}) => (isClone && objFreeze(_cloneDeep(data))) || objFreeze(data)\n);\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * FixMe: Replace, or alias towards UI_DEPLOY_PATH_PREFIX, this dotenv parameter if/when \"beta\" and \"preview\" are normalized.\n */\n/**\n * Patch for compensating for platform updates where a mismatch between \"beta\" and \"preview\" for redirects means\n * that the same prefix can no longer be used for both additional remote resources and links. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_LINK_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_LINK_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable platform notifications.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_NOTIFICATIONS = process.env.REACT_APP_UI_DISABLED_NOTIFICATIONS === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the current hosts inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_HOSTS = process.env.REACT_APP_UI_DISABLED_TABLE_HOSTS === 'true';\n\n/**\n * Disable the current instances inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_INSTANCES = process.env.REACT_APP_UI_DISABLED_TABLE_INSTANCES === 'true';\n\n/**\n * Disable the current subscriptions inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_SUBSCRIPTIONS = process.env.REACT_APP_UI_DISABLED_TABLE_SUBSCRIPTIONS === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * Disable the group variant filter aspect of the toolbar.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR_GROUP_VARIANT = process.env.REACT_APP_UI_DISABLED_TOOLBAR_GROUP_VARIANT === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * A url, or uri, for \"contact us\".\n *\n * @type {string}\n */\nconst UI_LINK_CONTACT_US = process.env.REACT_APP_UI_LINK_CONTACT_US;\n\n/**\n * A url, or uri, for \"learn more\".\n *\n * @type {string}\n */\nconst UI_LINK_LEARN_MORE = process.env.REACT_APP_UI_LINK_LEARN_MORE;\n\n/**\n * A url, or uri, for \"recommend actions\"\n *\n * @type {string}\n */\nconst UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS = process.env.REACT_APP_UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS;\n\n/**\n * UI locale default.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG;\n\n/**\n * UI locale default description.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT_DESC = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI state logging file name.\n *\n * @type {string}\n */\nconst UI_LOGGER_FILE = process.env.REACT_APP_UI_LOGGER_FILE || 'debug_log_{0}.json';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @param {boolean} options.limit\n * @param {string} options.id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  aggregatedError,\n  browserExpose,\n  generateHash,\n  generateId,\n  isDate,\n  isPromise,\n  memo,\n  noop,\n  noopPromise,\n  numberDisplay,\n  objFreeze,\n  setImmutableData,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DEPLOY_PATH_LINK_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_NOTIFICATIONS,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TABLE_HOSTS,\n  UI_DISABLED_TABLE_INSTANCES,\n  UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  UI_DISABLED_TOOLBAR,\n  UI_DISABLED_TOOLBAR_GROUP_VARIANT,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LINK_CONTACT_US,\n  UI_LINK_LEARN_MORE,\n  UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS,\n  UI_LOCALE_DEFAULT,\n  UI_LOCALE_DEFAULT_DESC,\n  UI_LOGGER_ID,\n  UI_LOGGER_FILE,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../services/rhsm/rhsmConstants';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * @memberof Helpers\n * @module Dates\n */\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && moment.utc('20190720').toDate()) ||\n  (helpers.DEV_MODE &&\n    process.env.REACT_APP_DEBUG_DEFAULT_DATETIME &&\n    moment.utc(process.env.REACT_APP_DEBUG_DEFAULT_DATETIME).toDate()) ||\n  moment.utc().toDate();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @param {Date} params.date Start date, typically the current date.\n * @param {number} params.subtract Number of granularity type to subtract from the current date.\n * @param {string} params.measurement Granularity type.\n * @param {string} params.endOfMeasurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement, endOfMeasurement = 'days' }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf(endOfMeasurement).toDate()\n});\n\nconst currentDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 1, measurement: 'days' });\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\nconst rangedYearDateTime = setRangedDateTime({\n  date: getCurrentDate(),\n  subtract: 11,\n  measurement: 'months',\n  endOfMeasurement: 'months'\n});\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case 'CURRENT':\n      return { ...currentDateTime };\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Generate a list of months for use in a select list.\n *\n * @param {string} month\n * @returns {{keyDateTimeRanges: {}, listDateTimeRanges: Array}|*|undefined}\n */\nconst getRangedMonthDateTime = month => {\n  const currentYear = Number.parseInt(moment.utc(getCurrentDate()).year(), 10);\n  const { startDate, endDate } = { ...rangedYearDateTime };\n  const keyDateTimeRanges = {};\n  let listDateTimeRanges = [];\n\n  const startDateUpdated = moment.utc(startDate);\n  const endDateUpdated = moment.utc(endDate);\n\n  while (endDateUpdated > startDateUpdated || startDateUpdated.format('M') === endDateUpdated.format('M')) {\n    const dateTime = {\n      value: {\n        startDate: startDateUpdated.toDate()\n      }\n    };\n\n    const titleYear = startDateUpdated.format('MMMM YYYY');\n    const title = startDateUpdated.format('MMMM');\n    const titleIndex = startDateUpdated.format('M');\n    const isNextYear = currentYear !== Number.parseInt(startDateUpdated.year(), 10);\n\n    dateTime.title = (isNextYear && titleYear) || title;\n    dateTime._title = title.toLowerCase();\n    dateTime.value.endDate = moment.utc(startDateUpdated).endOf('month').toDate();\n\n    startDateUpdated.add(1, 'month');\n\n    dateTime.title = translate('curiosity-toolbar.label', { context: ['granularityRangedMonthly', dateTime.title] });\n    keyDateTimeRanges[title.toLowerCase()] = { ...dateTime };\n    keyDateTimeRanges[titleIndex] = { ...dateTime };\n    listDateTimeRanges.push(dateTime);\n  }\n\n  listDateTimeRanges = listDateTimeRanges.reverse();\n  listDateTimeRanges[0] = {\n    ...listDateTimeRanges[0],\n    isCurrent: true,\n    _title: 'current',\n    title: translate('curiosity-toolbar.label', { context: ['granularityRangedMonthly', 'current'] })\n  };\n\n  keyDateTimeRanges.current = { ...listDateTimeRanges[0] };\n\n  if (month) {\n    return keyDateTimeRanges?.[month] || undefined;\n  }\n\n  return { keyDateTimeRanges, listDateTimeRanges };\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\n/**\n * Consistent timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampTimeFormats = {\n  timeLong: 'MMMM D h:mm:ss A',\n  yearTimeLong: 'MMMM D YYYY h:mm:ss A',\n  timeShort: 'MMM D h:mm A',\n  yearTimeShort: 'MMM D YYYY h:mm A'\n};\n\n/**\n * Consistent UTC timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampUTCTimeFormats = {\n  timeLong: 'DD MMMM HH:mm:ss UTC',\n  yearTimeLong: 'DD MMMM YYYY HH:mm:ss UTC',\n  timeShort: 'DD MMM HH:mm UTC',\n  yearTimeShort: 'DD MMM YYYY HH:mm UTC'\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { dateHelpers } from './dateHelpers';\n\n/**\n * @memberof Helpers\n * @module Downloads\n */\n\n/**\n * Download data to a file\n *\n * @param {object} options\n * @param {string} options.data\n * @param {string} options.fileName\n * @param {string} options.fileType\n * @returns {Promise}\n */\nconst downloadData = options => {\n  const { data = '', fileName = 'download.txt', fileType = 'text/plain' } = options || {};\n  return new Promise((resolve, reject) => {\n    try {\n      const { document, navigator, URL } = window;\n      const blob = new Blob([data], { type: fileType });\n\n      if (navigator?.msSaveBlob) {\n        navigator.msSaveBlob(blob, fileName);\n        resolve({ fileName, data });\n      } else {\n        const anchorTag = document.createElement('a');\n\n        anchorTag.href = URL.createObjectURL(blob);\n        anchorTag.style.display = 'none';\n        anchorTag.download = fileName;\n\n        document.body.appendChild(anchorTag);\n\n        anchorTag.click();\n\n        setTimeout(() => {\n          document.body.removeChild(anchorTag);\n          URL.revokeObjectURL(blob);\n          resolve({ fileName, data });\n        }, 250);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\n/**\n * Download the debug log file.\n */\nconst debugLog = async () => {\n  try {\n    const { sessionStorage } = window;\n    const fileName = `${helpers.UI_LOGGER_FILE}`.replace(\n      '{0}',\n      moment(dateHelpers.getCurrentDate()).format('YYYYMMDD_HHmmss')\n    );\n    const data = JSON.stringify(JSON.parse(sessionStorage.getItem(`${helpers.UI_LOGGER_ID}`)), null, 2);\n\n    await downloadData({ data, fileName, fileType: 'application/json' });\n  } catch (e) {\n    throw new Error(`debuglog error, ${e.message}`);\n  }\n};\n\nconst downloadHelpers = {\n  downloadData,\n  debugLog\n};\n\nhelpers.browserExpose({ debugLog }, { limit: false });\n\nexport { downloadHelpers as default, downloadHelpers, downloadData, debugLog };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { Maintenance } from '@redhat-cloud-services/frontend-components/Maintenance';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { routerHelpers } from '../router';\nimport { rhsmConstants } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\nimport { MessageView } from '../messageView/messageView';\nimport { OptinView } from '../optinView/optinView';\nimport { translate } from '../i18n/i18n';\nimport { AuthenticationContext, useGetAuthorization } from './authenticationContext';\n\n/**\n * Authentication component wrapper.\n *\n * @memberof Components\n * @module Authentication\n * @property {module} AuthenticationContext\n */\n\n/**\n * An authentication pass-through component.\n *\n * @param {object} props\n * @param {string} props.appName\n * @param {React.ReactNode} props.children\n * @param {boolean} props.isDisabled\n * @param {Function} props.t\n * @param {Function} props.useGetAuthorization\n * @returns {React.ReactNode}\n */\nconst Authentication = ({ appName, children, isDisabled, t, useGetAuthorization: useAliasGetAuthorization }) => {\n  const { pending, data = {} } = useAliasGetAuthorization();\n  const { authorized = {}, errorCodes, errorStatus } = data;\n  const { [appName]: isAuthorized } = authorized;\n\n  const renderContent = () => {\n    if (isDisabled) {\n      return (\n        <MessageView>\n          <Maintenance description={t('curiosity-auth.maintenanceCopy', '...')} />\n        </MessageView>\n      );\n    }\n\n    if (isAuthorized) {\n      return children;\n    }\n\n    if (pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (errorCodes && errorCodes.includes(rhsmConstants.RHSM_API_RESPONSE_ERRORS_CODE_TYPES.OPTIN)) ||\n      errorStatus === 418\n    ) {\n      return <OptinView />;\n    }\n\n    return (\n      <MessageView>\n        <NotAuthorized serviceName={helpers.UI_DISPLAY_NAME} />\n      </MessageView>\n    );\n  };\n\n  return <AuthenticationContext.Provider value={data}>{renderContent()}</AuthenticationContext.Provider>;\n};\n\n/**\n * Prop types.\n *\n * @type {{useGetAuthorization: Function, children: React.ReactNode, appName: string, isDisabled: boolean}}\n */\nAuthentication.propTypes = {\n  appName: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  useGetAuthorization: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useGetAuthorization: Function, t: Function, appName: string, isDisabled: boolean}}\n */\nAuthentication.defaultProps = {\n  appName: routerHelpers.appName,\n  isDisabled: helpers.UI_DISABLED,\n  t: translate,\n  useGetAuthorization\n};\n\nexport { Authentication as default, Authentication };\n","import React, { useContext } from 'react';\nimport { useMount } from 'react-use';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { reduxActions, storeHooks } from '../../redux';\nimport { helpers } from '../../common';\nimport { routerHelpers } from '../router';\n\n/**\n * @memberof Authentication\n * @module AuthenticationContext\n */\n\n/**\n * Authentication context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst AuthenticationContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated authentication context.\n *\n * @returns {React.Context<{}>}\n */\nconst useAuthContext = () => useContext(AuthenticationContext);\n\n/**\n * Initialize an app, and return a combined state store that includes authorization, locale, and API errors\n *\n * @param {object} options\n * @param {string} options.appName\n * @param {Function} options.authorizeUser\n * @param {Function} options.hideGlobalFilter\n * @param {Function} options.useChrome\n * @param {Function} options.useDispatch\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: {errorCodes, errorStatus: *, locale}, pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useGetAuthorization = ({\n  appName = routerHelpers.appName,\n  authorizeUser = reduxActions.platform.authorizeUser,\n  hideGlobalFilter = reduxActions.platform.hideGlobalFilter,\n  useChrome: useAliasChrome = useChrome,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const dispatch = useAliasDispatch();\n  const { updateDocumentTitle = helpers.noop } = useAliasChrome();\n  const { data, error, fulfilled, pending, responses } = useAliasSelectorsResponse([\n    { id: 'auth', selector: ({ user }) => user?.auth },\n    { id: 'locale', selector: ({ user }) => user?.locale },\n    {\n      id: 'errors',\n      selector: ({ user }) => (user?.errors?.error === true && user.errors) || { fulfilled: true, data: [] }\n    }\n  ]);\n\n  useMount(async () => {\n    await dispatch(authorizeUser());\n    updateDocumentTitle(appName);\n    dispatch([hideGlobalFilter()]);\n  });\n\n  const [user = {}, app = {}] = (Array.isArray(data.auth) && data.auth) || [];\n  const errorStatus = (error && responses?.id?.errors?.status) || null;\n\n  return {\n    data: {\n      ...user,\n      ...app,\n      locale: data.locale,\n      errorCodes: data.errors,\n      errorStatus\n    },\n    error,\n    fulfilled,\n    pending\n  };\n};\n\n/**\n * Return session data from authentication context.\n *\n * @param {Function} useAliasAuthContext\n * @returns {{errorCodes, errorStatus: *, locale}}\n */\nconst useSession = ({ useAuthContext: useAliasAuthContext = useAuthContext } = {}) => {\n  const session = useAliasAuthContext();\n  return {\n    ...session\n  };\n};\n\nconst context = {\n  AuthenticationContext,\n  DEFAULT_CONTEXT,\n  useAuthContext,\n  useGetAuthorization,\n  useSession\n};\n\nexport {\n  context as default,\n  context,\n  AuthenticationContext,\n  DEFAULT_CONTEXT,\n  useAuthContext,\n  useGetAuthorization,\n  useSession\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ChartThemeColor } from '@patternfly/react-charts';\nimport { ChartContext } from './chartContext';\nimport { ChartElements } from './chartElements';\nimport { ChartLegend } from './chartLegend';\nimport { chartHelpers, ChartTypeVariant } from './chartHelpers';\nimport { useResizeObserver } from '../../hooks/useWindow';\n\n/**\n * PF Charts/Victory area, and line, charts generator.\n *\n * @memberof Components\n * @module Chart\n * @property {module} ChartAxisLabel\n * @property {module} ChartContext\n * @property {module} ChartElements\n * @property {module} ChartHelpers\n * @property {module} ChartIcon\n * @property {module} ChartLegend\n * @property {module} ChartTooltip\n */\n\n/**\n * Return a chart and elements with a context provider.\n *\n * @param {object} props\n * @param {React.ReactNode|Function} props.chartLegend\n * @param {React.ReactNode|Function} props.chartTooltip\n * @param {Array} props.dataSets\n * @param {object} props.padding\n * @param {string} props.themeColor\n * @param {React.ReactNode|Function} props.xAxisChartLabel\n * @param {React.ReactNode|Function} props.yAxisChartLabel\n * @param {boolean} props.xAxisFixLabelOverlap\n * @param {number} props.xAxisLabelIncrement\n * @param {Function} props.xAxisTickFormat\n * @param {Function} props.yAxisTickFormat\n * @param {Function} props.xValueFormat\n * @param {Function} props.yValueFormat\n * @returns {React.ReactNode}\n */\nconst Chart = ({\n  chartLegend,\n  chartTooltip,\n  dataSets,\n  padding,\n  themeColor,\n  xAxisChartLabel,\n  yAxisChartLabel,\n  xAxisFixLabelOverlap,\n  xAxisLabelIncrement,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  xValueFormat,\n  yValueFormat\n}) => {\n  const [context, setContext] = useState();\n  const [dataSetsToggle, setDataSetsToggle] = useState({});\n  const containerRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const { width: chartWidth } = useResizeObserver(containerRef);\n\n  useEffect(() => {\n    /**\n     * Aggregate chart related settings.\n     *\n     * @returns {{isMultiYAxis: boolean, padding: object, chartDomain: {domain: {y: Array}}, tooltipDataSetLookUp: {},\n     *     xAxisProps: object, themeColor: string, maxY: (object|number), hasData: boolean, maxX: number,\n     *     yAxisProps: Array, chartElementsProps: {elementsById: object, stackedElements: Array,\n     *     stackedElementsById: object, elements: Array}}}\n     */\n    const updateChartSettings = () => {\n      const toggledDataSets = dataSets.filter(({ id }) => !dataSetsToggle[id]);\n\n      const tooltipDataSetLookUp = chartHelpers.generateTooltipData({\n        content: chartTooltip,\n        dataSets: toggledDataSets\n      });\n\n      const { maxX, maxY } = chartHelpers.generateMaxXY({ dataSets: toggledDataSets });\n      const { individualMaxY } = chartHelpers.generateMaxXY({ dataSets });\n      const { xAxisProps, yAxisProps } = chartHelpers.generateAxisProps({\n        dataSets,\n        individualMaxY,\n        maxX,\n        maxY,\n        xAxisChartLabel,\n        yAxisChartLabel,\n        xAxisFixLabelOverlap,\n        xAxisLabelIncrement,\n        xAxisTickFormat,\n        yAxisTickFormat\n      });\n\n      const isMultiYAxis = yAxisProps.length > 1;\n      const chartElementsProps = chartHelpers.generateElementsProps({\n        dataSets: toggledDataSets,\n        maxX,\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        xValueFormat,\n        yValueFormat\n      });\n      const { domain, padding: domainPadding } = chartHelpers.generateDomains({\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        padding\n      });\n      const hasData = !!xAxisProps.tickValues;\n      const updatedPadding = { bottom: 0, left: 0, right: 0, top: 0, ...padding, ...domainPadding };\n\n      return {\n        xAxisProps,\n        yAxisProps,\n        chartDomain: { domain },\n        chartElementsProps,\n        hasData,\n        isMultiYAxis,\n        maxX,\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        padding: updatedPadding,\n        themeColor,\n        tooltipDataSetLookUp\n      };\n    };\n\n    const chartSettings = updateChartSettings();\n    const updatedSettings = {\n      chartContainerRef: () => containerRef,\n      chartSettings: { ...chartSettings, chartLegend, chartWidth, dataSets },\n      chartTooltipRef: () => tooltipRef,\n      dataSetsToggle: [dataSetsToggle, setDataSetsToggle]\n    };\n\n    setContext(updatedSettings);\n  }, [\n    chartLegend,\n    chartTooltip,\n    chartWidth,\n    dataSets,\n    dataSetsToggle,\n    padding,\n    setContext,\n    themeColor,\n    xAxisChartLabel,\n    yAxisChartLabel,\n    xAxisFixLabelOverlap,\n    xAxisLabelIncrement,\n    yAxisTickFormat,\n    xAxisTickFormat,\n    xValueFormat,\n    yValueFormat\n  ]);\n\n  return (\n    <ChartContext.Provider value={context}>\n      <div\n        className=\"curiosity-chartarea uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        data-test=\"curiosity-chartarea\"\n        ref={containerRef}\n      >\n        {chartWidth > 0 && (\n          <React.Fragment>\n            <ChartElements />\n            <ChartLegend />\n          </React.Fragment>\n        )}\n      </div>\n    </ChartContext.Provider>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{chartTooltip: React.ReactNode|Function, xValueFormat: Function, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: Function, themeColor: string, chartLegend: React.ReactNode|Function,\n *     yAxisTickFormat: Function, dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number,\n *     yValueFormat: Function}}\n */\nChart.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      chartType: PropTypes.oneOf([...Object.values(ChartTypeVariant)]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      xAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      yAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      xAxisUseDataSet: PropTypes.bool,\n      yAxisUseDataSet: PropTypes.bool\n    })\n  ),\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  yAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func,\n  xValueFormat: PropTypes.func,\n  yValueFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartTooltip: React.ReactNode|Function, xValueFormat: Function, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: Function, themeColor: string, chartLegend: React.ReactNode|Function,\n *     yAxisTickFormat: Function, dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number,\n *     yValueFormat: Function}}\n */\nChart.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  dataSets: [],\n  padding: {\n    bottom: 75,\n    left: 55,\n    right: 55,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisChartLabel: null,\n  yAxisChartLabel: null,\n  xAxisFixLabelOverlap: true,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null,\n  xValueFormat: null,\n  yValueFormat: null\n};\n\nexport { Chart as default, Chart, ChartTypeVariant };\n","import { useEffect, useState } from 'react';\nimport { helpers } from '../common';\n\n/**\n * Global window related hooks.\n *\n * @memberof Hooks\n * @module UseWindow\n */\n\n/**\n * Apply a resize observer to an element.\n *\n * @param {*} target\n * @returns {{width: number, height: number}}\n */\nconst useResizeObserver = target => {\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    const isElementResize = target && window.ResizeObserver && true;\n    const element = target?.current;\n    let removeObserver = helpers.noop;\n    let timeout;\n\n    if (element) {\n      const handler = () => {\n        const { clientHeight = 0, clientWidth = 0, innerHeight = 0, innerWidth = 0 } = element || {};\n\n        timeout = window.setTimeout(() => {\n          setDimensions({\n            width: isElementResize ? clientWidth : innerWidth,\n            height: isElementResize ? clientHeight : innerHeight\n          });\n        });\n      };\n\n      if (isElementResize) {\n        const resizeObserver = new window.ResizeObserver(handler);\n        resizeObserver.observe(element);\n        removeObserver = () => resizeObserver.unobserve(element);\n      } else {\n        handler();\n        window.addEventListener('resize', handler);\n        removeObserver = () => window.removeEventListener('resize', handler);\n      }\n    }\n\n    return () => {\n      window.clearTimeout(timeout);\n      removeObserver();\n    };\n  }, [target]);\n\n  return dimensions;\n};\n\nconst windowHooks = {\n  useResizeObserver\n};\n\nexport { windowHooks as default, windowHooks, useResizeObserver };\n","import React from 'react';\n\n/**\n * @memberof Chart\n * @module ChartAxisLabel\n */\n\n/**\n * Note: Victory Charts components require a form of extended \"something\" applied by the consuming component.\n * This leads to odd implementations, like returning a function component.\n */\n/**\n * Allow, and return, SVG compatible HTML for axis labels.\n *\n * @param {object} params\n * @param {string} params.axis\n * @param {number} params.index\n * @returns {Function}\n */\nconst chartAxisLabel =\n  ({ axis, index = 0 } = {}) =>\n  ({ x, y, text }) => // eslint-disable-line\n    (\n      <g>\n        <foreignObject x={0} y={0} width=\"100%\" height=\"100%\">\n          <div\n            className={`curiosity-chartarea__axis-label-container curiosity-chartarea__axis-label-container-${axis} curiosity-chartarea__axis-label-container-${axis}-${index}`}\n            style={{ top: `${y ?? 0}px` }}\n            xmlns=\"http://www.w3.org/1999/xhtml\"\n          >\n            <div className=\"curiosity-chartarea__axis-label-container-content\">{text}</div>\n          </div>\n        </foreignObject>\n      </g>\n    );\n\nexport { chartAxisLabel as default, chartAxisLabel };\n","import React, { useCallback, useContext } from 'react';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Chart\n * @module ChartContext\n */\n\n/**\n * Chart context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [\n  { chartContainerRef: helpers.noop, chartSettings: {}, chartTooltipRef: helpers.noop, dataSetsToggle: [] },\n  helpers.noop\n];\n\nconst ChartContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated chart context.\n *\n * @returns {React.Context<{}>}\n */\nconst useChartContext = () => useContext(ChartContext);\n\n/**\n * ToDo: reevaluate this alternative pattern of passing hooks as options, helps testing\n */\n/**\n * Track, show, and hide chart data layers.\n *\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n * @param {object} options\n * @param {Function} options.useChartContext\n * @returns {{onRevert: Function, onToggle: Function, getIsToggled: Function, dataSetsToggle: object,\n *     onHide: Function}}\n */\nconst useToggleData = ({ useChartContext: useAliasChartContext = useChartContext } = {}) => {\n  const { dataSetsToggle: contextDataSetsToggle = [] } = useAliasChartContext();\n  const [dataSetsToggle, setDataSetsToggle] = contextDataSetsToggle;\n\n  /**\n   * Hide a graph layer.\n   *\n   * @event onHide\n   */\n  const onHide = useCallback(\n    id => {\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: true }));\n    },\n    [setDataSetsToggle]\n  );\n\n  /**\n   * Reset graph layers.\n   *\n   * @event onRevert\n   */\n  const onRevert = useCallback(() => {\n    setDataSetsToggle(() => ({}));\n  }, [setDataSetsToggle]);\n\n  /**\n   * Hide/show graph layers.\n   *\n   * @event onToggle\n   * @returns boolean;\n   */\n  const onToggle = useCallback(\n    id => {\n      const updatedToggle = !dataSetsToggle?.[id];\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: updatedToggle }));\n      return updatedToggle;\n    },\n    [dataSetsToggle, setDataSetsToggle]\n  );\n\n  /**\n   * Graph layer status.\n   *\n   * @callback getIsToggled\n   * @returns boolean|*\n   */\n  const getIsToggled = useCallback(id => dataSetsToggle?.[id] || false, [dataSetsToggle]);\n\n  return {\n    ...{ dataSetsToggle },\n    onHide,\n    onRevert,\n    onToggle,\n    getIsToggled\n  };\n};\n\nconst context = {\n  ChartContext,\n  DEFAULT_CONTEXT,\n  useChartContext,\n  useToggleData\n};\n\nexport { context as default, context, ChartContext, DEFAULT_CONTEXT, useChartContext, useToggleData };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VictoryStack as ChartStack, VictoryTooltip as ChartCursorTooltip } from 'victory';\nimport { createContainer } from 'victory-create-container';\nimport { Chart, ChartArea, ChartAxis, ChartContainer, ChartLine, ChartThreshold } from '@patternfly/react-charts';\nimport { useChartContext } from './chartContext';\nimport { chartTooltip } from './chartTooltip';\nimport { chartAxisLabel } from './chartAxisLabel';\nimport { ChartTypeVariant } from './chartHelpers';\n\n/**\n * @memberof Chart\n * @module ChartElements\n */\n\n/**\n * Aggregate, generate, a compatible Victory chart element/facet component.\n *\n * @param {object} props\n * @param {object} props.chartTypeDefaults\n * @returns {React.ReactNode}\n */\nconst ChartElements = ({ chartTypeDefaults }) => {\n  const { chartSettings = {}, chartContainerRef, chartTooltipRef } = useChartContext();\n  const {\n    chartDomain,\n    chartElementsProps,\n    chartWidth,\n    hasData,\n    padding,\n    themeColor,\n    xAxisProps = {},\n    yAxisProps = []\n  } = chartSettings;\n\n  let containerComponent = <ChartContainer />;\n  let xAxis = null;\n  let yAxis = null;\n  let chartElements = [];\n  let stackedChartElements = [];\n\n  if (hasData) {\n    /**\n     * Note: both cursor and voronoiDimension attrs required if the need is to have...\n     * the tooltip populate consistently without being \"near\" a chart element y axis point\n     */\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const TooltipLabelComponent = chartTooltip({ chartSettings, chartContainerRef, chartTooltipRef });\n\n    containerComponent = (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        voronoiDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={\n          <ChartCursorTooltip\n            dx={0}\n            dy={0}\n            centerOffset={{ x: 0, y: 0 }}\n            flyoutStyle={{ fill: 'transparent', stroke: 'transparent' }}\n            labelComponent={<TooltipLabelComponent />}\n          />\n        }\n        voronoiPadding={(padding && Object.values(padding).sort()?.[0]) || 0}\n        mouseFollowTooltips\n      />\n    );\n  }\n\n  /**\n   * Generate X Axis\n   */\n  if (Object.keys(xAxisProps).length) {\n    const updatedXAxisProps = {\n      ...xAxisProps\n    };\n\n    if (updatedXAxisProps.label) {\n      const AxisLabelComponent = chartAxisLabel({ axis: 'x' });\n      updatedXAxisProps.axisLabelComponent = <AxisLabelComponent />;\n    }\n\n    xAxis = <ChartAxis {...updatedXAxisProps} animate={false} />;\n  }\n\n  /**\n   * Generate Y Axis\n   */\n  if (Array.isArray(yAxisProps)) {\n    yAxis = yAxisProps.map((axisProps, index) => {\n      const updatedAxisProps = {\n        ...axisProps\n      };\n\n      if (updatedAxisProps.label) {\n        const AxisLabelComponent = chartAxisLabel({ axis: 'y', index });\n        updatedAxisProps.axisLabelComponent = <AxisLabelComponent />;\n      }\n\n      return <ChartAxis key={`yaxis-${axisProps.orientation}`} {...updatedAxisProps} animate={false} />;\n    });\n  }\n\n  const setChartElement = ({ chartType, props }) => {\n    const { component: Component, ...defaultProps } =\n      chartTypeDefaults[chartType] || chartTypeDefaults[ChartTypeVariant.area];\n    return <Component {...{ ...defaultProps, ...props }} />;\n  };\n\n  chartElements = chartElementsProps?.elements.map(setChartElement);\n  stackedChartElements = chartElementsProps?.stackedElements.map(setChartElement);\n\n  return (\n    <Chart\n      animate={{ duration: 0 }}\n      width={chartWidth}\n      themeColor={themeColor}\n      {...{ padding, containerComponent, ...chartDomain }}\n    >\n      {xAxis}\n      {yAxis}\n      {chartElements}\n      <ChartStack>{stackedChartElements}</ChartStack>\n    </Chart>\n  );\n};\n\n/**\n * Prop types\n *\n * @type {{chartTypeDefaults:{}}}\n */\nChartElements.propTypes = {\n  chartTypeDefaults: PropTypes.objectOf(\n    PropTypes.shape({\n      component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      interpolation: PropTypes.oneOf(['monotoneX', 'step'])\n    })\n  )\n};\n\n/**\n * Default props\n *\n * @type {{chartTypeDefaults:{}}}\n */\nChartElements.defaultProps = {\n  chartTypeDefaults: {\n    [ChartTypeVariant.area]: {\n      component: ChartArea,\n      animate: {\n        duration: 250,\n        onLoad: { duration: 250 }\n      },\n      interpolation: 'monotoneX'\n    },\n    [ChartTypeVariant.line]: {\n      component: ChartLine,\n      animate: {\n        duration: 250,\n        onLoad: { duration: 250 }\n      },\n      interpolation: 'monotoneX'\n    },\n    [ChartTypeVariant.threshold]: {\n      component: ChartThreshold,\n      animate: {\n        duration: 100,\n        onLoad: { duration: 100 }\n      },\n      interpolation: 'step'\n    }\n  }\n};\n\nexport { ChartElements as default, ChartElements };\n","import React from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Chart\n * @module ChartHelpers\n */\n\n/**\n * Available chart types\n *\n * @type {{area: string, line: string, threshold: string}}\n */\nconst ChartTypeVariant = {\n  area: 'area',\n  line: 'line',\n  threshold: 'threshold'\n};\n\n/**\n * Generate max X and Y values from datasets.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @returns {{individualMaxY: object, maxY: number, maxX: number}}\n */\nconst generateMaxXY = ({ dataSets = [] } = {}) => {\n  const individualDataSetsMaxY = {};\n  let combinedDataSetMaxX = 0;\n  let combinedDataSetsMaxY = 0;\n\n  dataSets\n    .filter(({ isStacked }) => isStacked === true)\n    .forEach(({ data }) => {\n      if (Array.isArray(data)) {\n        combinedDataSetsMaxY += Math.max(...data.map(value => value?.y ?? 0));\n      }\n    });\n\n  dataSets.forEach(({ id, data }) => {\n    let dataSetMaxY = 0;\n\n    if (Array.isArray(data)) {\n      combinedDataSetMaxX = data.length > combinedDataSetMaxX ? data.length : combinedDataSetMaxX;\n\n      dataSetMaxY = Math.max(...data.map(value => value?.y ?? 0));\n      combinedDataSetsMaxY = dataSetMaxY > combinedDataSetsMaxY ? dataSetMaxY : combinedDataSetsMaxY;\n    }\n\n    if (id) {\n      individualDataSetsMaxY[id] = dataSetMaxY;\n    }\n  });\n\n  return {\n    maxX: combinedDataSetMaxX,\n    maxY: combinedDataSetsMaxY,\n    individualMaxY: individualDataSetsMaxY\n  };\n};\n\n/**\n * Generate Y axis domain ranges from dataSets, ignore X axis.\n *\n * @param {object} params\n * @param {number|object} params.maxY\n * @param {object} params.padding\n * @returns {{ domain: { y: Array }, padding: {object} }}\n */\nconst generateDomains = ({ maxY, padding = {} } = {}) => {\n  const updatedChartDomain = {};\n  const updatedPadding = { ...padding };\n  const generatedDomain = {};\n\n  if (Object.values(maxY).length) {\n    generatedDomain.y = [0, 1.25];\n  } else if (maxY >= 0.1) {\n    const floored = Math.pow(10, Math.floor(Math.log10(maxY || 10)));\n    generatedDomain.y = [0, Math.ceil((maxY + 1) / floored) * floored];\n  } else if (maxY < 0.1) {\n    generatedDomain.y = [0, maxY + maxY / 4 || 10];\n  } else {\n    generatedDomain.y = [0, 10];\n  }\n\n  if (maxY < 0.01) {\n    updatedPadding.left += generatedDomain.y.toString().length;\n    updatedPadding.right += generatedDomain.y.toString().length;\n  }\n\n  if (Object.keys(generatedDomain).length) {\n    updatedChartDomain.domain = generatedDomain;\n  }\n\n  return {\n    ...updatedChartDomain,\n    padding: updatedPadding\n  };\n};\n\n/**\n * Generate chart element props.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {number} params.maxX\n * @param {number} params.maxY\n * @param {Function} params.xValueFormat\n * @param {Function} params.yValueFormat\n * @param {object} options\n * @param {object} options.chartTypeVariant\n * @returns {{elementsById: object, stackedElements: Array, stackedElementsById: object, elements: Array}}\n */\nconst generateElementsProps = (\n  { dataSets = [], maxX, maxY, xValueFormat, yValueFormat } = {},\n  { chartTypeVariant = ChartTypeVariant } = {}\n) => {\n  const elements = [];\n  const stackedElements = [];\n  const elementsById = {};\n  const stackedElementsById = {};\n\n  dataSets.forEach(dataSet => {\n    const { animate, chartType, data, fill, id, isStacked, interpolation, stroke, strokeDasharray, strokeWidth } =\n      dataSet;\n\n    if (data?.length) {\n      const dataColorStroke = {\n        data: {}\n      };\n\n      if (fill && chartType !== chartTypeVariant.line && chartType !== chartTypeVariant.threshold) {\n        dataColorStroke.data.fill = fill;\n      }\n\n      if (stroke) {\n        dataColorStroke.data.stroke = stroke;\n      }\n\n      if (strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = strokeDasharray;\n      }\n\n      if (strokeWidth) {\n        dataColorStroke.data.strokeWidth = strokeWidth;\n      }\n\n      const defaultProps = {};\n\n      if (animate) {\n        defaultProps.animate = animate;\n      }\n\n      if (interpolation) {\n        defaultProps.interpolation = interpolation;\n      }\n\n      const chartElementProps = {\n        ...defaultProps,\n        key: `chart-${dataSet.id}-${chartType || ''}`,\n        name: `chart-${dataSet.id}-${chartType || ''}`,\n        data: dataSet.data,\n        style: { ...(dataSet.style || {}), ...dataColorStroke },\n        themeColor: dataSet.themeColor,\n        themeVariant: dataSet.themeVariant,\n        x:\n          (xValueFormat &&\n            (datum => {\n              const xValue = xValueFormat({ datum, maxX });\n              return xValue === undefined || Number.isNaN(xValue) ? 0 : xValue;\n            })) ||\n          undefined,\n        y: datum => {\n          let yValue;\n\n          if (yValueFormat) {\n            yValue = yValueFormat({\n              datum,\n              isMultiAxis: typeof maxY !== 'number',\n              maxY: typeof maxY === 'number' ? maxY : maxY?.[dataSet.id]\n            });\n          } else {\n            yValue = typeof maxY === 'number' ? datum.y : datum.y / maxY?.[dataSet.id]; // eslint-disable-line\n          }\n\n          return yValue === undefined || Number.isNaN(yValue) ? 0 : yValue;\n        }\n      };\n\n      const props = { ...chartElementProps };\n      const updatedProps = { chartType, props };\n\n      if (isStacked) {\n        stackedElementsById[id] = updatedProps;\n        stackedElements.push(updatedProps);\n      } else {\n        elementsById[id] = updatedProps;\n        elements.push(updatedProps);\n      }\n    }\n  });\n\n  return {\n    elements,\n    elementsById,\n    stackedElements,\n    stackedElementsById\n  };\n};\n\n/**\n * Preprocess datasets for tooltips.\n *\n * @param {object} params\n * @param {React.ReactNode|Function} params.content\n * @param {Array} params.dataSets\n * @returns {{}}\n */\nconst generateTooltipData = ({ content = helpers.noop, dataSets = [] } = {}) => {\n  const tooltipDataSetLookUp = {};\n\n  if (content && Array.isArray(dataSets?.[0]?.data)) {\n    dataSets[0].data.forEach((dataSet, index) => {\n      const itemsByKey = {};\n\n      dataSets.forEach(data => {\n        if (data?.data?.[index]) {\n          itemsByKey[data.id] = {\n            color: data.stroke || data.fill || data.color || '',\n            chartType: data.chartType,\n            data: _cloneDeep(data.data[index])\n          };\n        }\n      });\n\n      const mockDatum = {\n        datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey }\n      };\n\n      tooltipDataSetLookUp[dataSet.x] = {\n        x: dataSet.x,\n        y: null,\n        itemsByKey,\n        tooltip:\n          (React.isValidElement(content) && React.cloneElement(content, { ...mockDatum })) || content({ ...mockDatum })\n      };\n    });\n  }\n\n  return tooltipDataSetLookUp;\n};\n\n/**\n * Generate X axis props, ticks, tick formatting.\n *\n * @param {object} params\n * @param {object} params.dataSet\n * @param {number} params.maxX\n * @param {number} params.xAxisLabelIncrement\n * @param {object} params.xAxisPropDefaults\n * @param {Function} params.xAxisTickFormat\n * @returns {{tickFormat: (function(*)), tickValues: *}}\n */\nconst generateXAxisProps = ({\n  dataSet = {},\n  maxX,\n  xAxisLabelIncrement,\n  xAxisPropDefaults = {},\n  xAxisTickFormat\n} = {}) => {\n  const { data = [], xAxisChartLabel } = dataSet;\n  const axisProps = {\n    ...xAxisPropDefaults,\n    tickValues: data.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    ),\n    tickFormat: tick => data[tick]?.xAxisLabel || tick\n  };\n\n  if (typeof xAxisChartLabel === 'function') {\n    axisProps.label = xAxisChartLabel({ ...dataSet, xAxisChartLabel: undefined });\n  } else {\n    axisProps.label = xAxisChartLabel;\n  }\n\n  if (typeof xAxisTickFormat === 'function') {\n    axisProps.tickFormat = tick => {\n      const tickIndex = axisProps.tickValues.indexOf(tick);\n      const previousItem = { ...data[axisProps.tickValues[tickIndex - 1]] };\n      const nextItem = { ...data[axisProps.tickValues[tickIndex + 1]] };\n      const item = { ...data[tick] };\n\n      return xAxisTickFormat({ tick, previousItem, item, nextItem, maxX });\n    };\n  }\n\n  return axisProps;\n};\n\n/**\n * Generate Y axis props, ticks, tick formatting.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {number|object} params.maxY\n * @param {object} params.yAxisPropDefaults\n * @param {Function} params.yAxisTickFormat\n * @returns {Array}\n */\nconst generateYAxisProps = ({ dataSets = [], maxY, yAxisPropDefaults = {}, yAxisTickFormat } = {}) => {\n  const axisProps = [];\n  const isMultiAxis = dataSets.length > 1;\n\n  dataSets.forEach(({ yAxisChartLabel, id, stroke, strokeWidth, ...dataSet } = {}, index) => {\n    const updatedAxisProps = {\n      style: { axis: {}, tickLabels: {} },\n      tickFormat: tick => tick\n    };\n\n    if (isMultiAxis && stroke) {\n      updatedAxisProps.style.axis.stroke = stroke;\n    }\n\n    if (isMultiAxis && strokeWidth) {\n      updatedAxisProps.style.axis.strokeWidth = strokeWidth;\n    }\n\n    if (typeof yAxisChartLabel === 'function') {\n      updatedAxisProps.label = yAxisChartLabel({ id, stroke, strokeWidth, ...dataSet });\n    } else {\n      updatedAxisProps.label = yAxisChartLabel;\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      const updatedMaxY = (typeof maxY === 'number' && maxY) || maxY?.[id];\n\n      updatedAxisProps.tickFormat = tick => {\n        const normalizedTick = (isMultiAxis && tick * updatedMaxY) || tick;\n\n        return yAxisTickFormat({\n          tick: normalizedTick,\n          isMultiAxis,\n          maxY: updatedMaxY\n        });\n      };\n    }\n\n    axisProps.push({\n      ...yAxisPropDefaults,\n      ...updatedAxisProps,\n      orientation: (index === 0 && 'left') || 'right'\n    });\n  });\n\n  return axisProps;\n};\n\n/**\n * Generate x,y props.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {object} params.individualMaxY\n * @param {number} params.maxX\n * @param {number} params.maxY\n * @param {React.ReactNode|Function} params.xAxisChartLabel\n * @param {React.ReactNode|Function} params.yAxisChartLabel\n * @param {boolean} params.xAxisFixLabelOverlap\n * @param {number} params.xAxisLabelIncrement\n * @param {Function} params.xAxisTickFormat\n * @param {Function} params.yAxisTickFormat\n * @returns {{xAxisProps: object, yAxisProps: Array}}\n */\nconst generateAxisProps = ({\n  dataSets = [],\n  individualMaxY = {},\n  maxX,\n  maxY,\n  xAxisChartLabel,\n  yAxisChartLabel,\n  xAxisFixLabelOverlap = true,\n  xAxisLabelIncrement = 1,\n  xAxisTickFormat,\n  yAxisTickFormat\n} = {}) => {\n  const xAxisPropDefaults = {\n    fixLabelOverlap: xAxisFixLabelOverlap\n  };\n\n  const yAxisPropDefaults = {\n    dependentAxis: true,\n    showGrid: true\n  };\n\n  let yAxisDataSets = [];\n  let xAxisDataSet;\n\n  dataSets.forEach(dataSet => {\n    if (dataSet.yAxisUseDataSet) {\n      yAxisDataSets.push({\n        yAxisChartLabel,\n        ...dataSet\n      });\n    }\n    if (dataSet.xAxisUseDataSet) {\n      xAxisDataSet = {\n        xAxisChartLabel,\n        ...dataSet\n      };\n    }\n  });\n\n  if (!yAxisDataSets.length) {\n    yAxisDataSets.push({\n      yAxisChartLabel,\n      ...dataSets?.[0]\n    });\n  } else {\n    yAxisDataSets = yAxisDataSets.slice(0, 2);\n  }\n\n  if (!xAxisDataSet) {\n    xAxisDataSet = {\n      xAxisChartLabel,\n      ...dataSets?.[0]\n    };\n  }\n\n  const updatedMaxY = (yAxisDataSets.length > 1 && individualMaxY) || maxY;\n\n  return {\n    xAxisProps: generateXAxisProps({\n      dataSet: xAxisDataSet,\n      maxX,\n      xAxisLabelIncrement,\n      xAxisPropDefaults,\n      xAxisTickFormat\n    }),\n    yAxisProps: generateYAxisProps({ dataSets: yAxisDataSets, maxY: updatedMaxY, yAxisPropDefaults, yAxisTickFormat })\n  };\n};\n\nconst chartHelpers = {\n  ChartTypeVariant,\n  generateAxisProps,\n  generateDomains,\n  generateElementsProps,\n  generateMaxXY,\n  generateTooltipData,\n  generateXAxisProps,\n  generateYAxisProps\n};\n\nexport {\n  chartHelpers as default,\n  chartHelpers,\n  ChartTypeVariant,\n  generateAxisProps,\n  generateDomains,\n  generateElementsProps,\n  generateMaxXY,\n  generateTooltipData,\n  generateXAxisProps,\n  generateYAxisProps\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EyeIcon, EyeSlashIcon, SquareIcon, IconSize } from '@patternfly/react-icons';\n\n/**\n * @memberof Chart\n * @module ChartIcon\n */\n\n/**\n * Emulate pf icon sizing for custom SVGs\n *\n * @param {string} size\n * @returns {string} em measurement\n */\nconst getSize = size => {\n  if (!Number.isNaN(Number.parseFloat(size))) {\n    return size;\n  }\n\n  switch (size) {\n    case 'md':\n      return '1.5em';\n    case 'lg':\n      return '2em';\n    case 'xl':\n      return '3em';\n    case 'sm':\n    default:\n      return '1em';\n  }\n};\n\n/**\n * Render an icon for use outside of Victory charts.\n *\n * @param {object} props\n * @param {string} props.fill\n * @param {string} props.symbol\n * @param {string} props.size\n * @param {string} props.title\n * @returns {React.ReactNode}\n */\nconst ChartIcon = ({ fill, symbol, size, title, ...props }) => {\n  const svgProps = { ...props };\n  const iconProps = { size, title, ...props };\n  const fontProps = { style: { fontSize: getSize(size) }, title, ...props };\n  const emSvgSize = getSize(size);\n\n  if (title) {\n    svgProps['aria-labelledby'] = title;\n  } else {\n    svgProps['aria-hidden'] = true;\n  }\n\n  if (fill) {\n    iconProps.color = fill;\n    fontProps.style.color = fill;\n  }\n\n  const setIcon = () => {\n    switch (symbol) {\n      case 'dash':\n        return (\n          <span\n            style={{\n              width: emSvgSize,\n              height: `${Number.parseFloat(emSvgSize) / 2}em`\n            }}\n          >\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 38 10\" role=\"img\" {...svgProps}>\n              <rect y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"14\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"28\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n            </svg>\n          </span>\n        );\n      case 'threshold':\n        return (\n          <span style={{ width: `${Number.parseFloat(emSvgSize) * 2}em`, height: emSvgSize }}>\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 18 10\" role=\"img\" {...svgProps}>\n              <line\n                x1={0}\n                y1={(Number.parseFloat(emSvgSize) * 16) / 2}\n                x2={Number.parseFloat(emSvgSize) * 16 * 3}\n                y2={(Number.parseFloat(emSvgSize) * 16) / 2}\n                stroke={fill}\n                strokeWidth={3}\n                strokeDasharray=\"4,3\"\n              />\n            </svg>\n          </span>\n        );\n      case 'eye':\n        return <EyeIcon {...iconProps} />;\n      case 'eyeSlash':\n        return <EyeSlashIcon {...iconProps} />;\n      case 'infinity':\n        return (\n          <span className=\"curiosity-icon__f-infinity\" {...fontProps}>\n            <span aria-hidden>&#x221e;</span>\n          </span>\n        );\n\n      case 'square':\n      default:\n        return <SquareIcon {...iconProps} />;\n    }\n  };\n\n  return <span className={`curiosity-chartarea__icon curiosity-chartarea__icon-${symbol}`}>{setIcon()}</span>;\n};\n\n/**\n * Prop types.\n *\n * @type {{symbol: string, size: string, fill: string, title: string}}\n */\nChartIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.oneOf([...Object.keys(IconSize)]),\n  symbol: PropTypes.oneOf(['dash', 'eye', 'eyeSlash', 'infinity', 'square', 'threshold']),\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{symbol: string, size: string, fill: null, title: null}}\n */\nChartIcon.defaultProps = {\n  fill: null,\n  size: 'sm',\n  symbol: 'square',\n  title: null\n};\n\nexport { ChartIcon as default, ChartIcon };\n","import React from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { useChartContext, useToggleData } from './chartContext';\n\n/**\n * @memberof Chart\n * @module ChartLegend\n */\n\n/**\n * Wrapper for rendering an HTML based legend.\n *\n * @returns {React.ReactNode}\n */\nconst ChartLegend = () => {\n  const { getIsToggled, onHide, onRevert, onToggle } = useToggleData();\n  const { chartSettings = {} } = useChartContext();\n  const { chartLegend, dataSets, padding = {}, xAxisProps = {} } = chartSettings;\n\n  if (!chartLegend) {\n    return null;\n  }\n\n  const legendProps = {\n    datum: { dataSets: _cloneDeep(dataSets) },\n    chart: {\n      hide: onHide,\n      revert: onRevert,\n      toggle: onToggle,\n      isToggled: getIsToggled\n    }\n  };\n\n  return (\n    <div\n      className={`curiosity-chartarea__legend${(xAxisProps?.label && '-axis-label-active') || ''}`}\n      style={{\n        marginLeft: (padding?.left && `${padding.left}px`) || 0,\n        marginRight: (padding?.right && `${padding.right}px`) || 0\n      }}\n    >\n      {(React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n        chartLegend({ ...legendProps })}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n */\nChartLegend.propTypes = {};\n\n/**\n * Default props.\n */\nChartLegend.defaultProps = {};\n\nexport { ChartLegend as default, ChartLegend };\n","import React from 'react';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Chart\n * @module ChartTooltip\n */\n\n/**\n * Note: Victory Charts components require a form of extended \"something\" applied by the consuming component.\n * This leads to odd implementations, like returning a function component.\n */\n/**\n * FixMe: The right graph boundary for tooltips is dependent on Voronoi container padding.\n * A limitation exists where Voronoi containers can only have a single padding setting. This means we use\n * the lowest number value from the \"padding\" setting. The repercussion is the right boundary either has to\n * be the lowest padding value, or equal to the lowest padding from any of the other dimensions, ie. top,\n * bottom, left.\n */\n/**\n * Allow, and return, SVG compatible HTML for in graph tooltip.\n *\n * @param {object} params\n * @param {object} params.chartSettings\n * @param {Function} params.chartContainerRef\n * @param {Function} params.chartTooltipRef\n * @param {number} params.minChartWidth\n * @returns {Function}\n */\nconst chartTooltip = ({\n  chartSettings = {},\n  chartContainerRef = helpers.noop,\n  chartTooltipRef = helpers.noop,\n  minChartWidth = 500\n} = {}) => {\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip x coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getXCoordinate = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return x + padding - tooltipWidth / 2;\n    }\n\n    return x > width / 2 ? x - tooltipWidth + padding : x + padding;\n  };\n\n  /**\n   * Return a tooltip y coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.y\n   * @param {number} params.height\n   * @param {number} params.tooltipHeight\n   * @param {number} params.width\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getYCoordinate = ({ y, height, tooltipHeight, width, padding = 15, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth) {\n      return y > height / 2 ? y - tooltipHeight - padding : y + padding;\n    }\n\n    const updatedMultiplier = height / tooltipHeight / 10;\n    const heightMultiplier = (updatedMultiplier < 0.25 && updatedMultiplier) || 0.25;\n\n    return height * heightMultiplier;\n  };\n\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip tail position CSS class.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const tailPosition = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return 'middle';\n    }\n\n    return x > width / 2 ? 'right' : 'left';\n  };\n\n  return ({ x, y, datum = {} }) => { // eslint-disable-line\n    const { padding = {}, tooltipDataSetLookUp = {} } = chartSettings;\n\n    const containerRef = chartContainerRef();\n    const tooltipRef = chartTooltipRef();\n    const updatedPadding = { bottom: 0, left: 0, right: 0, top: 0, ...padding };\n    const content = tooltipDataSetLookUp?.[datum.x]?.tooltip || '';\n    const containerBounds = containerRef?.current?.querySelector('svg')?.getBoundingClientRect() || {\n      width: 0,\n      height: 0\n    };\n\n    const tooltipBounds = tooltipRef?.current?.getBoundingClientRect() || { width: 0, height: 0 };\n\n    if (content) {\n      const isOutsideGraphBottom = y > containerBounds.height - updatedPadding.bottom;\n      const isOutsideGraphLeft = x < updatedPadding.left;\n      const isOutsideGraphRight = x > containerBounds.width - updatedPadding.right;\n      const isOutsideGraphTop = y < updatedPadding.top;\n      const updatedClassName = `${(tooltipBounds.height <= 0 && 'fadein') || ''}`;\n\n      return (\n        <g>\n          <foreignObject\n            x={getXCoordinate({ x, width: containerBounds.width, tooltipWidth: tooltipBounds.width })}\n            y={getYCoordinate({\n              y,\n              height: containerBounds.height,\n              tooltipHeight: tooltipBounds.height,\n              width: containerBounds.width\n            })}\n            width=\"100%\"\n            height=\"100%\"\n          >\n            <div\n              className={`curiosity-chartarea__tooltip-container ${updatedClassName}`}\n              ref={tooltipRef}\n              style={{\n                display:\n                  ((isOutsideGraphBottom || isOutsideGraphLeft || isOutsideGraphRight || isOutsideGraphTop) &&\n                    'none') ||\n                  'inline-block'\n              }}\n              xmlns=\"http://www.w3.org/1999/xhtml\"\n            >\n              <div\n                className={`curiosity-chartarea__tooltip curiosity-chartarea__tooltip-${tailPosition({\n                  x,\n                  y,\n                  width: containerBounds.width,\n                  tooltipWidth: tooltipBounds.width\n                })}`}\n              >\n                {content}\n              </div>\n            </div>\n          </foreignObject>\n        </g>\n      );\n    }\n\n    return <g />;\n  };\n};\n\nexport { chartTooltip as default, chartTooltip };\n","import { helpers } from '../../common/helpers';\n\n/**\n * A consistent mock event object to \"help\" PF.\n *\n * @memberof Form\n * @module FormHelpers\n */\n\n/**\n * Create a consistent mock event object modeled on JS behavior.\n *\n * @param {object} event\n * @param {boolean} persistEvent\n * @returns {{keyCode, currentTarget: {}, name, checked: *, id: *, persist: Function, value, target: {}}}\n */\nconst createMockEvent = (event, persistEvent = false) => {\n  const { checked, currentTarget = {}, keyCode, persist = helpers.noop, target = {} } = { ...event };\n  if (persistEvent) {\n    persist();\n  }\n\n  return {\n    checked: checked ?? currentTarget?.checked,\n    currentTarget,\n    keyCode,\n    id: currentTarget.id || currentTarget.name,\n    name: currentTarget.name,\n    persist,\n    value: currentTarget.value,\n    target\n  };\n};\n\n/**\n * Confirm a string has minimum length.\n *\n * @param {string} value\n * @param {number} characters\n * @returns {boolean}\n */\nconst doesNotHaveMinimumCharacters = (value, characters = 1) =>\n  (typeof value === 'string' && value.length < characters) || typeof value !== 'string';\n\nconst formHelpers = {\n  createMockEvent,\n  doesNotHaveMinimumCharacters\n};\n\nexport { formHelpers as default, formHelpers, createMockEvent, doesNotHaveMinimumCharacters };\n","import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useShallowCompareEffect } from 'react-use';\nimport {\n  ButtonVariant as PfButtonVariant,\n  Dropdown,\n  DropdownDirection,\n  DropdownItem,\n  DropdownPosition,\n  DropdownToggle,\n  DropdownToggleAction,\n  DropdownToggleCheckbox,\n  Select as PfSelect,\n  SelectOption as PfSelectOption,\n  SelectVariant\n} from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _findIndex from 'lodash/findIndex';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _memoize from 'lodash/memoize';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A bundled wrapper for PF Select, Dropdown.\n *\n * @memberof Form\n * @module Select\n */\n\n/**\n * Dropdown split button variants\n *\n * @type {{action: string, checkbox: string}}\n */\nconst SplitButtonVariant = {\n  action: 'action',\n  checkbox: 'checkbox'\n};\n\n/**\n * Dropdown toggle button variants\n *\n * @type {{secondary: string, default: string, plain: string, text: string, primary: string}}\n */\nconst ButtonVariant = PfButtonVariant;\n\n/**\n * Pass button variant as a select component option.\n *\n * @type {{secondary: string, default: string, plain: string, text: string, primary: string}}\n */\nconst SelectButtonVariant = ButtonVariant;\n\n/**\n * Pass direction as select component variant option.\n *\n * @type {{down: string, up: string}}\n */\nconst SelectDirection = DropdownDirection;\n\n/**\n * Pass position as select component variant option.\n *\n * @type {{left: string, right: string}}\n */\nconst SelectPosition = DropdownPosition;\n\n/**\n * FixMe: attributes on PF select and dropdown components do not allow data- attributes being passed\n * FixMe: PF dropdown, select attempt to break the ref attribute?\n * Moving from a class to func wrapper exposes a PF \"special props warning\", https://bit.ly/2n0hzWo\n */\n/**\n * Format options into a consumable array of objects.\n * Note: It is understood that for line 83'ish around \"updatedOptions\" we dump all values regardless\n * of whether they are plain objects, or not, into updatedOptions. This has been done for speed only,\n * one less check to perform.\n *\n * @param {object} params\n * @param {*|React.ReactNode} params.selectField\n * @param {object|Array} params.options\n * @param {string|number|Array} params.selectedOptions\n * @param {string} params.variant\n * @param {object} params.props\n * @returns {{options: Array|any, selected: Array}}\n */\nconst formatOptions = ({ selectField = { current: null }, options, selectedOptions, variant, ...props } = {}) => {\n  const { current: domElement = {} } = selectField;\n  const dataAttributes = Object.entries(props).filter(([key]) => /^data-/i.test(key));\n  const updatedOptions =\n    (_isPlainObject(options) && Object.entries(options).map(([key, value]) => ({ ...value, title: key, value }))) ||\n    (options && _cloneDeep(options)) ||\n    [];\n  const isSelectedOptionsStringNumber = typeof selectedOptions === 'string' || typeof selectedOptions === 'number';\n  const activateOptions =\n    (Array.isArray(selectedOptions) && selectedOptions) || (isSelectedOptionsStringNumber && [selectedOptions]) || [];\n\n  updatedOptions.forEach((option, index) => {\n    let convertedOption = option;\n\n    if (typeof convertedOption === 'string') {\n      convertedOption = {\n        title: option,\n        value: option\n      };\n\n      updatedOptions[index] = convertedOption;\n    } else if (typeof convertedOption.title === 'function') {\n      convertedOption.title = convertedOption.title();\n    }\n\n    convertedOption.text = convertedOption.text || convertedOption.title;\n    convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n    convertedOption.label = convertedOption.label || convertedOption.title;\n\n    if (activateOptions.length) {\n      let isSelected;\n\n      if (_isPlainObject(convertedOption.value)) {\n        isSelected = _findIndex(activateOptions, convertedOption.value) > -1;\n\n        if (!isSelected) {\n          const tempSearch = activateOptions.find(activeOption =>\n            Object.values(convertedOption.value).includes(activeOption)\n          );\n          isSelected = !!tempSearch;\n        }\n      } else {\n        isSelected = activateOptions.includes(convertedOption.value);\n      }\n\n      if (!isSelected) {\n        isSelected = activateOptions.includes(convertedOption.title);\n      }\n\n      updatedOptions[index].selected = isSelected;\n    }\n  });\n\n  let updateSelected;\n\n  if (variant === SelectVariant.single) {\n    updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n  } else {\n    updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n  }\n\n  if (domElement?.firstChild) {\n    dataAttributes.forEach(([key, value]) => domElement?.firstChild.setAttribute(key, value));\n  }\n\n  return {\n    options: updatedOptions,\n    selected: updateSelected\n  };\n};\n\n/**\n * Return assumed/expected PF select props.\n *\n * @param {object} params\n * @param {boolean} params.isDisabled\n * @param {string} params.placeholder\n * @param {object|Array} params.options\n * @returns {{}}\n */\nconst formatSelectProps = _memoize(({ isDisabled, placeholder, options } = {}) => {\n  const updatedProps = {};\n\n  if (!options || !options.length || isDisabled) {\n    updatedProps.isDisabled = true;\n  }\n\n  if (typeof placeholder === 'string' && placeholder) {\n    updatedProps.hasPlaceholderStyle = true;\n  }\n\n  return updatedProps;\n});\n\n/**\n * Format consistent dropdown button props.\n *\n * @param {object} params\n * @param {boolean} params.isDisabled\n * @param {Array} params.options\n * @param {string} params.buttonVariant\n * @param {Function} params.onSplitButton\n * @param {string} params.splitButtonCopy\n * @param {string} params.splitButtonVariant\n * @returns {*}\n */\nconst formatButtonProps = _memoize(\n  ({ isDisabled, options, buttonVariant, onSplitButton, splitButtonCopy, splitButtonVariant } = {}) => {\n    const buttonVariantPropLookup = {\n      default: { toggleVariant: 'default' },\n      plain: { isPlain: true, toggleIndicator: null },\n      primary: { toggleVariant: 'primary' },\n      secondary: { toggleVariant: 'secondary' },\n      text: { isText: true }\n    };\n\n    const splitButtonVariantPropLookup = {\n      action: {\n        splitButtonVariant: 'action',\n        splitButtonItems: [\n          <DropdownToggleAction onClick={onSplitButton} key=\"toggle-action\">\n            {splitButtonCopy}\n          </DropdownToggleAction>\n        ]\n      },\n      checkbox: {\n        splitButtonVariant: 'checkbox',\n        splitButtonItems: [\n          <DropdownToggleCheckbox\n            id={`toggle-action-${splitButtonCopy}`}\n            key=\"toggle-action\"\n            onClick={onSplitButton}\n            aria-label={splitButtonCopy}\n            placeholder={splitButtonCopy}\n          />\n        ]\n      }\n    };\n\n    const updatedProps = {\n      ...buttonVariantPropLookup[buttonVariant],\n      ...splitButtonVariantPropLookup[splitButtonVariant]\n    };\n\n    if (!options || !options.length || isDisabled) {\n      updatedProps.isDisabled = true;\n    }\n\n    return updatedProps;\n  }\n);\n\n/**\n * FixMe: PF has an inconsistency in how it applies props for the dropdown\n * Sometimes those props are on the toggle, sometimes those props are on the parent, little bit of guesswork.\n * Additionally, it's not filtering props so you'll throw the \"[HTML doesn't recognize attribute]\" error.\n */\n/**\n * Fix pf props inconsistency for dropdown button props.\n *\n * @param {object} formattedButtonProps\n * @returns {*}\n */\nconst formatButtonParentProps = (formattedButtonProps = {}) => {\n  const updatedButtonProps = formatButtonProps(formattedButtonProps);\n  delete updatedButtonProps.isDisabled;\n  delete updatedButtonProps.toggleIndicator;\n\n  return updatedButtonProps;\n};\n\n/**\n * A wrapper for Pf Select, and emulator for Pf Dropdown. Provides consistent restructured event data for onSelect callback\n * for both select and dropdown.\n *\n * @fires onDropdownSelect\n * @fires onSplitButton\n * @fires onToggle\n * @param {object} props\n * @param {string} props.ariaLabel\n * @param {string} props.buttonVariant\n * @param {string} props.className\n * @param {string} props.direction\n * @param {string} props.id\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isDropdownButton\n * @param {boolean} props.isFlipEnabled\n * @param {boolean} props.isInline\n * @param {boolean} props.isToggleText\n * @param {number} props.maxHeight\n * @param {string} props.name\n * @param {Function} props.onSelect\n * @param {Function} props.onSplitButton\n * @param {object|Array} props.options\n * @param {string} props.placeholder\n * @param {string} props.position\n * @param {number|string|Array} props.selectedOptions\n * @param {string} props.splitButtonVariant\n * @param {React.ReactNode|Function} props.toggleIcon\n * @param {string} props.variant\n * @param {object} props.props\n * @returns {React.ReactNode}\n */\nconst Select = ({\n  ariaLabel,\n  buttonVariant,\n  className,\n  direction,\n  id,\n  isDisabled,\n  isDropdownButton,\n  isFlipEnabled,\n  isInline,\n  isToggleText,\n  maxHeight,\n  name,\n  onSelect,\n  onSplitButton,\n  options: baseOptions,\n  placeholder,\n  position,\n  selectedOptions,\n  splitButtonVariant,\n  toggleIcon,\n  variant,\n  ...props\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [options, setOptions] = useState(baseOptions);\n  const [selected, setSelected] = useState([]);\n  const selectField = useRef();\n\n  useShallowCompareEffect(() => {\n    const { options: updatedOptions, selected: updatedSelected } = formatOptions({\n      selectField,\n      options: baseOptions,\n      selectedOptions,\n      variant,\n      ...props\n    });\n\n    setOptions(updatedOptions);\n    setSelected(updatedSelected);\n  }, [baseOptions, props, selectField, selectedOptions, variant]);\n\n  /**\n   * Open/closed state.\n   *\n   * @event onToggle\n   * @param {boolean} expanded\n   */\n  const onToggle = expanded => {\n    setIsExpanded(expanded);\n  };\n\n  /**\n   * Split button event handler.\n   *\n   * @event onSplitButton\n   * @param {object} event\n   */\n  const onUpdatedSplitButton = event => {\n    const updatedOptions = _cloneDeep(options);\n    onSplitButton({ ...createMockEvent(event), options: updatedOptions }, -1, updatedOptions);\n  };\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onDropdownSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  const onDropdownSelect = (event, titleSelection) => {\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(\n      option =>\n        (titleSelection && option.title === titleSelection) ||\n        event.currentTarget.querySelector('[data-title]')?.getAttribute('data-title') === option.title ||\n        event.currentTarget.innerText === option.title\n    );\n\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n    const mockTarget = {\n      id,\n      name: name || id,\n      value: mockUpdatedOptions[optionsIndex].value,\n      selected: (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n      selectedIndex: optionsIndex,\n      type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n      options: mockUpdatedOptions\n    };\n\n    if (variant === SelectVariant.checkbox) {\n      mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n    }\n\n    const mockEvent = {\n      ...mockTarget,\n      target: { ...mockTarget },\n      currentTarget: { ...mockTarget },\n      persist: helpers.noop\n    };\n\n    setOptions(updatedOptions);\n    setSelected(updateSelected);\n\n    onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n    if (variant === SelectVariant.single) {\n      setIsExpanded(false);\n    }\n  };\n\n  /**\n   * Apply dropdown.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderDropdownButton = () => (\n    <Dropdown\n      direction={direction}\n      isFlipEnabled={isFlipEnabled}\n      isOpen={isExpanded}\n      position={position}\n      toggle={\n        <DropdownToggle\n          onToggle={onToggle}\n          {...formatButtonProps({\n            isDisabled,\n            onSplitButton: onUpdatedSplitButton,\n            options,\n            buttonVariant,\n            splitButtonCopy: placeholder || ariaLabel,\n            splitButtonVariant\n          })}\n        >\n          {(!splitButtonVariant && placeholder) || (!SplitButtonVariant && ariaLabel)}\n        </DropdownToggle>\n      }\n      dropdownItems={\n        options?.map(option => (\n          <DropdownItem\n            onClick={onDropdownSelect}\n            key={window.btoa(`${option.title}-${option.value}`)}\n            id={window.btoa(`${option.title}-${option.value}`)}\n            data-value={(_isPlainObject(option.value) && JSON.stringify([option.value])) || option.value}\n            data-title={option.title}\n            data-description={option.description}\n            description={option.description}\n          >\n            {option.title}\n          </DropdownItem>\n        )) || []\n      }\n      {...formatButtonParentProps({ buttonVariant })}\n      {...props}\n    />\n  );\n\n  /**\n   * Apply select.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderSelect = () => (\n    <PfSelect\n      className={`curiosity-select-pf${(!isToggleText && '__no-toggle-text') || ''} ${\n        (direction === SelectDirection.down && 'curiosity-select-pf__position-down') || ''\n      } ${(position === SelectPosition.right && 'curiosity-select-pf__position-right') || ''} ${className}`}\n      variant={variant}\n      aria-label={ariaLabel}\n      onToggle={onToggle}\n      onSelect={onDropdownSelect}\n      selections={selected}\n      isFlipEnabled={isFlipEnabled}\n      isOpen={isExpanded}\n      toggleIcon={toggleIcon}\n      placeholderText={(typeof placeholder === 'string' && placeholder) || undefined}\n      {...{\n        direction,\n        maxHeight,\n        ...formatSelectProps({\n          isDisabled,\n          options: baseOptions,\n          placeholder\n        })\n      }}\n      {...props}\n    >\n      {options?.map(option => (\n        <PfSelectOption\n          key={window.btoa(`${option.title}-${option.value}`)}\n          id={window.btoa(`${option.title}-${option.value}`)}\n          value={option.title}\n          data-value={(_isPlainObject(option.value) && JSON.stringify([option.value])) || option.value}\n          data-title={option.title}\n          data-description={option.description}\n        />\n      )) || []}\n    </PfSelect>\n  );\n\n  return (\n    <div\n      ref={selectField}\n      className={`curiosity-select${(isInline && ' curiosity-select__inline') || ' curiosity-select__not-inline'}`}\n    >\n      {(isDropdownButton && renderDropdownButton()) || renderSelect()}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{isFlipEnabled: boolean, toggleIcon: (React.ReactNode|Function), className: string, onSplitButton: Function, ariaLabel: string,\n *     onSelect: Function, isToggleText: boolean, isDropdownButton: boolean, maxHeight: number, buttonVariant: string, name: string,\n *     options: Array|object, selectedOptions: Array|number|string, variant: string, isInline: boolean, id: string, isDisabled: boolean,\n *     placeholder: string, position: string, splitButtonVariant: string, direction: string}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  buttonVariant: PropTypes.oneOf(Object.values(ButtonVariant)),\n  className: PropTypes.string,\n  direction: PropTypes.oneOf(Object.values(SelectDirection)),\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isDropdownButton: PropTypes.bool,\n  isFlipEnabled: PropTypes.bool,\n  isInline: PropTypes.bool,\n  isToggleText: PropTypes.bool,\n  maxHeight: PropTypes.number,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  onSplitButton: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        description: PropTypes.any,\n        selected: PropTypes.bool,\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired\n      })\n    ),\n    PropTypes.shape({\n      description: PropTypes.any,\n      selected: PropTypes.bool,\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired\n    }),\n    PropTypes.object\n  ]),\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.any]),\n  position: PropTypes.oneOf(Object.values(SelectPosition)),\n  selectedOptions: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]))\n  ]),\n  splitButtonVariant: PropTypes.oneOf(Object.values(SplitButtonVariant)),\n  toggleIcon: PropTypes.element,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{isFlipEnabled: boolean, toggleIcon: null, className: string, onSplitButton: Function, ariaLabel: string, onSelect: Function,\n *     isToggleText: boolean, isDropdownButton: boolean, maxHeight: null, buttonVariant: string, name: null, options: Array,\n *     selectedOptions: null, variant: SelectVariant.single, isInline: boolean, id: string, isDisabled: boolean, placeholder: string,\n *     position: string, splitButtonVariant: null, direction: string}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  buttonVariant: ButtonVariant.default,\n  className: '',\n  direction: SelectDirection.down,\n  id: helpers.generateId(),\n  isDisabled: false,\n  isDropdownButton: false,\n  isFlipEnabled: false,\n  isInline: true,\n  isToggleText: true,\n  maxHeight: null,\n  name: null,\n  onSelect: helpers.noop,\n  onSplitButton: helpers.noop,\n  options: [],\n  placeholder: 'Select option',\n  position: SelectPosition.left,\n  selectedOptions: null,\n  splitButtonVariant: null,\n  toggleIcon: null,\n  variant: SelectVariant.single\n};\n\nexport {\n  Select as default,\n  Select,\n  ButtonVariant,\n  formatOptions,\n  formatButtonProps,\n  formatSelectProps,\n  SelectDirection,\n  SelectPosition,\n  SelectVariant,\n  SelectButtonVariant,\n  SplitButtonVariant\n};\n","import moment from 'moment';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { ChartTypeVariant } from '../chart/chart';\nimport {\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * @memberof GraphCard\n * @module GraphCardHelpers\n */\n\n/**\n * Generate a consistent chart identifier from API.\n *\n * @param {object} params\n * @param {boolean} params.isCapacity\n * @param {string} params.metric\n * @param {string} params.productId\n * @param {object} params.query\n * @returns {string}\n */\nconst generateChartIds = ({ isCapacity, metric, productId, query = {} } = {}) => {\n  const metricCategory = query?.[RHSM_API_QUERY_SET_TYPES.CATEGORY] || undefined;\n  return `${(isCapacity && 'threshold_') || ''}${metric}${(metricCategory && `_${metricCategory}`) || ''}${\n    (productId && `_${productId}`) || ''\n  }`;\n};\n\n/**\n * Is metric associated with a toolbar filter\n *\n * @param {object} params\n * @param {object} params.query\n * @returns {boolean}\n */\nconst generateIsToolbarFilter = ({ query = {} } = {}) => (query?.[RHSM_API_QUERY_SET_TYPES.CATEGORY] && true) || false;\n\n/**\n * ToDo: clean up remaining isStandalone, metric props.\n * These two properties were used to distinguish the previous product config graph card\n * layouts.\n * - isStandalone: undefined,\n * - metric: undefined,\n */\n/**\n * Update chart/graph filters with core settings and styling.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.settings\n * @param {string} params.productId\n * @returns {{standaloneFilters: Array, groupedFilters: object}}\n */\nconst generateChartSettings = ({ filters = [], settings: graphCardSettings = {}, productId } = {}) => {\n  const filtersSettings = [];\n  const filter = ({ metric, settings: combinedSettings, ...filterSettings } = {}) => {\n    if (!metric) {\n      return;\n    }\n    const { isMultiMetric, isFirst, isLast, ...remainingCombinedSettings } = combinedSettings;\n    const updatedChartType = filterSettings?.chartType || ChartTypeVariant.area;\n    const isThreshold = filterSettings?.chartType === ChartTypeVariant.threshold;\n    const isAxisLabel =\n      remainingCombinedSettings?.yAxisChartLabel ||\n      remainingCombinedSettings?.xAxisChartLabel ||\n      filterSettings?.yAxisChartLabel ||\n      filterSettings?.xAxisChartLabel;\n    const baseFilterSettings = {\n      chartType: updatedChartType,\n      id: generateChartIds({ isCapacity: isThreshold, metric, productId, query: filterSettings?.query }),\n      isStacked: !isThreshold,\n      isThreshold,\n      isCapacity: isThreshold,\n      metric,\n      strokeWidth: 2,\n      isToolbarFilter: generateIsToolbarFilter({ query: filterSettings?.query })\n    };\n\n    if (isThreshold) {\n      baseFilterSettings.stroke = chartColorGreenDark.value;\n      baseFilterSettings.strokeDasharray = '4,3';\n      baseFilterSettings.strokeWidth = 3;\n    }\n\n    if (isFirst) {\n      filtersSettings.push({\n        settings: {\n          ...(isAxisLabel && {\n            padding: {\n              bottom: 75,\n              left: 75,\n              right: 45,\n              top: 45\n            }\n          }),\n          ...remainingCombinedSettings,\n          isMetricDisplay: remainingCombinedSettings?.isMetricDisplay ?? remainingCombinedSettings?.cards?.length > 0,\n          isMultiMetric,\n          isStandalone: undefined,\n          metric: undefined,\n          groupMetric: new Set([metric]),\n          metrics: [\n            {\n              ...baseFilterSettings,\n              ...filterSettings\n            }\n          ],\n          stringId: (isMultiMetric && productId) || baseFilterSettings.id\n        }\n      });\n    } else {\n      const currentLastFiltersSettingsEntry = filtersSettings?.[filtersSettings.length - 1]?.settings;\n\n      if (currentLastFiltersSettingsEntry) {\n        currentLastFiltersSettingsEntry.groupMetric.add(metric);\n        currentLastFiltersSettingsEntry.metrics.push({\n          ...baseFilterSettings,\n          ...filterSettings\n        });\n      }\n    }\n\n    if (isLast) {\n      const lastFiltersSettingsEntry = filtersSettings?.[filtersSettings.length - 1]?.settings;\n      lastFiltersSettingsEntry.groupMetric = Array.from(lastFiltersSettingsEntry?.groupMetric).sort();\n    }\n  };\n\n  filters.forEach(({ filters: groupedMetrics, settings: groupedMetricsSettings, ...remainingSettings }) => {\n    if (Array.isArray(groupedMetrics)) {\n      groupedMetrics.forEach((metricFilter, index) => {\n        filter({\n          ...remainingSettings,\n          ...metricFilter,\n          settings: {\n            ...graphCardSettings,\n            ...remainingSettings,\n            ...groupedMetricsSettings,\n            ...metricFilter,\n            isFirst: index === 0,\n            isLast: groupedMetrics.length - 1 === index,\n            isMultiMetric: groupedMetrics.length > 1\n          }\n        });\n      });\n      return;\n    }\n\n    filter({\n      ...remainingSettings,\n      settings: {\n        ...graphCardSettings,\n        ...remainingSettings,\n        isFirst: true,\n        isLast: true,\n        isMultiMetric: false\n      }\n    });\n  });\n\n  return {\n    filtersSettings\n  };\n};\n\n/**\n * Returns x-axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity } = {}) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x-axis ticks.\n *\n * @param {object} params\n * @param {Function} params.callback\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ callback, date, granularity, tick, previousDate } = {}) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  if (callback) {\n    return callback({ callback, date, granularity, tick, previousDate });\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y-axis ticks.\n *\n * @param {object} params\n * @param {Function} params.callback\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormat = ({ callback, tick } = {}) => {\n  if (callback) {\n    return callback({ tick });\n  }\n\n  return helpers\n    .numberDisplay(tick)\n    ?.format({\n      average: true,\n      mantissa: 1,\n      trimMantissa: true,\n      lowPrecision: false\n    })\n    ?.toUpperCase();\n};\n\n/**\n * Generate base chart component props.\n *\n * @param {object} params\n * @param {object} params.settings\n * @param {string} params.granularity\n * @returns {object}\n */\nconst generateExtendedChartSettings = ({ settings, granularity } = {}) => ({\n  ...settings,\n  xAxisLabelIncrement: getChartXAxisLabelIncrement(granularity),\n  xAxisTickFormat: ({ item, previousItem, tick }) =>\n    xAxisTickFormat({\n      callback: settings?.xAxisTickFormat,\n      tick,\n      date: item.date,\n      previousDate: previousItem.date,\n      granularity\n    }),\n  yAxisTickFormat: ({ tick }) =>\n    yAxisTickFormat({\n      callback: settings?.yAxisTickFormat,\n      tick\n    })\n});\n\nconst graphCardHelpers = {\n  generateChartIds,\n  generateChartSettings,\n  generateExtendedChartSettings,\n  generateIsToolbarFilter,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  generateChartIds,\n  generateChartSettings,\n  generateExtendedChartSettings,\n  generateIsToolbarFilter,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-http-backend';\nimport { initReactI18next } from 'react-i18next';\nimport { useMount } from 'react-use';\nimport { helpers } from '../../common/helpers';\nimport { EMPTY_CONTEXT, translate, translateComponent } from './i18nHelpers';\n\n/**\n * Populate, load, remote locale strings.\n *\n * @memberof Components\n * @module i18n\n * @property {module} i18nHelpers\n */\n\n/**\n * Load I18n.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.fallbackLng\n * @param {string} props.loadPath\n * @param {string} props.locale\n * @returns {React.ReactNode}\n */\nconst I18n = ({ children, fallbackLng, loadPath, locale }) => {\n  const [initialized, setInitialized] = useState(false);\n\n  /**\n   * Initialize i18next\n   */\n  useMount(async () => {\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: undefined,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      //\n    }\n\n    setInitialized(true);\n  });\n\n  /**\n   * Update locale.\n   */\n  useEffect(() => {\n    if (initialized && locale) {\n      try {\n        i18next.changeLanguage(locale);\n      } catch (e) {\n        //\n      }\n    }\n  }, [initialized, locale]);\n\n  return (initialized && children) || <React.Fragment />;\n};\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: React.ReactNode, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent, EMPTY_CONTEXT };\n","import React from 'react';\nimport i18next from 'i18next';\nimport { Trans } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\n/**\n * @memberof i18n\n * @module i18nHelpers\n */\n\n/**\n * Check to help provide an empty context.\n *\n * @type {string}\n */\nconst EMPTY_CONTEXT = 'LOCALE_EMPTY_CONTEXT';\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string|Array} key\n * @param {string|object|Array} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) => {\n  const updatedKey = (Array.isArray(key) && `[${key}]`) || key;\n  const updatedValue =\n    (typeof value === 'string' && value) ||\n    (Array.isArray(value) && `[${value}]`) ||\n    (Object.keys(value || '').length && JSON.stringify(value)) ||\n    '';\n  const updatedComponents = (components && `${components}`) || '';\n\n  return `t(${updatedKey}${(updatedValue && `, ${updatedValue}`) || ''}${\n    (updatedComponents && `, ${updatedComponents}`) || ''\n  })`;\n};\n\n/**\n * Split a string on underscore.\n *\n * @param {string} value\n * @param {object} settings\n * @param {string} settings.emptyContextValue\n * @returns {string|string[]}\n */\nconst splitContext = (value, { emptyContextValue = EMPTY_CONTEXT } = {}) => {\n  if (typeof value === 'string' && value !== emptyContextValue && /_/.test(value)) {\n    return value.split('_');\n  }\n  return value;\n};\n\n/**\n * Parse extend context arrays/lists, and apply values to a concatenated translate key.\n *\n * @param {string|Array} translateKey\n * @param {*|string|Array} context\n * @param {object} settings\n * @param {string} settings.emptyContextValue\n * @param {Function} settings.splitContext\n * @returns {{translateKey: string, context: (string|string[])}}\n */\nconst parseContext = (\n  translateKey,\n  context,\n  { emptyContextValue = EMPTY_CONTEXT, splitContext: aliasSplitContext = splitContext } = {}\n) => {\n  let updatedTranslateKey = translateKey;\n  let updatedContext = context;\n\n  if (updatedContext) {\n    updatedContext = aliasSplitContext(updatedContext);\n  }\n\n  if (Array.isArray(updatedContext)) {\n    const tempContext = updatedContext\n      .map(value => (value === emptyContextValue && ' ') || aliasSplitContext(value))\n      .flat()\n      .filter(value => typeof value === 'string' && value.length > 0);\n\n    if (tempContext?.length > 1) {\n      const lastContext = tempContext.pop();\n\n      if (Array.isArray(updatedTranslateKey)) {\n        updatedTranslateKey[0] = `${updatedTranslateKey[0]}_${tempContext.join('_')}`;\n      } else {\n        updatedTranslateKey = `${updatedTranslateKey}_${tempContext.join('_')}`;\n      }\n\n      updatedContext = lastContext;\n    } else {\n      updatedContext = tempContext.join('_');\n    }\n  } else if (updatedContext === emptyContextValue) {\n    updatedContext = ' ';\n  }\n\n  return {\n    context: updatedContext,\n    translateKey: updatedTranslateKey\n  };\n};\n\n/**\n * Parse a translation key. If an array, filter for defined strings.\n *\n * @param {*|string|Array} translateKey\n * @returns {*}\n */\nconst parseTranslateKey = translateKey => {\n  let updatedTranslateKey = translateKey;\n\n  if (Array.isArray(updatedTranslateKey)) {\n    updatedTranslateKey = updatedTranslateKey.filter(value => typeof value === 'string' && value.length > 0);\n  }\n\n  return updatedTranslateKey;\n};\n\n/**\n * Return a test element wrapper;\n *\n * @param {object} params\n * @param {string|Array} params.defaultTestId\n * @param {string} params.testId\n * @returns {null|React.ReactNode}\n */\nconst setI18nTestElement = ({ defaultTestId, testId }) => {\n  if (typeof testId === 'boolean' && defaultTestId) {\n    const updatedDataTest = (Array.isArray(defaultTestId) && defaultTestId[0]) || defaultTestId;\n    // eslint-disable-next-line\n    return function TestElementBool({ children }) {\n      return (\n        <span key={updatedDataTest} className=\"curiosity-translate__test-id\" data-test={updatedDataTest}>\n          {children}\n        </span>\n      );\n    };\n  }\n\n  if (typeof testId === 'string' && testId.length > 0) {\n    // eslint-disable-next-line\n    return function TestElementString({ children }) {\n      return (\n        <span key={testId} className=\"curiosity-translate__test-id\" data-test={testId}>\n          {children}\n        </span>\n      );\n    };\n  }\n\n  if (React.isValidElement(testId)) {\n    // eslint-disable-next-line\n    return function TestElementNode({ children }) {\n      return React.cloneElement(testId, {}, children);\n    };\n  }\n\n  return null;\n};\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string|Array} translateKey A key reference, or an array of a primary key with fallback keys.\n * @param {string|object|Array} values\n *     - A default string if the key can't be found.\n *     - An object with i18next settings. i.e. \"{ context: Array|string, testId: boolean|string|React.ReactNode }\"\n *     - An array of objects (key/value) pairs used to replace string tokens. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @param {object} settings\n * @param {*} settings.i18next\n * @param {Function} settings.isDebug\n * @param {Function} settings.noopTranslate\n * @param {Function} settings.parseContext\n * @param {Function} settings.parseTranslateKey\n * @returns {string|React.ReactNode}\n */\nconst translate = (\n  translateKey,\n  values = null,\n  components,\n  {\n    i18next: aliasI18next = i18next,\n    isDebug = helpers.TEST_MODE,\n    noopTranslate: aliasNoopTranslate = noopTranslate,\n    parseContext: aliasParseContext = parseContext,\n    parseTranslateKey: aliasParseTranslateKey = parseTranslateKey\n  } = {}\n) => {\n  const updatedValues = values || {};\n  const baseUpdatedTranslateKey = aliasParseTranslateKey(translateKey);\n  let updatedTranslateKey = baseUpdatedTranslateKey;\n  let TestElement;\n\n  if (updatedValues?.context) {\n    const { context: parsedContext, translateKey: parsedAgainTranslateKey } = aliasParseContext(\n      updatedTranslateKey,\n      updatedValues.context\n    );\n    updatedTranslateKey = parsedAgainTranslateKey;\n    updatedValues.context = parsedContext;\n  }\n\n  if (isDebug) {\n    return aliasNoopTranslate(updatedTranslateKey, updatedValues, components);\n  }\n\n  if (updatedValues?.testId) {\n    TestElement = setI18nTestElement({ defaultTestId: baseUpdatedTranslateKey, testId: updatedValues.testId });\n  }\n\n  if (components && aliasI18next.store) {\n    if (TestElement) {\n      return (\n        <TestElement>\n          <Trans i18nKey={updatedTranslateKey} values={updatedValues} components={components} />\n        </TestElement>\n      );\n    }\n\n    return <Trans i18nKey={updatedTranslateKey} values={updatedValues} components={components} />;\n  }\n\n  if (aliasI18next.store) {\n    if (TestElement) {\n      return <TestElement>{aliasI18next.t(updatedTranslateKey, updatedValues)}</TestElement>;\n    }\n\n    return aliasI18next.t(updatedTranslateKey, updatedValues);\n  }\n\n  return `t([${updatedTranslateKey}])`;\n};\n\n/**\n * Apply string replacements against a component, HOC.\n *\n * @param {React.ReactNode} Component\n * @param {object} settings\n * @param {*} settings.i18next\n * @param {Function} settings.noopTranslate\n * @returns {React.ReactNode}\n */\nconst translateComponent = (\n  Component,\n  { i18next: aliasI18next = i18next, noopTranslate: aliasNoopTranslate = noopTranslate } = {}\n) => {\n  const withTranslation = ({ ...props }) => (\n    <Component\n      {...props}\n      t={(aliasI18next.store && translate) || aliasNoopTranslate}\n      i18n={(aliasI18next.store && aliasI18next) || helpers.noop}\n    />\n  );\n\n  withTranslation.displayName = 'withTranslation';\n  return withTranslation;\n};\n\nconst i18nHelpers = {\n  EMPTY_CONTEXT,\n  noopTranslate,\n  parseContext,\n  parseTranslateKey,\n  splitContext,\n  translate,\n  translateComponent\n};\n\nexport {\n  i18nHelpers as default,\n  i18nHelpers,\n  EMPTY_CONTEXT,\n  noopTranslate,\n  parseContext,\n  parseTranslateKey,\n  splitContext,\n  translate,\n  translateComponent\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { TableVariant } from '@patternfly/react-table';\nimport { PageHeader, PageLayout } from '../pageLayout/pageLayout';\nimport { TableSkeleton } from '../table/tableSkeleton';\n\n/**\n * Loading display for charts, copy, tables, etc.\n *\n * @memberof Components\n * @module Loader\n */\n\n/**\n * Render skeleton and spinner loaders.\n *\n * @param {object} props\n * @param {string} props.skeletonProps\n * @param {object} props.tableProps\n * @param {string} props.variant\n * @returns {React.ReactNode}\n */\nconst Loader = ({ skeletonProps, tableProps, variant }) => {\n  switch (variant) {\n    case 'chart':\n    case 'graph':\n      return (\n        <div className=\"curiosity-skeleton-container curiosity-skeleton-container-chart\">\n          <Skeleton size={SkeletonSize.lg} />\n          <Skeleton size={SkeletonSize.md} />\n        </div>\n      );\n    case 'paragraph':\n      return (\n        <div className=\"curiosity-skeleton-container\">\n          <Skeleton size={SkeletonSize.xs} />\n          <Skeleton size={SkeletonSize.sm} />\n          <Skeleton size={SkeletonSize.md} />\n          <Skeleton size={SkeletonSize.lg} />\n        </div>\n      );\n    case 'skeleton':\n      return <Skeleton {...skeletonProps} />;\n    case 'table':\n      return <TableSkeleton {...tableProps} />;\n    case 'title':\n      return (\n        <PageLayout>\n          <PageHeader>\n            <Skeleton size=\"sm\" />\n          </PageHeader>\n        </PageLayout>\n      );\n    case 'spinner':\n    default:\n      return <Spinner />;\n  }\n};\n\n/**\n * Prop types.\n *\n * @type {{variant: string, skeletonProps: object, tableProps: object}}\n */\nLoader.propTypes = {\n  skeletonProps: PropTypes.shape({\n    size: PropTypes.oneOf([...Object.values(SkeletonSize)])\n  }),\n  tableProps: PropTypes.shape({\n    borders: PropTypes.bool,\n    className: PropTypes.string,\n    colCount: PropTypes.number,\n    colWidth: PropTypes.array,\n    rowCount: PropTypes.number,\n    variant: PropTypes.oneOf([...Object.values(TableVariant)])\n  }),\n  variant: PropTypes.oneOf(['chart', 'graph', 'paragraph', 'skeleton', 'spinner', 'table', 'title'])\n};\n\n/**\n * Default props.\n *\n * @type {{skeletonProps: {size: *}, variant: string, tableProps: {}}}\n */\nLoader.defaultProps = {\n  skeletonProps: {\n    size: SkeletonSize.sm\n  },\n  tableProps: {},\n  variant: 'spinner'\n};\n\nexport { Loader as default, Loader, SkeletonSize };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * Page empty state message display.\n *\n * @memberof Components\n * @module MessageView\n */\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view, page empty state.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {React.ReactNode|Function} props.icon\n * @param {string} props.message\n * @param {string} props.pageTitle\n * @param {string} props.title\n * @returns {React.ReactNode}\n */\nconst MessageView = ({ children, icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PageSection>\n      {children ?? (\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          {icon && <EmptyStateIcon icon={icon} />}\n          {title && (\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {title}\n            </Title>\n          )}\n          {message && <EmptyStateBody>{message}</EmptyStateBody>}\n        </EmptyState>\n      )}\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, icon: React.ReactNode|Function, message: string, pageTitle: string, title: string}}\n */\nMessageView.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, icon: null, message: null, pageTitle: null, title: null}}\n */\nMessageView.defaultProps = {\n  children: null,\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Brand,\n  Button,\n  Card,\n  CardHeaderMain,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Flex,\n  FlexItem,\n  Form,\n  ActionGroup,\n  Spinner,\n  Title\n} from '@patternfly/react-core';\nimport { useSession } from '../authentication/authenticationContext';\nimport { reduxActions, storeHooks } from '../../redux';\nimport { translate } from '../i18n/i18n';\nimport { PageLayout } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\nimport graphPng2x from '../../images/graph2x.png';\nimport graphPng4x from '../../images/graph4x.png';\n\n/**\n * Opt-in view\n *\n * @memberof Components\n * @module OptinView\n */\n\n/**\n * An account opt-in view.\n *\n * @param {object} props\n * @param {Function} props.t\n * @param {Function} props.updateAccountOptIn\n * @param {Function} props.useDispatch\n * @param {Function} props.useSelectorsResponse\n * @param {Function} props.useSession\n * @fires onSubmitOptIn\n * @returns {React.ReactNode}\n */\nconst OptinView = ({\n  t,\n  updateAccountOptIn,\n  useDispatch: useAliasDispatch,\n  useSelectorsResponse: useAliasSelectorsResponse,\n  useSession: useAliasSession\n}) => {\n  const dispatch = useAliasDispatch();\n  const { errorStatus } = useAliasSession();\n  const { error, fulfilled, pending } = useAliasSelectorsResponse(({ user }) => user?.optin);\n\n  /**\n   * Submit and update account opt-in.\n   *\n   * @event onSubmitOptIn\n   * @returns {void}\n   */\n  const onSubmitOptIn = () => updateAccountOptIn()(dispatch);\n\n  /**\n   * Render opt-in form states.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderOptinForm = () => {\n    const disableButton = errorStatus !== 403;\n\n    if (pending) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button variant=\"primary\" isDisabled>\n              <Spinner size=\"sm\" /> {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n        </Form>\n      );\n    }\n\n    if (error) {\n      return (\n        <p>\n          {t('curiosity-optin.cardIsErrorDescription', { appName: helpers.UI_DISPLAY_NAME }, [\n            <Button isInline component=\"a\" variant=\"link\" target=\"_blank\" href={helpers.UI_LINK_CONTACT_US} />\n          ])}\n        </p>\n      );\n    }\n\n    if (disableButton || fulfilled) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button data-test=\"optinButtonSubmitDisabled\" variant=\"primary\" isDisabled>\n              {t('curiosity-optin.buttonIsActive', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n          {fulfilled && <p>{t('curiosity-optin.cardIsActiveDescription')}</p>}\n        </Form>\n      );\n    }\n\n    return (\n      <Form>\n        <ActionGroup>\n          <Button data-test=\"optinButtonSubmit\" variant=\"primary\" onClick={onSubmitOptIn}>\n            {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n          </Button>\n        </ActionGroup>\n      </Form>\n    );\n  };\n\n  /**\n   * Render tour copy and button.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderTour = () => (\n    <Card className=\"curiosity-optin-tour\">\n      <CardHeader>\n        <CardHeaderMain>\n          <Brand\n            srcSet={`${graphPng4x} 1064w, ${graphPng2x} 600w`}\n            src={graphPng4x}\n            alt={t('curiosity-optin.tourTitleImageAlt')}\n            aria-hidden\n            className=\"curiosity-optin-image\"\n          />\n        </CardHeaderMain>\n      </CardHeader>\n      <CardTitle>\n        <Title headingLevel=\"h3\" size=\"2xl\">\n          {t('curiosity-optin.tourTitle')}\n        </Title>\n      </CardTitle>\n      <CardBody>{t('curiosity-optin.tourDescription')}</CardBody>\n      <CardFooter>\n        <Button data-test=\"optinButtonTour\" variant=\"secondary\" className=\"uxui-curiosity__button-tour\">\n          {t('curiosity-optin.buttonTour')}\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n\n  return (\n    <PageLayout>\n      <Card data-test=\"optinView\">\n        <Flex>\n          <Flex flex={{ default: 'flex_2' }}>\n            <FlexItem>\n              <CardTitle key=\"heading1Title\">\n                <Title headingLevel=\"h1\" size=\"2xl\">\n                  {t('curiosity-optin.cardTitle', { appName: helpers.UI_DISPLAY_NAME })}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading1Desc\">\n                {t('curiosity-optin.cardDescription', { appName: helpers.UI_DISPLAY_NAME })}\n              </CardBody>\n\n              <CardTitle key=\"heading2Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardSeeTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading2Desc\">{t('curiosity-optin.cardSeeDescription')}</CardBody>\n\n              <CardTitle key=\"heading3Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardReportTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading3Desc\">{t('curiosity-optin.cardReportDescription')}</CardBody>\n\n              <CardTitle key=\"heading4Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardFilterTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading4Desc\">{t('curiosity-optin.cardFilterDescription')}</CardBody>\n\n              <CardFooter>{renderOptinForm()}</CardFooter>\n            </FlexItem>\n          </Flex>\n          <Flex flex={{ default: 'flex_1' }} alignSelf={{ default: 'alignSelfCenter' }}>\n            <FlexItem>\n              <CardBody>{renderTour()}</CardBody>\n            </FlexItem>\n          </Flex>\n        </Flex>\n      </Card>\n    </PageLayout>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useSession: Function, t: Function, updateAccountOptIn: Function, useDispatch: Function, useSelectorsResponse: Function}}\n */\nOptinView.propTypes = {\n  t: PropTypes.func,\n  updateAccountOptIn: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelectorsResponse: PropTypes.func,\n  useSession: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useSession: Function, t: Function, updateAccountOptIn: Function, useDispatch: Function, useSelectorsResponse: Function}}\n */\nOptinView.defaultProps = {\n  t: translate,\n  updateAccountOptIn: reduxActions.user.updateAccountOptIn,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelectorsResponse: storeHooks.reactRedux.useSelectorsResponse,\n  useSession\n};\n\nexport { OptinView as default, OptinView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { helpers } from '../../common';\n\n/**\n * @memberof PageLayout\n * @module PageColumns\n */\n\n/**\n * Render page columns based on children.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageColumns = ({ children, className }) => (\n  <Flex\n    alignItems={{ sm: 'alignItemsStretch' }}\n    spaceItems={{ sm: 'spaceItemsNone' }}\n    className={`curiosity-page-columns ${className}`}\n  >\n    {React.Children.toArray(children)\n      .filter(child => React.isValidElement(child))\n      .map(child => (\n        <FlexItem\n          key={(child.key && `page-column-${child.key}`) || helpers.generateId()}\n          grow={{ sm: 'grow' }}\n          className=\"curiosity-page-columns-column\"\n        >\n          {child}\n        </FlexItem>\n      ))}\n  </Flex>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageColumns.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageColumns.defaultProps = {\n  children: [],\n  className: ''\n};\n\nexport { PageColumns as default, PageColumns };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader as RcsPageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * @memberof PageLayout\n * @module PageHeader\n */\n\n/**\n * Render a platform page header.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {React.ReactNode}\n */\nconst PageHeader = ({ children, productLabel, t }) => (\n  <RcsPageHeader>\n    <Flex justifyContent={{ sm: 'justifyContentSpaceBetween' }}>\n      <FlexItem>\n        <PageHeaderTitle title={children} className=\"pf-u-mb-sm\" />\n      </FlexItem>\n    </Flex>\n    {productLabel && (\n      <p>\n        {t(`curiosity-view.subtitle`, { appName: helpers.UI_DISPLAY_NAME, context: productLabel }, [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_LEARN_MORE}\n          />\n        ])}\n      </p>\n    )}\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, productLabel: string, t: Function}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{includeTour: boolean, productLabel: null, t: translate}}\n */\nPageHeader.defaultProps = {\n  productLabel: null,\n  t: translate\n};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageColumns } from './pageColumns';\nimport { PageMessages } from './pageMessages';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * Page layout, organize header, columns, messages, sections, and toolbar.\n *\n * @memberof Components\n * @module PageLayout\n * @property {module} PageColumns\n * @property {module} PageHeader\n * @property {module} PageMessages\n * @property {module} PageSection\n * @property {module} PageToolbar\n */\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageLayout = ({ children, className }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageMessages)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main padding={{ default: 'noPadding' }} className={`curiosity ${className}`}>\n      {React.Children.toArray(children).filter(\n        child => child.type !== PageHeader && child.type !== PageMessages && child.type !== PageToolbar\n      )}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageLayout.defaultProps = {\n  className: ''\n};\n\nexport { PageLayout as default, PageLayout, PageColumns, PageHeader, PageMessages, PageSection, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * @memberof PageLayout\n * @module PageMessages\n */\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageMessages = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-messages ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageMessages.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageMessages.defaultProps = {\n  className: ''\n};\n\nexport { PageMessages as default, PageMessages };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * @memberof PageLayout\n * @module PageSection\n */\n\n/**\n * Render a platform page section.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageSection = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-section ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageSection.defaultProps = {\n  className: ''\n};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * @memberof PageLayout\n * @module PageToolbar\n */\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageToolbar = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-toolbar ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageToolbar.defaultProps = {\n  className: ''\n};\n\nexport { PageToolbar as default, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Navigate, Routes, Route } from 'react-router-dom';\nimport { useSetRouteDetail } from './routerContext';\nimport { routerHelpers } from './routerHelpers';\nimport { Loader } from '../loader/loader';\n\n/**\n * Route component loader.\n *\n * @memberof Components\n * @module Router\n * @property {module} RouterContext\n * @property {module} RouterHelpers\n */\n\n/**\n * Create and load routes. Start cycle for loading product configuration via hook by setting route details.\n *\n * @param {object} props\n * @param {object} props.redirectRoute\n * @param {Array} props.routes\n * @param {Function} props.useSetRouteDetail\n * @returns {React.ReactNode}\n */\nconst Router = ({ redirectRoute, routes, useSetRouteDetail: useAliasSetRouteDetail } = {}) => {\n  useAliasSetRouteDetail();\n\n  const updatedRoutes = routes.map(item => {\n    const View = routerHelpers.importView(item.component);\n    return <Route key={item.path} path={item.path} element={<View />} />;\n  });\n\n  return (\n    <React.Suspense fallback={<Loader variant=\"title\" />}>\n      <Routes>\n        {updatedRoutes}\n        {redirectRoute?.path && redirectRoute?.redirect && (\n          <Route key=\"redirect\" path={redirectRoute.path} element={<Navigate replace to={redirectRoute.redirect} />} />\n        )}\n      </Routes>\n    </React.Suspense>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{routes: Array<{component: string, path: string}>, redirectRoute: { path: string, redirect: string },\n *     useSetRouteDetail: Function}}\n */\nRouter.propTypes = {\n  redirectRoute: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    redirect: PropTypes.string.isRequired\n  }),\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      component: PropTypes.string.isRequired,\n      disabled: PropTypes.bool,\n      path: PropTypes.string.isRequired\n    })\n  ),\n  useSetRouteDetail: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array, redirectRoute: object, useSetRouteDetail: Function}}\n */\nRouter.defaultProps = {\n  redirectRoute: routerHelpers.redirectRoute,\n  routes: routerHelpers.routes,\n  useSetRouteDetail\n};\n\nexport { Router as default, Router };\n","import { useCallback, useEffect, useState } from 'react';\nimport {\n  useLocation as useLocationRRD,\n  useNavigate as useRRDNavigate,\n  useSearchParams as useRRDSearchParams\n} from 'react-router-dom';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common/helpers';\nimport { storeHooks, reduxTypes } from '../../redux';\nimport { translate } from '../i18n/i18n';\n\n/**\n * @memberof Router\n * @module RouterContext\n */\n\n/**\n * Combine react-router-dom useLocation with actual window location.\n * Focused on exposing replace and href.\n *\n * @param {object} options\n * @param {Function} options.useLocation\n * @param {*} options.windowLocation\n * @returns {{_id, search, hash}}\n */\nconst useLocation = ({\n  useLocation: useAliasLocation = useLocationRRD,\n  windowLocation: aliasWindowLocation = window.location\n} = {}) => {\n  const location = useAliasLocation();\n  const windowLocation = aliasWindowLocation;\n  const [updatedLocation, setUpdatedLocation] = useState({});\n\n  useEffect(() => {\n    const _id = helpers.generateHash(windowLocation);\n    if (updatedLocation?._id !== _id) {\n      setUpdatedLocation({\n        ...location,\n        ...windowLocation,\n        _id,\n        hash: location?.hash || '',\n        search: location?.search || ''\n      });\n    }\n  }, [location, updatedLocation?._id, windowLocation]);\n\n  return updatedLocation;\n};\n\n/**\n * useNavigate wrapper. Leverage useNavigate for a modified router with parallel \"state\"\n * update. Dispatches the same type leveraged by the initialize hook, useSetRouteDetail.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useLocation\n * @param {Function} options.useNavigate\n * @returns {Function}\n */\nconst useNavigate = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useLocation: useAliasLocation = useLocation,\n  useNavigate: useAliasNavigate = useRRDNavigate\n} = {}) => {\n  const { search = '', hash = '' } = useAliasLocation();\n  const navigate = useAliasNavigate();\n  const dispatch = useAliasDispatch();\n\n  return useCallback(\n    (pathLocation, options) => {\n      const pathName = (typeof pathLocation === 'string' && pathLocation) || pathLocation?.pathname;\n      const { firstMatch } = routerHelpers.getRouteConfigByPath({ pathName });\n\n      if (firstMatch?.productPath) {\n        dispatch({\n          type: reduxTypes.app.SET_PRODUCT,\n          config: firstMatch?.productPath\n        });\n\n        return navigate(`${routerHelpers.pathJoin('.', firstMatch?.productPath)}${search}${hash}`, options);\n      }\n\n      return navigate((pathName && `${pathName}${search}${hash}`) || pathLocation, options);\n    },\n    [dispatch, hash, navigate, search]\n  );\n};\n\n/**\n * Get a route detail from \"state\". Consume useSetRouteDetail and set basis for product\n * configuration context.\n *\n * @param {object} options\n * @param {Function} options.t\n * @param {Function} options.useChrome\n * @param {Function} options.useSelectors\n * @returns {{baseName: string, errorRoute: object}}\n */\nconst useRouteDetail = ({\n  t = translate,\n  useChrome: useAliasChrome = useChrome,\n  useSelectors: useAliasSelectors = storeHooks.reactRedux.useSelectors\n} = {}) => {\n  const { getBundleData = helpers.noop, updateDocumentTitle = helpers.noop } = useAliasChrome();\n  const bundleData = getBundleData();\n  const [productPath, productVariant] = useAliasSelectors([\n    ({ view }) => view?.product?.config,\n    ({ view }) => view?.product?.variant\n  ]);\n  const [detail, setDetail] = useState({});\n\n  useEffect(() => {\n    const updatedVariantPath = productPath;\n    const hashPath = helpers.generateHash({ productPath, productVariant });\n\n    if (updatedVariantPath && detail?._passed !== hashPath) {\n      // Get base configuration match\n      let routeConfig = routerHelpers.getRouteConfigByPath({\n        pathName: updatedVariantPath\n      });\n\n      // Determine variant to display, if any\n      if (productVariant) {\n        const selectedVariant = productVariant?.[routeConfig?.firstMatch?.productGroup];\n\n        if (selectedVariant) {\n          routeConfig = routerHelpers.getRouteConfigByPath({\n            pathName: selectedVariant\n          });\n        }\n      }\n\n      const { allConfigs, availableVariants, configs, firstMatch, isClosest } = routeConfig;\n\n      // Set document title, remove pre-baked suffix\n      updateDocumentTitle(\n        `${t(`curiosity-view.title`, {\n          appName: helpers.UI_DISPLAY_NAME,\n          context: firstMatch?.productGroup\n        })} - ${helpers.UI_DISPLAY_NAME}${(bundleData?.bundleTitle && ` | ${bundleData?.bundleTitle}`) || ''}`,\n        true\n      );\n\n      // Set route detail\n      setDetail({\n        _passed: hashPath,\n        allConfigs,\n        availableVariants,\n        firstMatch,\n        errorRoute: routerHelpers.errorRoute,\n        isClosest,\n        productGroup: firstMatch?.productGroup,\n        productConfig: (configs?.length && configs) || [],\n        productPath,\n        productVariant\n      });\n    }\n  }, [bundleData?.bundleTitle, detail?._passed, productPath, productVariant, t, updateDocumentTitle]);\n\n  return detail;\n};\n\n/**\n * Search parameter, return\n *\n * @param {object} options\n * @param {Function} options.useLocation\n * @param {Function} options.useSearchParams\n * @returns {Array}\n */\nconst useSearchParams = ({\n  useSearchParams: useAliasSearchParams = useRRDSearchParams,\n  useLocation: useAliasLocation = useLocation\n} = {}) => {\n  const { search } = useAliasLocation();\n  const [, setAliasSearchParams] = useAliasSearchParams();\n\n  /**\n   * Alias returned React Router Dom useSearchParams hook to something expected.\n   * This hook defaults to merging search objects instead of overwriting them.\n   *\n   * @param {object} updatedQuery\n   * @param {object} options\n   * @param {boolean} options.isMerged Merge search with existing search, or don't\n   * @param {string|*} options.currentSearch search returned from useLocation\n   */\n  const setSearchParams = useCallback(\n    (updatedQuery, { isMerged = true, currentSearch = search } = {}) => {\n      let updatedSearch = {};\n\n      if (isMerged) {\n        Object.assign(updatedSearch, routerHelpers.parseSearchParams(currentSearch), updatedQuery);\n      } else {\n        updatedSearch = updatedQuery;\n      }\n\n      setAliasSearchParams(updatedSearch);\n    },\n    [search, setAliasSearchParams]\n  );\n\n  return [routerHelpers.parseSearchParams(search), setSearchParams];\n};\n\n/**\n * Initialize and store product path, parameter, in a \"state\" update parallel to routing.\n * We're opting to use \"window.location.pathname\" directly since it appears to be quicker,\n * and returns a similar structured value as useParam.\n *\n * @param {object} options\n * @param {Function} options.useSelector\n * @param {Function} options.useDispatch\n * @param {*} options.windowLocation\n * @returns {*|string}\n */\nconst useSetRouteDetail = ({\n  useSelector: useAliasSelector = storeHooks.reactRedux.useSelectors,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  windowLocation: aliasWindowLocation = window.location\n} = {}) => {\n  const dispatch = useAliasDispatch();\n  const [updatedPath] = useAliasSelector([({ view }) => view?.product?.config]);\n  const { pathname: productPath } = aliasWindowLocation;\n\n  useEffect(() => {\n    if (productPath && productPath !== updatedPath) {\n      dispatch({\n        type: reduxTypes.app.SET_PRODUCT,\n        config: productPath\n      });\n    }\n  }, [updatedPath, dispatch, productPath]);\n\n  return updatedPath;\n};\n\nconst context = {\n  useLocation,\n  useNavigate,\n  useRouteDetail,\n  useSearchParams,\n  useSetRouteDetail\n};\n\nexport { context as default, context, useLocation, useNavigate, useRouteDetail, useSearchParams, useSetRouteDetail };\n","import React from 'react';\nimport { closest } from 'fastest-levenshtein';\nimport { helpers } from '../../common/helpers';\nimport { routesConfig, productConfig } from '../../config';\n\n/**\n * @memberof Router\n * @module RouterHelpers\n */\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * The app baseName. Return an assumed route baseName directory based on existing app name.\n * App name is defined in dotenv and package.json/insights.appname\n * [environment]/[OPTIONAL]/[OPTIONAL]/[APP NAME]\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  `${pathName.split(applicationName)[0]}${applicationName}`;\n\n/**\n * App basePath. Return a base path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBasePath = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  pathName.split(applicationName)[0];\n\n/**\n * The first redirect route.\n *\n * @type {object}\n */\nconst redirectRoute = routesConfig.find(({ disabled, redirect }) => !disabled && redirect);\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = routesConfig.filter(item => !item.disabled);\n\n/**\n * Match pre-sorted route config entries with a path, or match with a fallback.\n * This is the primary engine for curiosity routing. It can account for a full window.location.pathname\n * given the appropriate alias, group, product, and/or path identifiers provided with product configuration.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {Array} params.configs\n * @returns {{configs: *, firstMatch: *, isClosest: boolean, allConfigs: Array}}\n */\nconst getRouteConfigByPath = helpers.memo(({ pathName, configs = productConfig.sortedConfigs } = {}) => {\n  const { byAnything, byAnythingPathIds, byAnythingVariants, byProductIdConfigs } = configs();\n  const updatedPathName =\n    (/^http/i.test(pathName) && new URL(pathName).pathname) || (typeof pathName === 'string' && pathName) || undefined;\n  const trimmedPathName = updatedPathName\n    ?.toLowerCase()\n    ?.split('#')?.[0]\n    ?.split('?')?.[0]\n    ?.replace(/^\\/*|\\/*$/g, '')\n    ?.replace(new RegExp(helpers.UI_DISPLAY_NAME, 'i'), '')\n    ?.replace(/\\/\\//g, '/');\n\n  // Do a known comparison against alias, group, product, path identifiers\n  const focusedStr = byAnythingPathIds.find(value => value.toLowerCase() === trimmedPathName?.split('/')?.pop());\n\n  // Fallback attempt, match pathName with the closest string\n  const closestStr = trimmedPathName && closest(trimmedPathName, byAnythingPathIds);\n  const configsByAnything = byAnything?.[focusedStr || closestStr];\n  const availableVariants = byAnythingVariants?.[focusedStr || closestStr];\n\n  return {\n    isClosest: !focusedStr,\n    allConfigs: Object.values(byProductIdConfigs),\n    availableVariants,\n    configs: configsByAnything,\n    firstMatch: configsByAnything?.[0]\n  };\n});\n\n/**\n * Import a route component.\n *\n * @param {Node} component\n * @returns {Node}\n */\nconst importView = component => {\n  if (!helpers.TEST_MODE) {\n    return React.lazy(() => import(/* webpackExclude: /\\.test\\.js$/ */ `../${component}.js`));\n  }\n\n  return p => <React.Fragment>{JSON.stringify({ ...p, component }, null, 2)}</React.Fragment>;\n};\n\n/**\n * Parse search parameters from a string, using a set for \"uniqueness\"\n *\n * @param {string} currentPathAndOrSearch\n * @returns {{}}\n */\nconst parseSearchParams = helpers.memo((currentPathAndOrSearch = window.location.search) => {\n  const { decodeURIComponent, URLSearchParams } = window;\n  const parsedSearch = {};\n\n  [\n    ...new Set(\n      [...new URLSearchParams(decodeURIComponent(currentPathAndOrSearch))].map(([param, value]) => `${param}~${value}`)\n    )\n  ].forEach(v => {\n    const [param, value] = v.split('~');\n    parsedSearch[param] = value;\n  });\n\n  return parsedSearch;\n});\n\n/**\n * Basic path join, minor emulation for path.join. Related to the webpack 5 migration.\n *\n * @param {object} paths\n * @returns {string}\n */\nconst pathJoin = helpers.memo((...paths) => {\n  let updatedPath = Array.from(paths);\n  const hasLead = /^\\/\\//.test(updatedPath[0]);\n  updatedPath = updatedPath\n    .join('/')\n    .replace(/(\\/\\/)+/g, '~')\n    .replace(/~/g, '/')\n    .replace(/\\/\\//g, '/');\n\n  if (hasLead) {\n    updatedPath = `/${updatedPath}`;\n  }\n\n  return updatedPath;\n});\n\nconst routerHelpers = {\n  appName,\n  dynamicBaseName,\n  dynamicBasePath,\n  redirectRoute,\n  getRouteConfigByPath,\n  importView,\n  parseSearchParams,\n  pathJoin,\n  routes\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  appName,\n  dynamicBaseName,\n  dynamicBasePath,\n  redirectRoute,\n  getRouteConfigByPath,\n  importView,\n  parseSearchParams,\n  pathJoin,\n  routes\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport {\n  Table as PfTable,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n  SortByDirection\n} from '@patternfly/react-table';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { TableEmpty } from './tableEmpty';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * PF table wrapper, normalize table use.\n *\n * @memberof Components\n * @module Table\n * @property {module} TableEmpty\n * @property {module} TableSkeleton\n */\n\n/**\n * FixMe: PF tables uses sequentially ordered lists/arrays to denote expandable sections\n * Ideal solution is to nest expandable sections within their respective parents. There\n * are scenarios where manipulating a sequentially ordered list/array can, and will,\n * lead to unintended results. And forces an equal, if not greater, amount of effort on\n * state tracking in the consuming GUI/app. Compounding the issue, the index is used/returned\n * during events for a particular row being \"expanded\". This ends up making after-the-fact\n * application of the expandable list/array items problematic since said index is\n * constantly updating/shifting as rows are dynamically added. Add in a \"not every row\n * needs to be expandable\" scenario, you can start to see the issues. All of that\n * effort means that in some cases it may actually be quicker to simply use PF styles and\n * a HTML table directly, bypassing PF-React entirely.\n *\n * Applying a React node as content in the sequentially ordered list/array appears to\n * automatically \"mount\" said node. How this handles in child components where subsequent\n * AJAX/XHR calls are called means you are potentially hitting an API with dozens of calls,\n * row dependent, even when a user may not expand the nested row/child. This could easily\n * be resolved by nesting and applying the expandable contents after-the-fact.\n */\n/**\n * FixMe: PF tables misalignment of the column headers list/array and row cells breaks the component\n * The related PF error for this is cryptic. An immediate solution would be to simply fix the error\n * messaging, or do a length check before consuming the lists/arrays. This happens when a consumer\n * places more or less column header cells than row cells.\n */\n/**\n * FixMe: PF tables break when an empty list/array is used for the column headers\n * This appears related to the mismatched column header and row cells. The solution is to simply not\n * render the header row instead of throwing an error. This is similar to how the empty rows\n * list/array is handled.\n */\n/**\n * A table.\n *\n * @augments React.Component\n * @fires onCollapse\n * @fires onSort\n */\nclass Table extends React.Component {\n  state = {\n    isCollapsible: false,\n    isSortable: false,\n    sortBy: {},\n    updatedColumnHeaders: null,\n    updatedRows: null\n  };\n\n  componentDidMount() {\n    const { updatedRows } = this.state;\n\n    if (updatedRows === null) {\n      this.setRowData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { columnHeaders, rows } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (\n      !_isEqualWith(prevProps.rows, rows, customizer) ||\n      !_isEqualWith(prevProps.columnHeaders, columnHeaders, customizer)\n    ) {\n      this.setRowData();\n    }\n  }\n\n  /**\n   * Apply expanded row content.\n   *\n   * @event onCollapse\n   * @param {object} params\n   * @param {number} params.index\n   * @param {boolean} params.isOpen\n   */\n  onCollapse = ({ index, isOpen }) => {\n    const { updatedRows } = this.state;\n    updatedRows[index].isOpen = isOpen;\n\n    if (isOpen) {\n      updatedRows[index + 1].fullWidth = false;\n      updatedRows[index + 1].cells = [{ title: updatedRows[index + 1].expandedContent }];\n    } else {\n      updatedRows[index + 1].cells = [{ title: '' }];\n    }\n\n    this.setState({\n      updatedRows\n    });\n  };\n\n  /**\n   * FixMe: PF table sort callback doesn't use a zero based index when expandable?\n   * Educated guess there's a cell count happening instead of \"[you have this many data/entry cells]\"\n   * This is really confusing to implement in a consuming application, especially on first\n   * implementation. Special \"collapsible index\" logic had to be implemented to compensate for this\n   * odd behavior.\n   */\n  /**\n   * On column sort\n   *\n   * @event onSort\n   * @param {object} params\n   * @param {number} params.index\n   * @param {string} params.direction\n   * @param {object} params.data\n   */\n  onSort = ({ index, direction, data = {} }) => {\n    const { isCollapsible, updatedColumnHeaders, updatedRows } = this.state;\n    const updatedIndex = isCollapsible ? index - 1 : index;\n\n    updatedRows.forEach(async ({ isOpen }, i) => {\n      if (isOpen === true) {\n        await this.onCollapse({ index: i, isOpen: false });\n      }\n    });\n\n    this.setState(\n      {\n        sortBy: {\n          index,\n          direction\n        }\n      },\n      () =>\n        updatedColumnHeaders[updatedIndex].onSort({\n          direction,\n          index: updatedIndex,\n          label: data?.column?.header?.label\n        })\n    );\n  };\n\n  /**\n   * Convert row objects into the required PF Table format.\n   */\n  setRowData() {\n    const { columnHeaders, rows } = this.props;\n    const updatedColumnHeaders = [];\n    const updatedRows = [];\n    const updatedSort = {};\n    let isCollapsible = false;\n    let isSortable = false;\n\n    rows.forEach(({ expandedContent, cells, isExpanded }) => {\n      const rowObj = {\n        cells: []\n      };\n      updatedRows.push(rowObj);\n\n      if (expandedContent) {\n        isCollapsible = true;\n        rowObj.isOpen = isExpanded || false;\n\n        updatedRows.push({\n          parent: updatedRows.length - 1,\n          fullWidth: true,\n          cells: [{ title: '' }],\n          expandedContent\n        });\n      }\n\n      cells.forEach(cell => {\n        if (cell?.title !== undefined) {\n          const { title, ...settings } = cell;\n          rowObj.cells.push({ title, ...settings });\n        } else {\n          rowObj.cells.push({\n            title: (React.isValidElement(cell) && cell) || (typeof cell === 'object' && `${cell}`) || cell\n          });\n        }\n      });\n    });\n\n    columnHeaders.forEach((columnHeader, index) => {\n      if (columnHeader?.title !== undefined) {\n        const { onSort, sortActive, sortDirection, title, ...settings } = columnHeader;\n        const tempColumnHeader = {\n          title,\n          ...settings\n        };\n\n        if (onSort) {\n          isSortable = true;\n          tempColumnHeader.transforms = [...(tempColumnHeader?.transforms || []), sortable];\n          tempColumnHeader.onSort = onSort;\n\n          if (sortActive) {\n            updatedSort.sortBy = { index: isCollapsible ? index + 1 : index };\n            updatedSort.sortBy.direction = SortByDirection.asc;\n          }\n\n          if (sortDirection) {\n            updatedSort.sortBy = { ...updatedSort.sortBy, direction: sortDirection };\n          }\n        } else if (tempColumnHeader.transforms) {\n          tempColumnHeader.transforms = tempColumnHeader.transforms.filter(v => v !== sortable);\n        }\n\n        updatedColumnHeaders.push(tempColumnHeader);\n      } else {\n        updatedColumnHeaders.push({\n          title:\n            (React.isValidElement(columnHeader) && columnHeader) ||\n            (typeof columnHeader === 'object' && `${columnHeader}`) ||\n            columnHeader\n        });\n      }\n    });\n\n    this.setState({\n      isCollapsible,\n      isSortable,\n      updatedColumnHeaders,\n      updatedRows,\n      ...updatedSort\n    });\n  }\n\n  /**\n   * FixMe: PF Tables automatically applies an expandable className when using the \"onCollapse\" prop?\n   * Not every row may need to be expandable. In certain scenarios a table may have no expandable\n   * sections, however it appears the \"onCollapse\" styling, and additionally added \"table cells\" are still\n   * applied.\n   */\n  /**\n   * Apply props to table.\n   *\n   * @returns {React.ReactNode}\n   */\n  renderTable() {\n    const { isCollapsible, isSortable, sortBy, updatedColumnHeaders, updatedRows } = this.state;\n    const { ariaLabel, borders, children, className, isHeader, summary, t, variant } = this.props;\n    const pfTableProps = {};\n    let emptyTable = null;\n\n    if (!updatedRows?.length) {\n      emptyTable = children || (\n        <TableEmpty\n          icon={SearchIcon}\n          title={t('curiosity-inventory.tableEmptyInventoryTitle')}\n          message={t('curiosity-inventory.tableEmptyInventoryMessage')}\n        />\n      );\n    }\n\n    if (isCollapsible) {\n      pfTableProps.onCollapse = (event, index, isOpen, data) => this.onCollapse({ event, index, isOpen, data });\n    }\n\n    if (isSortable) {\n      pfTableProps.sortBy = sortBy;\n      pfTableProps.onSort = (event, index, direction, data) => this.onSort({ event, index, direction, data });\n    }\n\n    return (\n      <React.Fragment>\n        <PfTable\n          className={`curiosity-table${(!borders && '-no-border') || ''} ${className || ''}`}\n          borders={borders}\n          aria-label={ariaLabel || t('curiosity-inventory.tableAriaLabel', { appName: helpers.UI_DISPLAY_NAME })}\n          summary={summary || t('curiosity-inventory.tableSummary')}\n          variant={variant}\n          rows={(updatedRows?.length && updatedRows) || []}\n          cells={updatedColumnHeaders || []}\n          {...pfTableProps}\n        >\n          {isHeader && <TableHeader />}\n          <TableBody />\n        </PfTable>\n        {emptyTable}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Render a table.\n   *\n   * @returns {React.ReactNode}\n   */\n  render() {\n    return (\n      <Grid className=\"ins-inventory-list\">\n        <GridItem span={12}>{this.renderTable()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{summary: string, columnHeaders: Array, t: Function, borders: boolean, children: React.ReactNode,\n *     isHeader: boolean, variant: string, className: string, rows: Array, ariaLabel: string}}\n */\nTable.propTypes = {\n  ariaLabel: PropTypes.string,\n  borders: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  columnHeaders: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        onSort: PropTypes.func,\n        sortActive: PropTypes.bool,\n        sortDirection: PropTypes.oneOf([...Object.values(SortByDirection)]),\n        title: PropTypes.node.isRequired\n      })\n    ])\n  ).isRequired,\n  isHeader: PropTypes.bool,\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      expandedContent: PropTypes.node,\n      cells: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.node,\n          PropTypes.instanceOf(Date),\n          PropTypes.shape({\n            title: PropTypes.oneOfType([PropTypes.node, PropTypes.instanceOf(Date)]).isRequired\n          })\n        ])\n      ),\n      isExpanded: PropTypes.bool\n    })\n  ),\n  summary: PropTypes.string,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{summary: null, t: translate, borders: boolean, children: null, isHeader: boolean,\n *     variant: null, className: null, rows: Array, ariaLabel: null}}\n */\nTable.defaultProps = {\n  ariaLabel: null,\n  borders: true,\n  children: null,\n  className: null,\n  isHeader: true,\n  rows: [],\n  summary: null,\n  t: translate,\n  variant: null\n};\n\nexport { Table as default, Table };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable as PlatformEmptyTableWrapper } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\n/**\n * @memberof Table\n * @module TableEmpty\n */\n\n/**\n * Render an empty table.\n *\n * @param {object} props\n * @param {React.ReactNode|Function} props.icon\n * @param {React.ReactNode} props.message\n * @param {string} props.tableHeading\n * @param {React.ReactNode} props.title\n * @param {string} props.variant\n * @returns {React.ReactNode}\n */\nconst TableEmpty = ({ icon, message, tableHeading, title, variant }) => (\n  <PlatformEmptyTableWrapper>\n    <EmptyState variant={variant}>\n      {icon && <EmptyStateIcon icon={icon} />}\n      <Title headingLevel={tableHeading} size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n  </PlatformEmptyTableWrapper>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: React.ReactNode|Function, variant: string, message: React.ReactNode, title: React.ReactNode,\n *     tableHeading: string}}\n */\nTableEmpty.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.node.isRequired,\n  tableHeading: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  variant: PropTypes.oneOf(Object.keys(EmptyStateVariant))\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, variant: EmptyStateVariant.small, tableHeading: string}}\n */\nTableEmpty.defaultProps = {\n  icon: null,\n  tableHeading: 'h2',\n  variant: EmptyStateVariant.small\n};\n\nexport { TableEmpty as default, TableEmpty };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { cellWidth, TableVariant } from '@patternfly/react-table';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport Table from './table';\nimport { translate } from '../i18n/i18n';\n\n/**\n * @memberof Table\n * @module TableSkeleton\n */\n\n/**\n * Render a table with skeleton loaders.\n *\n * @param {object} props\n * @param {string} props.className\n * @param {boolean} props.borders\n * @param {number} props.colCount\n * @param {Array} props.colWidth\n * @param {boolean} props.isHeader\n * @param {number} props.rowCount\n * @param {Function} props.t\n * @param {string} props.variant\n * @returns {React.ReactNode}\n */\nconst TableSkeleton = ({ className, borders, colCount, colWidth, isHeader, rowCount, t, variant }) => {\n  const updatedColumnHeaders = [...new Array(colCount)].map((value, index) => {\n    const updatedHeader = { title: <Skeleton size={SkeletonSize.md} /> };\n\n    if (typeof colWidth[index] === 'number') {\n      updatedHeader.transforms = [cellWidth(colWidth[index])];\n    }\n\n    return updatedHeader;\n  });\n\n  const updatedRowCount = rowCount || 1;\n\n  const updatedRows = [...new Array(updatedRowCount)].map(() => ({\n    cells: [...new Array(colCount)].map(() => <Skeleton size={SkeletonSize.md} />)\n  }));\n\n  return (\n    <Table\n      ariaLabel={t('curiosity-inventory.tableSkeletonAriaLabel')}\n      borders={borders}\n      className={`curiosity-skeleton-table${(!rowCount && ' curiosity-skeleton-table__hidden-rows') || ''} ${\n        className || ''\n      }`}\n      columnHeaders={updatedColumnHeaders}\n      isHeader={isHeader}\n      rows={updatedRows}\n      variant={variant}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: string,\n *     className: string, rowCount: number}}\n */\nTableSkeleton.propTypes = {\n  borders: PropTypes.bool,\n  className: PropTypes.string,\n  colCount: PropTypes.number,\n  colWidth: PropTypes.arrayOf(PropTypes.number),\n  isHeader: PropTypes.bool,\n  rowCount: PropTypes.number,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: null,\n *     className: null, rowCount: number}}\n */\nTableSkeleton.defaultProps = {\n  borders: true,\n  className: null,\n  colCount: 1,\n  colWidth: [],\n  isHeader: true,\n  rowCount: 5,\n  t: translate,\n  variant: null\n};\n\nexport { TableSkeleton as default, TableSkeleton };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip as PfTooltip, TooltipProps, TooltipPosition } from '@patternfly/react-core';\n\n/**\n * PF tooltip wrapper.\n *\n * @memberof Components\n * @module Tooltip\n */\n\n/**\n * PF tooltip wrapper component.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {React.ReactNode} props.content\n * @param {boolean} props.isNoWrap\n * @param {TooltipProps} props.props\n * @returns {React.ReactNode}\n */\nconst Tooltip = ({ children, content, isNoWrap, ...props }) => (\n  <PfTooltip\n    className={`curiosity-tooltip${(isNoWrap && '__nowrap') || ''}`}\n    content={(React.isValidElement(content) && content) || <p>{content || ''}</p>}\n    {...props}\n  >\n    {(React.isValidElement(children) && children) || <span className=\"curiosity-tooltip-children\">{children}</span>}\n  </PfTooltip>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, content: React.ReactNode}}\n */\nTooltip.propTypes = {\n  children: PropTypes.node.isRequired,\n  content: PropTypes.node,\n  distance: PropTypes.number,\n  enableFlip: PropTypes.bool,\n  entryDelay: PropTypes.number,\n  exitDelay: PropTypes.number,\n  isNoWrap: PropTypes.bool,\n  position: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{content: string}}\n */\nTooltip.defaultProps = {\n  content: '...',\n  distance: 5,\n  enableFlip: false,\n  entryDelay: 100,\n  exitDelay: 0,\n  isNoWrap: false,\n  position: TooltipPosition.top\n};\n\nexport { Tooltip as default, Tooltip };\n","import { helpers } from '../common/helpers';\n\n/**\n * IIFE for generating a product configs listing via webpack\n *\n * @type {{aliases: string[], productGroup: string, productId: string, productLabel: string, productDisplay: string, viewId: string,\n *     productVariants: string[], query: object, graphTallyQuery: object, inventoryHostQuery: object,\n *     inventorySubscriptionsQuery: object, initialGraphFilters: {}[], initialGraphSettings: object, initialGuestsFilters: {}[],\n *     initialInventoryFilters: {}[], initialSubscriptionsInventoryFilters: {}[], initialToolbarFilters: {}[], }[]}\n */\nconst productConfigs = (() => {\n  try {\n    const path = require.context('./', false, /product\\.[\\d\\D]+\\.js$/i);\n    return path.keys().map(path);\n  } catch (e) {\n    /**\n     * Basic configuration for testing only.\n     */\n    if (process.env.REACT_APP_ENV === 'test' && require) {\n      return [\n        ...require('fs') // eslint-disable-line\n          ?.readdirSync('./src/config') // eslint-disable-line\n          ?.filter(file => /product\\.[a-z]+\\.js/i.test(file)) // eslint-disable-line\n          ?.map(file => require(`./${file}`)) // eslint-disable-line\n      ];\n    }\n\n    console.warn(`Product configuration failed to load: ${e.message}`);\n    return [];\n  }\n})()?.map(value => value.config);\n\n/**\n * Sorted/organized/grouped product configs.\n * - byAlias,object configurations associated with product aliases\n * - byAnything, object of all productGroups, productIds, productPaths, and aliases with lists of their related configurations\n * - byAnythingPathIds, list of identifiers associated with all productGroups, productIds, productPaths, and aliases\n * - byAnythingVariants, object of all productGroups, productIds, productPaths, and aliases associated with lists of their related variants\n * - byGroupIdConfigs, object of productGroup properties against an array of associated product configs\n * - byGroupIds, object of productGroup properties against an array of associated productId strings.\n * - byGroupIdVariants, object of productGroup properties against an array of associated product variants\n * - byProductIdConfigs, object of productId properties against a product config\n * - byProductIds, a unique array of all productId strings\n * - byProductPathConfigs, object of productPath properties against an array of associated product configs\n * - byViewIdConfigs, object of viewId properties against an array of associated product configs\n * - byViewIds, object of viewId properties against an array of associated productId strings. \"viewId\" was created because of the\n *     overlap with productIds and productGroups, this may be refactored in the future\n *\n * @param {productConfigs} configs\n * @returns {{byGroupIdVariants: {}, byProductPathConfigs: {}, byAnythingVariants: {}, byAnything: {},\n *     byAnythingPathIds: string[], byGroupIdConfigs: {}, byViewIds: {}, byProductIds: any[], byAlias: {},\n *     byGroupIds: {}, byViewIdConfigs: {}, byProductIdConfigs: {}}}\n */\nconst sortedProductConfigs = helpers.memo((configs = productConfigs) => {\n  const viewIdConfigs = {};\n  const productAliases = {};\n  const productIds = new Set();\n  const productIdConfigs = {};\n  const productPathConfigs = {};\n  const anything = {};\n  const anythingVariants = {};\n  const groupIdConfigs = {};\n  const groupedGroupIds = {};\n  const groupedVariants = {};\n  const groupedViewIds = {};\n\n  configs?.forEach(config => {\n    const { aliases, productGroup, productId, productLabel, productPath, productVariants, viewId } = config;\n\n    if (productGroup && productId) {\n      anything[productGroup] ??= {};\n      anything[productGroup][productId] = config;\n    }\n\n    if (productId) {\n      anything[productId] ??= {};\n      anything[productId][productId] = config;\n    }\n\n    if (productLabel && productId) {\n      anything[productLabel] ??= {};\n      anything[productLabel][productId] = config;\n    }\n\n    if (productPath && productId) {\n      anything[productPath] ??= {};\n      anything[productPath][productId] = config;\n    }\n\n    aliases?.forEach(alias => {\n      if (productId) {\n        anything[alias] ??= {};\n        anything[alias][productId] = config;\n      }\n\n      productAliases[alias] ??= [];\n      productAliases[alias].push(config);\n    });\n\n    productVariants?.forEach(variant => {\n      if (productId) {\n        anything[variant] ??= {};\n        anything[variant][productId] = config;\n        anything[variant][productId] = { ...config, productId: variant };\n      }\n\n      productAliases[variant] ??= [];\n      productAliases[variant].push({ ...config, productId: variant });\n    });\n\n    if (productId) {\n      productIdConfigs[productId] = config;\n      productIds.add(productId);\n    }\n\n    if (productPath) {\n      productPathConfigs[productPath] ??= [];\n      productPathConfigs[productPath].push(config);\n    }\n\n    if (productGroup) {\n      groupIdConfigs[productGroup] ??= [];\n      groupIdConfigs[productGroup].push(config);\n\n      if (Array.isArray(productVariants)) {\n        groupedVariants[productGroup] ??= [];\n        groupedVariants[productGroup].push(...productVariants);\n      }\n    }\n\n    if (productGroup && productId) {\n      groupedGroupIds[productGroup] ??= [];\n      groupedGroupIds[productGroup].push(productId);\n\n      if (!groupedVariants[productGroup]?.includes(productId)) {\n        groupedVariants[productGroup] ??= [];\n        groupedVariants[productGroup].push(productId);\n      }\n    }\n\n    if (viewId) {\n      viewIdConfigs[viewId] ??= [];\n      viewIdConfigs[viewId].push(config);\n    }\n\n    if (viewId && productId) {\n      groupedViewIds[viewId] ??= [];\n      groupedViewIds[viewId].push(productId);\n    }\n  });\n\n  Object.entries(anything).forEach(([key, value]) => {\n    anything[key] = Object.values(value);\n    anythingVariants[key] ??= [];\n\n    anything[key].forEach(({ productGroup }) => {\n      if (productGroup) {\n        anythingVariants[key] = Array.from(\n          new Set([...anythingVariants[key], ...groupedVariants[productGroup]])\n        ).sort();\n      }\n    });\n  });\n\n  return helpers.objFreeze({\n    byAlias: productAliases,\n    byAnything: anything,\n    byAnythingPathIds: Object.keys(anything).sort(),\n    byAnythingVariants: anythingVariants,\n    byGroupIdConfigs: groupIdConfigs,\n    byGroupIds: groupedGroupIds,\n    byGroupIdVariants: groupedVariants,\n    byProductPathConfigs: productPathConfigs,\n    byProductIdConfigs: productIdConfigs,\n    byProductIds: Array.from(productIds),\n    byViewIdConfigs: viewIdConfigs,\n    byViewIds: groupedViewIds\n  });\n});\n\nconst products = {\n  configs: productConfigs,\n  sortedConfigs: sortedProductConfigs\n};\n\nexport { products as default, products, productConfigs, sortedProductConfigs };\n","import { helpers } from '../common';\n\nconst routes = [\n  {\n    id: 'any',\n    path: ':productPath',\n    redirect: null,\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'missing',\n    path: '*',\n    redirect: './',\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: true,\n    component: 'productView/productViewMissing'\n  }\n];\n\nexport { routes as default, routes };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES as INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { Tooltip } from '../components/tooltip/tooltip';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { ChartIcon } from '../components/chart/chartIcon';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = 'openshift';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT;\n\n/**\n * OpenShift Container product config\n *\n * @type {{productLabel: string, productPath: string, initialOption: string, aliases: string[], productId: string,\n *     inventorySubscriptionsQuery: object, query: object, initialSubscriptionsInventoryFilters: {}[],\n *     initialInventorySettings: {}, viewId: string, initialToolbarFilters: {}[], productGroup: string,\n *     graphTallyQuery: object, inventoryHostsQuery: object, productDisplay: string, productContextFilterUom: boolean,\n *     initialGraphFilters: {}[], initialGuestsFilters: {}[], initialGraphSettings: object, initialInventoryFilters: {}[]}}\n */\nconst config = {\n  aliases: [RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT, 'openshift-container', 'container', 'platform', 'shift'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.CAPACITY,\n  viewId: `view${productGroup}`,\n  productContextFilterUom: true,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.CORES,\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialOption: RHSM_API_QUERY_UOM_TYPES.CORES,\n  initialGraphFilters: [\n    {\n      filters: [\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n          isOptional: true,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          isOptional: true,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          chartType: ChartTypeVariant.threshold,\n          isOptional: true\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n          chartType: ChartTypeVariant.threshold,\n          isOptional: true\n        }\n      ]\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.UOM,\n        position: SelectPosition.right\n      },\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        {\n          [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n          [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {},\n          [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {}\n        } = {},\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests?.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      header: (data, session, { [INVENTORY_META_TYPES.UOM]: uom } = {}) =>\n        translate('curiosity-inventory.header', { context: [uom, productId] }),\n      cell: (data = {}, session, { [INVENTORY_META_TYPES.UOM]: uom } = {}) => data?.[uom]?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 20,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY,\n      header: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom } = {}) =>\n        translate('curiosity-inventory.header', { context: ['subscriptions', uom?.value] }),\n      cell: ({\n        [SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY]: totalCapacity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom\n      } = {}) => {\n        if (hasInfiniteQuantity?.value === true) {\n          const content = translate(\n            `curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY}`,\n            { context: uom?.value }\n          );\n          return (\n            <Tooltip content={content}>\n              <ChartIcon symbol=\"infinity\" aria-label={content} />\n            </Tooltip>\n          );\n        }\n        return totalCapacity?.value;\n      },\n      isSortable: true,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value && moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment/moment';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\nconst productGroup = 'openshift';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\n/**\n * OpenShift Dedicated product config\n *\n * @type {{productLabel: string, productPath: string, aliases: string[], productId: string, query: object,\n *     viewId: string, initialToolbarFilters: undefined, productGroup: string, graphTallyQuery: object,\n *     inventoryHostsQuery: object, productDisplay: string, initialGraphFilters: {}[], initialGraphSettings: object,\n *     initialInventoryFilters: {}[]}}\n */\nconst config = {\n  aliases: ['openshift-dedicated', 'dedicated'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}-${productId}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ chartId } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['dailyTotal', chartId],\n            testId: 'graphDailyTotalCard-header'\n          }),\n        body: ({ chartId, dailyHasData, dailyValue } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dailyHasData && chartId],\n              testId: 'graphDailyTotalCard-body',\n              total: helpers\n                .numberDisplay(dailyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 5,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dailyValue} aria-label={dailyValue} />]\n          ),\n        footer: ({ dailyDate } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment.utc(dailyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphDailyTotalCard-footer'\n          })\n      },\n      {\n        header: ({ chartId } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['monthlyTotal', chartId],\n            testId: 'graphMonthlyTotalCard-header'\n          }),\n        body: ({ chartId, monthlyHasData, monthlyValue } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', monthlyHasData && chartId],\n              testId: 'graphMonthlyTotalCard-body',\n              total: helpers\n                .numberDisplay(monthlyValue)\n                ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: false })\n                ?.toUpperCase()\n            },\n            [<strong title={monthlyValue} aria-label={monthlyValue} />]\n          ),\n        footer: ({ monthlyDate } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment.utc(monthlyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphMonthlyTotalCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick } = {}) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        {\n          [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n          [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {},\n          [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {}\n        } = {},\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests?.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: cores }) =>\n        (typeof cores?.value === 'number' && Number.parseFloat(cores?.value).toFixed(2)) || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS]: instanceHours } = {}) =>\n        (typeof instanceHours?.value === 'number' && Number.parseFloat(instanceHours?.value).toFixed(2)) || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chartHelpers';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = 'openshift';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS;\n\n/**\n * OpenShift Metrics product config\n *\n * @type {{productLabel: string, productPath: string, aliases: string[], productId: string, query: object,\n *     viewId: string, initialToolbarFilters: undefined, productGroup: string, graphTallyQuery: object,\n *     inventoryHostsQuery: object, productDisplay: string, initialGraphFilters: {}[], initialGraphSettings: object,\n *     initialInventoryFilters: {}[]}}\n */\nconst config = {\n  aliases: [RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS, 'metrics'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}-${productId}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ chartId } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['dailyTotal', chartId],\n            testId: 'graphDailyTotalCard-header'\n          }),\n        body: ({ chartId, dailyHasData, dailyValue } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dailyHasData && chartId],\n              testId: 'graphDailyTotalCard-body',\n              total: helpers\n                .numberDisplay(dailyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 5,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dailyValue} aria-label={dailyValue} />]\n          ),\n        footer: ({ dailyDate } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment.utc(dailyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphDailyTotalCard-footer'\n          })\n      },\n      {\n        header: ({ chartId } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['monthlyTotal', chartId],\n            testId: 'graphMonthlyTotalCard-header'\n          }),\n        body: ({ chartId, monthlyHasData, monthlyValue } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', monthlyHasData && chartId],\n              testId: 'graphMonthlyTotalCard-body',\n              total: helpers\n                .numberDisplay(monthlyValue)\n                ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: false })\n                ?.toUpperCase()\n            },\n            [<strong title={monthlyValue} aria-label={monthlyValue} />]\n          ),\n        footer: ({ monthlyDate } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment.utc(monthlyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphMonthlyTotalCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick } = {}) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        {\n          [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n          [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {},\n          [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {}\n        } = {},\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests?.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: cores } = {}) =>\n        (typeof cores?.value === 'number' && Number.parseFloat(cores?.value).toFixed(2)) || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst config = {\n  aliases: ['advanced', 'cluster', 'security', 'kubernetes', 'acs'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ metricId } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['dailyTotal', metricId],\n            testId: 'graphDailyTotalCard-header'\n          }),\n        body: ({ dailyHasData, dailyValue, metricId } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dailyHasData && metricId],\n              testId: 'graphDailyTotalCard-body',\n              total: helpers\n                .numberDisplay(dailyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 5,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dailyValue} aria-label={dailyValue} />]\n          ),\n        footer: ({ dailyDate } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment.utc(dailyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphDailyTotalCard-footer'\n          })\n      },\n      {\n        header: ({ metricId } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['monthlyTotal', metricId],\n            testId: 'graphMonthlyTotalCard-header'\n          }),\n        body: ({ metricId, monthlyHasData, monthlyValue } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', monthlyHasData && metricId],\n              testId: 'graphMonthlyTotalCard-body',\n              total: helpers\n                .numberDisplay(monthlyValue)\n                ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: false })\n                ?.toUpperCase()\n            },\n            [<strong title={monthlyValue} aria-label={monthlyValue} />]\n          ),\n        footer: ({ monthlyDate } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment.utc(monthlyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphMonthlyTotalCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick } = {}) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.CORES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label`, {\n          context: [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER, provider?.value || 'none']\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value &&\n          helpers.isDate(nextEventDate?.value) &&\n          moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    },\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_orange_100 as chartColorOrangeLight,\n  chart_color_orange_300 as chartColorOrangeDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES as CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { Tooltip } from '../components/tooltip/tooltip';\nimport { ChartIcon } from '../components/chart/chartIcon';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = 'rhel';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHEL_X86;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHEL;\n\n/**\n * RHEL product config\n *\n * @type {{aliases: string[], productGroup: string, productId: string, productLabel: string, productDisplay: string, viewId: string,\n *     productVariants: string[], query: object, graphTallyQuery: object, inventoryHostQuery: object, inventorySubscriptionsQuery: object,\n *     initialGraphFilters: {}[], initialGraphSettings: object, initialGuestsFilters: {}[], initialInventoryFilters: {}[],\n *     initialSubscriptionsInventoryFilters: {}[], initialToolbarFilters: {}[]}}\n */\nconst config = {\n  aliases: ['insights', 'enterprise', 'linux', 'el', 'x86', 'ibm', 'power'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.CAPACITY,\n  viewId: `view${productGroup}`,\n  productVariants: [...Object.values(RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES)],\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.SOCKETS,\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      filters: [\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.PHYSICAL\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorCyanLight.value,\n          stroke: chartColorCyanDark.value,\n          color: chartColorCyanDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.VIRTUAL\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorPurpleLight.value,\n          stroke: chartColorPurpleDark.value,\n          color: chartColorPurpleDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.CLOUD\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorOrangeLight.value,\n          stroke: chartColorOrangeDark.value,\n          color: chartColorOrangeDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.HYPERVISOR\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          chartType: ChartTypeVariant.threshold\n        }\n      ]\n    }\n  ],\n  initialGraphSettings: {\n    isDisabledLegendClick: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.NUMBER_OF_GUESTS,\n      cell: ({ [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests } = {}) => numberOfGuests?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.CATEGORY,\n      cell: ({ [INVENTORY_TYPES.CLOUD_PROVIDER]: cloudProvider, [INVENTORY_TYPES.CATEGORY]: category } = {}) => (\n        <React.Fragment>\n          {translate('curiosity-inventory.label', { context: [INVENTORY_TYPES.CATEGORY, category?.value] })}{' '}\n          {(cloudProvider?.value && (\n            <PfLabel color=\"purple\">\n              {translate('curiosity-inventory.label', {\n                context: [INVENTORY_TYPES.CLOUD_PROVIDER, cloudProvider?.value]\n              })}\n            </PfLabel>\n          )) ||\n            ''}\n        </React.Fragment>\n      ),\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.SOCKETS]: sockets } = {}) => sockets?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY,\n      header: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom } = {}) =>\n        translate('curiosity-inventory.header', { context: ['subscriptions', uom?.value] }),\n      cell: ({\n        [SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY]: totalCapacity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom\n      } = {}) => {\n        if (hasInfiniteQuantity?.value === true) {\n          const content = translate(\n            `curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY}`,\n            { context: uom?.value }\n          );\n          return (\n            <Tooltip content={content}>\n              <ChartIcon symbol=\"infinity\" aria-label={content} />\n            </Tooltip>\n          );\n        }\n        return totalCapacity?.value;\n      },\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value && moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.USAGE,\n      selected: true\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.CATEGORY\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst config = {\n  aliases: ['data', 'science', 'ods'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ metricId } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['dailyTotal', metricId],\n            testId: 'graphDailyTotalCard-header'\n          }),\n        body: ({ dailyHasData, dailyValue, metricId } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dailyHasData && metricId],\n              testId: 'graphDailyTotalCard-body',\n              total: helpers\n                .numberDisplay(dailyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 5,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dailyValue} aria-label={dailyValue} />]\n          ),\n        footer: ({ dailyDate } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment.utc(dailyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphDailyTotalCard-footer'\n          })\n      },\n      {\n        header: ({ metricId } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['monthlyTotal', metricId],\n            testId: 'graphMonthlyTotalCard-header'\n          }),\n        body: ({ metricId, monthlyHasData, monthlyValue } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', monthlyHasData && metricId],\n              testId: 'graphMonthlyTotalCard-body',\n              total: helpers\n                .numberDisplay(monthlyValue)\n                ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: false })\n                ?.toUpperCase()\n            },\n            [<strong title={monthlyValue} aria-label={monthlyValue} />]\n          ),\n        footer: ({ monthlyDate } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment.utc(monthlyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphMonthlyTotalCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick } = {}) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.CORES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label`, {\n          context: [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER, provider?.value || 'none']\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value &&\n          helpers.isDate(nextEventDate?.value) &&\n          moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    },\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst config = {\n  aliases: ['application-services', productGroup.toLowerCase(), 'apache', 'kafka'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: 'streams',\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS,\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ metricId } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['dailyTotal', metricId],\n            testId: 'graphDailyTotalCard-header'\n          }),\n        body: ({ dailyHasData, dailyValue, metricId } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dailyHasData && metricId],\n              testId: 'graphDailyTotalCard-body',\n              total: helpers\n                .numberDisplay(dailyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 5,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dailyValue} aria-label={dailyValue} />]\n          ),\n        footer: ({ dailyDate } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment.utc(dailyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphDailyTotalCard-footer'\n          })\n      },\n      {\n        header: ({ metricId } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['monthlyTotal', metricId],\n            testId: 'graphMonthlyTotalCard-header'\n          }),\n        body: ({ metricId, monthlyHasData, monthlyValue } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', monthlyHasData && metricId],\n              testId: 'graphMonthlyTotalCard-body',\n              total: helpers\n                .numberDisplay(monthlyValue)\n                ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: false })\n                ?.toUpperCase()\n            },\n            [<strong title={monthlyValue} aria-label={monthlyValue} />]\n          ),\n        footer: ({ monthlyDate } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment.utc(monthlyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphMonthlyTotalCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick } = {}) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n      header: {\n        tooltip: () =>\n          translate('curiosity-inventory.header', {\n            context: ['tooltip', RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES]\n          })\n      },\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS,\n      header: {\n        tooltip: () =>\n          translate('curiosity-inventory.header', {\n            context: ['tooltip', RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS]\n          })\n      },\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label`, {\n          context: [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER, provider?.value || 'none']\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value &&\n          helpers.isDate(nextEventDate?.value) &&\n          moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    },\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.ROSA;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.ROSA;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.ROSA;\n\nconst config = {\n  aliases: [],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: undefined,\n  initialGraphSettings: {},\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.CORES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: undefined,\n  initialToolbarFilters: [\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES as CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = 'rhel';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.SATELLITE_SERVER;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.SATELLITE;\n\n/**\n * Satellite product config\n *\n * @type {{aliases: string[], productGroup: string, productId: string, productLabel: string, productDisplay: string, viewId: string,\n *     productVariants: string[], query: object, graphTallyQuery: object, inventoryHostQuery: object,\n *     inventorySubscriptionsQuery: object, initialGraphFilters: {}[], initialGraphSettings: object, initialGuestsFilters: {}[],\n *     initialInventoryFilters: {}[], initialToolbarFilters: {}[]}}\n */\nconst config = {\n  aliases: ['sat', 'server', 'capsule'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.CAPACITY,\n  viewId: `view${productGroup}-${productId}`,\n  productVariants: [...Object.values(RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES)],\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      filters: [\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.PHYSICAL\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorCyanLight.value,\n          stroke: chartColorCyanDark.value,\n          color: chartColorCyanDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.VIRTUAL\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorPurpleLight.value,\n          stroke: chartColorPurpleDark.value,\n          color: chartColorPurpleDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.CLOUD\n          }\n        }\n      ]\n    }\n  ],\n  initialGraphSettings: {\n    isDisabledLegendClick: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.NUMBER_OF_GUESTS,\n      cell: ({ [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests } = {}) => numberOfGuests?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.CATEGORY,\n      cell: ({ [INVENTORY_TYPES.CLOUD_PROVIDER]: cloudProvider, [INVENTORY_TYPES.CATEGORY]: category } = {}) => (\n        <React.Fragment>\n          {translate('curiosity-inventory.label', { context: [INVENTORY_TYPES.CATEGORY, category?.value] })}{' '}\n          {(cloudProvider?.value && (\n            <PfLabel color=\"purple\">\n              {translate('curiosity-inventory.label', {\n                context: [INVENTORY_TYPES.CLOUD_PROVIDER, cloudProvider?.value]\n              })}\n            </PfLabel>\n          )) ||\n            ''}\n        </React.Fragment>\n      ),\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.SOCKETS]: sockets } = {}) => sockets?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.USAGE,\n      selected: true\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.CATEGORY\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _camelCase from 'lodash/camelCase';\nimport _snakeCase from 'lodash/snakeCase';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Helpers\n * @module ReduxHelpers\n */\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Set an API query based on specific API \"acceptable values\" schema.\n *\n * @param {object} values\n * @param {object} schema\n * @param {*} [initialValue]\n * @returns {object}\n */\nconst setApiQuery = (values, schema, initialValue) => {\n  const generated = {};\n  const schemaArr = (schema && Object.values(schema)) || [];\n\n  schemaArr.forEach(value => {\n    if (initialValue === undefined) {\n      if (value in values) {\n        generated[value] = values?.[value];\n      }\n    } else {\n      generated[value] = values?.[value] || initialValue;\n    }\n  });\n\n  return generated;\n};\n\n// ToDo: research applying a maintained schema map/normalizer such as, normalizr\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} [initialValue]\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Normalize an API response.\n *\n * @param {*} responses\n * @param {object} responses.response\n * @param {object} responses.response.schema\n * @param {Array|object} responses.response.data\n * @param {string} responses.response.keyCase\n * @param {Function} responses.response.customResponseEntry\n * @param {Function} responses.response.customResponseValue\n * @param {string} responses.response.keyPrefix\n * @returns {Array}\n */\nconst setNormalizedResponse = (...responses) => {\n  const parsedResponses = [];\n\n  responses.forEach(\n    ({ schema = {}, data, customResponseEntry, customResponseValue, keyPrefix: prefix, keyCase = 'camel' }) => {\n      const isArray = Array.isArray(data);\n      const updatedData = (isArray && data) || (data && [data]) || [];\n      const [generatedSchema = {}] = setResponseSchemas([schema]);\n      const parsedResponse = [];\n\n      updatedData.forEach((value, index) => {\n        const generateReflectedData = ({\n          dataObj,\n          keyPrefix = '',\n          keyCaseType,\n          customEntry,\n          customValue = null,\n          update = helpers.noop\n        }) => {\n          let updatedDataObj = {};\n\n          Object.entries(dataObj).forEach(([dataObjKey, dataObjValue]) => {\n            let casedDataObjKey;\n\n            switch (keyCaseType) {\n              case 'camel':\n                casedDataObjKey = _camelCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'snake':\n                casedDataObjKey = _snakeCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'default':\n              default:\n                casedDataObjKey = `${dataObjKey}`.trim();\n                break;\n            }\n\n            let val = dataObjValue;\n\n            if (typeof val === 'number') {\n              val = (Number.isInteger(val) && Number.parseInt(val, 10)) || Number.parseFloat(val) || val;\n            }\n\n            if (typeof customValue === 'function') {\n              updatedDataObj[casedDataObjKey] = customValue({ data: dataObj, key: dataObjKey, value: val, index });\n            } else {\n              updatedDataObj[casedDataObjKey] = val;\n            }\n          });\n\n          if (typeof customEntry === 'function') {\n            updatedDataObj = customEntry(updatedDataObj, index);\n          }\n\n          update(updatedDataObj);\n        };\n\n        generateReflectedData({\n          keyPrefix: prefix,\n          dataObj: { ...generatedSchema, ...value },\n          keyCaseType: keyCase,\n          customEntry: customResponseEntry,\n          customValue: customResponseValue,\n          update: generatedData => parsedResponse.push(generatedData)\n        });\n      });\n\n      parsedResponses.push(parsedResponse);\n    }\n  );\n\n  return parsedResponses;\n};\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 400 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults?.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @param {object} options.state\n * @param {object} options.initialState\n * @param {boolean} options.reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (helpers.DEV_MODE && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (helpers.DEV_MODE && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    return {\n      meta: { ...updatedMeta },\n      ...Object.fromEntries(Object.entries(meta).map(([key, value]) => [_camelCase(`meta ${key}`), value]))\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  // Automatically apply data and state to a contextual ID if meta.id exists.\n  const setId = data =>\n    (typeof action.meta?.id === 'string' && action.meta?.id && { [action.meta.id]: { ...baseState, ...data } }) || {\n      ...baseState,\n      ...data\n    };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setApiQuery,\n  setResponseSchemas,\n  setNormalizedResponse,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { useSelector as useReactReduxSelector, shallowEqual } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { store } from '../store';\nimport { helpers } from '../../common';\n\n/**\n * State hooks for dispatch and selectors.\n *\n * @memberof Hooks\n * @module UseReactRedux\n */\n\n/**\n * FixMe: Appears to be an issue in trying to use Redux Promise with the default \"useDispatch\"\n */\n/**\n * Wrapper for store.dispatch, emulating useDispatch.\n *\n * @returns {Function}\n */\nconst useDispatch = () => dispatchEvent => store.dispatch(dispatchEvent);\n\n/**\n * Wrapper for Redux hook, useSelector. Applies test mode and a fallback value.\n *\n * @param {Function} selector\n * @param {*} value\n * @param {object} options\n * @param {*} options.equality\n * @param {Function} options.useSelector\n * @returns {*}\n */\nconst useSelector = (\n  selector,\n  value = null,\n  { equality, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => useAliasSelector(selector, equality) ?? value;\n\n/**\n * Generate a selector from multiple selectors for use in \"useSelector\".\n *\n * @param {Array|Function} selectors A selector function or array of functions. Or an array of objects in the form of\n *     { selector: Function, id: string } If an \"ID\" is used for each selector the returned response will be in the\n *     form of an object whose properties reflect said IDs with the associated selector value.\n * @param {*} value Pass-through value similar to charging the response.\n * @param {object} options\n * @param {Function} options.useSelector\n * @param {*} options.equality\n * @returns {Array|object}\n */\nconst useSelectors = (\n  selectors,\n  value,\n  { equality = shallowEqual, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => {\n  let updatedSelectors = Array.isArray(selectors) ? selectors : [selectors];\n  const selectorIds = new Set();\n\n  updatedSelectors = updatedSelectors.map(selector => {\n    if (selector.selector && selector.id) {\n      selectorIds.add(selector.id);\n      return selector.selector;\n    }\n    return selector;\n  });\n\n  const multiSelector = createSelector(updatedSelectors, (...results) => results);\n\n  let listMultiSelectorResponse = (useAliasSelector(multiSelector, equality) ?? value) || [];\n  const undefinedMultiSelectorResponse = listMultiSelectorResponse.filter(response => response === undefined);\n\n  if (undefinedMultiSelectorResponse.length === listMultiSelectorResponse.length) {\n    listMultiSelectorResponse = [];\n  } else {\n    listMultiSelectorResponse = _cloneDeep(listMultiSelectorResponse);\n  }\n\n  if (selectorIds.size && selectorIds.size === listMultiSelectorResponse.length) {\n    const idMultiSelectorResponse = {};\n\n    Array.from(selectorIds).forEach((id, index) => {\n      idMultiSelectorResponse[id] = listMultiSelectorResponse[index];\n    });\n\n    return idMultiSelectorResponse;\n  }\n\n  return listMultiSelectorResponse;\n};\n\n/**\n * Return a combined selector response using a \"Promise.all\" like response.\n *\n * @param {Array|Function} selectors A selector function or array of functions. Or an array of objects in the form of\n *     { selector: Function, id: string } If an \"ID\" is used for each selector the returned response will be in the\n *     form of an object whose properties reflect said IDs with the associated selector value.\n * @param {object} options\n * @param {Function} options.useSelectors\n * @param {Function} options.customResponse Callback for customizing your own response\n * @returns {{data: ({}|Array), pending: boolean, fulfilled: boolean, responses: {errorList: Array, errorId: {},\n *     id: {}, list: Array}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsResponse = (selectors, { useSelectors: useAliasSelectors = useSelectors, customResponse } = {}) => {\n  const selectorResponse = useAliasSelectors(selectors, []);\n  const isSelectorResponseArray = Array.isArray(selectorResponse);\n\n  const cancelledById = {};\n  const cancelledByList = [];\n  const cancelledDataById = {};\n  const cancelledDataByList = [];\n\n  const errorByList = [];\n  const errorById = {};\n  const errorDataById = {};\n  const errorDataByList = [];\n\n  const fulfilledByList = [];\n  const fulfilledById = {};\n  const fulfilledDataById = {};\n  const fulfilledDataByList = [];\n\n  const pendingByList = [];\n\n  const responsesById = {};\n  const responsesByList = [];\n  const dataById = {};\n  const dataByList = [];\n\n  const idList = [];\n\n  const updatedSelectorResponse = _cloneDeep(\n    (isSelectorResponseArray && selectorResponse) || Object.entries(selectorResponse)\n  );\n\n  updatedSelectorResponse.forEach(response => {\n    const id = (!isSelectorResponseArray && response?.[0]) || null;\n\n    const updatedResponse = (isSelectorResponseArray && response) || response?.[1] || response;\n    const isServiceResponse =\n      typeof updatedResponse.cancelled === 'boolean' ||\n      typeof updatedResponse.error === 'boolean' ||\n      typeof updatedResponse.fulfilled === 'boolean' ||\n      typeof updatedResponse.pending === 'boolean';\n\n    const { pending, fulfilled, error, cancelled, message } = (isServiceResponse && updatedResponse) || {};\n\n    if (id !== null) {\n      idList.push(id);\n      updatedResponse.id = id;\n    }\n\n    if (cancelled) {\n      cancelledByList.push(updatedResponse);\n      cancelledDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        cancelledById[id] = cancelledByList[cancelledByList.length - 1];\n        cancelledDataById[id] =\n          cancelledByList[cancelledByList.length - 1]?.data || cancelledByList[cancelledByList.length - 1];\n      }\n    }\n\n    if (error) {\n      errorByList.push({\n        ...updatedResponse,\n        ...new Error(message || `Error: useSelectorsAllResponse${(id && `, ${id}`) || ''}`)\n      });\n      errorDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        errorById[id] = errorByList[errorByList.length - 1];\n        errorDataById[id] = errorByList[errorByList.length - 1]?.data || errorByList[errorByList.length - 1];\n      }\n    }\n\n    if (fulfilled) {\n      fulfilledByList.push(updatedResponse);\n      fulfilledDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        fulfilledById[id] = fulfilledByList[fulfilledByList.length - 1];\n        fulfilledDataById[id] =\n          fulfilledByList[fulfilledByList.length - 1]?.data || fulfilledByList[fulfilledByList.length - 1];\n      }\n    }\n\n    if (pending) {\n      pendingByList.push(updatedResponse);\n    }\n\n    if (id !== null) {\n      responsesById[id] = updatedResponse;\n      dataById[id] = updatedResponse?.data || updatedResponse;\n    }\n\n    responsesByList.push(updatedResponse);\n    dataByList.push(updatedResponse?.data || updatedResponse);\n  });\n\n  const isById = idList.length !== 0 && idList.length === updatedSelectorResponse.length;\n\n  const response = {\n    responses: {\n      id: responsesById,\n      list: responsesByList\n    },\n    cancelled: false,\n    data: (isById && {}) || [],\n    error: false,\n    fulfilled: false,\n    message: null,\n    pending: false\n  };\n\n  if (typeof customResponse === 'function') {\n    Object.assign(response, {\n      ...customResponse(\n        { ...response, responses: { ...response.responses } },\n        {\n          cancelledById,\n          cancelledByList,\n          cancelledDataById,\n          cancelledDataByList,\n          dataById,\n          dataByList,\n          errorByList,\n          errorById,\n          errorDataById,\n          errorDataByList,\n          fulfilledByList,\n          fulfilledById,\n          fulfilledDataById,\n          fulfilledDataByList,\n          idList,\n          isById,\n          pendingByList,\n          responsesByList,\n          responsesById,\n          updatedSelectorResponse\n        }\n      )\n    });\n\n    return response;\n  }\n\n  if (errorByList.length) {\n    response.message = new Error(errorByList[0]?.message || `useSelectorsResponse, ${JSON.stringify(errorByList[0])}`);\n    response.error = true;\n    response.data = (isById && errorDataById) || errorDataByList;\n    return response;\n  }\n\n  if (pendingByList.length) {\n    response.pending = true;\n    return response;\n  }\n\n  if (cancelledByList.length && cancelledByList.length === responsesByList.length) {\n    response.message = new Error('Cancelled useSelectorsResponse');\n    response.cancelled = true;\n    response.data = (isById && cancelledById) || cancelledByList;\n    return response;\n  }\n\n  if (\n    fulfilledByList.length &&\n    (fulfilledByList.length === responsesByList.length ||\n      cancelledByList.length + fulfilledByList.length === responsesByList.length)\n  ) {\n    response.fulfilled = true;\n    response.data = (isById && dataById) || dataByList;\n    return response;\n  }\n\n  return response;\n};\n\n/**\n * Return a combined selector response using a \"Promise.allSettled\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|Array), pending: boolean, fulfilled: boolean, responses: {errorList: Array, errorId: {},\n *     id: {}, list: Array}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsAllSettledResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    { cancelledByList, errorByList, fulfilledByList, pendingByList, dataById, dataByList, isById }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (\n      errorByList?.length + fulfilledByList?.length + cancelledByList?.length === dataByList?.length ||\n      errorByList?.length === dataByList?.length ||\n      fulfilledByList?.length === dataByList?.length ||\n      cancelledByList?.length === dataByList?.length\n    ) {\n      response.fulfilled = true;\n      response.data = (isById && dataById) || dataByList;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\n/**\n * Return a combined selector response using a \"Promise.any\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|Array), pending: boolean, fulfilled: boolean, responses: {errorList: Array, errorId: {},\n *     id: {}, list: Array}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsAnyResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    {\n      cancelledByList,\n      cancelledDataById,\n      cancelledDataByList,\n      errorByList,\n      errorDataById,\n      errorDataByList,\n      fulfilledByList,\n      fulfilledDataById,\n      fulfilledDataByList,\n      pendingByList,\n      responsesByList,\n      isById\n    }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (fulfilledByList?.length) {\n      let data = fulfilledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(fulfilledDataById);\n        data = (keyList?.[0] && fulfilledDataById[keyList[0]]) || undefined;\n      }\n\n      response.fulfilled = true;\n      response.data = data;\n      return response;\n    }\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (\n      errorByList?.length &&\n      (errorByList?.length === responsesByList?.length ||\n        cancelledByList?.length + errorByList?.length === responsesByList?.length)\n    ) {\n      response.message = helpers.aggregatedError(errorByList, 'useSelectorsAnyResponse');\n      response.error = true;\n      response.data = (isById && errorDataById) || errorDataByList;\n      return response;\n    }\n\n    if (cancelledByList?.length && cancelledByList?.length === responsesByList?.length) {\n      response.message = new Error('Cancelled useSelectorsAnyResponse');\n      response.cancelled = true;\n      response.data = (isById && cancelledDataById) || cancelledDataByList;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\n/**\n * Return a combined selector response using a \"Promise.race\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|Array), pending: boolean, fulfilled: boolean, responses: {errorList: Array, errorId: {},\n *     id: {}, list: Array}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsRaceResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    {\n      cancelledByList,\n      cancelledDataById,\n      cancelledDataByList,\n      errorByList,\n      errorDataById,\n      errorDataByList,\n      fulfilledByList,\n      fulfilledDataById,\n      fulfilledDataByList,\n      pendingByList,\n      responsesByList,\n      isById\n    }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (fulfilledByList?.length) {\n      let data = fulfilledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(fulfilledDataById);\n        data = (keyList?.[0] && fulfilledDataById[keyList[0]]) || undefined;\n      }\n\n      response.fulfilled = true;\n      response.data = data;\n      return response;\n    }\n\n    if (errorByList?.length) {\n      let data = errorDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(errorDataById);\n        data = (keyList?.[0] && errorDataById[keyList[0]]) || undefined;\n      }\n\n      response.message = new Error(\n        errorByList[0]?.message || `useSelectorsRaceResponse, ${JSON.stringify(errorByList[0])}`\n      );\n      response.error = true;\n      response.data = data;\n      return response;\n    }\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (cancelledByList?.length && cancelledByList?.length === responsesByList?.length) {\n      let data = cancelledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(cancelledDataById);\n        data = (keyList?.[0] && cancelledDataById[keyList[0]]) || undefined;\n      }\n\n      response.message = new Error('Cancelled useSelectorsRaceResponse');\n      response.cancelled = true;\n      response.data = data;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\nconst reactReduxHooks = {\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useSelectors,\n  useSelectorsResponse,\n  useSelectorsAllSettledResponse,\n  useSelectorsAnyResponse,\n  useSelectorsRaceResponse\n};\n\nexport {\n  reactReduxHooks as default,\n  reactReduxHooks,\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useSelectors,\n  useSelectorsResponse,\n  useSelectorsAllSettledResponse,\n  useSelectorsAnyResponse,\n  useSelectorsRaceResponse\n};\n","import { reactReduxHooks } from './useReactRedux';\n\nconst storeHooks = {\n  reactRedux: reactReduxHooks\n};\n\nexport { storeHooks as default, storeHooks, reactReduxHooks };\n","import _camelCase from 'lodash/camelCase';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Helpers\n * @module ServiceHelpers\n */\n\n/**\n * Pass through generate hash\n */\nconst { generateHash } = helpers;\n\n/**\n * A timeout cancel for function calls.\n *\n * @param {Function} func Callback to be executed or cancelled\n * @param {object} options\n * @param {number} options.timeout Function timeout in milliseconds\n * @param {string} options.errorMessage What the error message will read\n * @returns {Promise<*>}\n */\nconst timeoutFunctionCancel = (func, { timeout = 3000, errorMessage = 'function timeout' } = {}) => {\n  let clearTimer;\n\n  const timer = () =>\n    new Promise((_, reject) => {\n      clearTimer = window.setTimeout(reject, timeout, new Error(errorMessage));\n    });\n\n  const updatedFunc = async () => {\n    const response = await func();\n    window.clearTimeout(clearTimer);\n    return response;\n  };\n\n  const execFunction = () =>\n    Promise.race([timer(), updatedFunc()]).finally(() => {\n      window.clearTimeout(clearTimer);\n    });\n\n  return execFunction();\n};\n\n/**\n * Return objects with the keys camelCased. Normally applied to an array of objects.\n *\n * @param {object|Array|*} obj\n * @returns {object|Array|*}\n */\nconst camelCase = obj => {\n  if (Array.isArray(obj)) {\n    return obj.map(camelCase);\n  }\n\n  if (_isPlainObject(obj)) {\n    const updatedObj = {};\n\n    Object.entries(obj).forEach(([key, val]) => {\n      updatedObj[_camelCase(key)] = camelCase(val);\n    });\n\n    return updatedObj;\n  }\n\n  return obj;\n};\n\n/**\n * Apply data to a callback, pass original data on error.\n *\n * @param {Function} callback\n * @param {Array} data\n * @returns {{data: *, error}}\n */\nconst passDataToCallback = (callback, ...data) => {\n  let error;\n  let updatedData = data;\n\n  try {\n    updatedData = callback(...data);\n  } catch (e) {\n    error = e;\n  }\n\n  return { data: updatedData, error };\n};\n\n/**\n * A callback for schema validation, and after-the-fact casing adjustments.\n *\n * @param {object} options\n * @param {string} options.casing\n * @param {boolean} options.convert\n * @param {string} options.id\n * @param {object|Array} options.response\n * @param {*} options.schema\n * @returns {*|{}}\n */\nconst schemaResponse = ({ casing, convert = true, id = null, response, schema } = {}) => {\n  const { value, error = { details: [] } } = schema?.validate(response, { convert }) || {};\n\n  if (error.details.length && !helpers.TEST_MODE) {\n    console.error(\n      new Error(\n        `Passing original API response. Schema validation failed for ${id || '...'}: ${error.details\n          .map(({ context = {}, message, type }) => `${message}:${type}, ${JSON.stringify(context)}`)\n          .join(', ')}`\n      )\n    );\n  }\n\n  switch (casing) {\n    case 'camel':\n      return camelCase(value);\n    default:\n      return value;\n  }\n};\n\nconst serviceHelpers = {\n  camelCase,\n  generateHash,\n  passDataToCallback,\n  schemaResponse,\n  timeoutFunctionCancel\n};\n\nexport {\n  serviceHelpers as default,\n  serviceHelpers,\n  camelCase,\n  generateHash,\n  passDataToCallback,\n  schemaResponse,\n  timeoutFunctionCancel\n};\n","import axios, { CancelToken } from 'axios';\nimport LruCache from 'lru-cache';\nimport { serviceHelpers } from './helpers';\n\n/**\n * Axios config for cancelling, caching, and emulated service calls.\n *\n * @memberof Helpers\n * @module ServiceConfig\n */\n\n/**\n * Set Axios XHR default timeout.\n *\n * @type {number}\n */\nconst globalXhrTimeout = Number.parseInt(process.env.REACT_APP_AJAX_TIMEOUT, 10) || 60000;\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @type {object}\n */\nconst globalCancelTokens = {};\n\n/**\n * Cache Axios service call responses.\n *\n * @type {object}\n */\nconst globalResponseCache = new LruCache({\n  ttl: Number.parseInt(process.env.REACT_APP_AJAX_CACHE, 10) || 30000,\n  max: 100,\n  updateAgeOnGet: true\n});\n\n// ToDo: consider another way of hashing cacheIDs. base64 could get a little large depending on settings, i.e. md5\n/**\n * Set Axios configuration. This includes response schema validation and caching.\n * Call platform \"getUser\" auth method, and apply service config. Service configuration\n * includes the ability to cancel all and specific calls, cache and normalize a response\n * based on both a provided schema and a successful API response. The cache will refresh\n * its timeout on continuous calls. To reset it a user will either need to refresh the\n * page or wait the \"maxAge\".\n *\n * @param {object} config\n * @param {object} config.cache\n * @param {boolean} config.cancel\n * @param {string} config.cancelId\n * @param {object} config.params\n * @param {Array} config.schema\n * @param {Array} config.transform\n * @param {string|Function} config.url\n * @param {object} options\n * @param {string} options.cancelledMessage\n * @param {object} options.responseCache\n * @param {number} options.xhrTimeout\n * @returns {Promise<*>}\n */\nconst axiosServiceCall = async (\n  config = {},\n  { cancelledMessage = 'cancelled request', responseCache = globalResponseCache, xhrTimeout = globalXhrTimeout } = {}\n) => {\n  const updatedConfig = {\n    timeout: xhrTimeout,\n    ...config,\n    cache: undefined,\n    cacheResponse: config.cache,\n    method: config.method || 'get'\n  };\n  const responseTransformers = [];\n  const axiosInstance = axios.create();\n\n  // don't cache responses if \"get\" isn't used\n  updatedConfig.cacheResponse = updatedConfig.cacheResponse === true && updatedConfig.method === 'get';\n\n  // account for alterations to transforms, and other config props\n  const cacheId = (updatedConfig.cacheResponse === true && serviceHelpers.generateHash(updatedConfig)) || null;\n\n  // simple check to place responsibility on consumer, primarily used for testing\n  if (updatedConfig.exposeCacheId === true) {\n    updatedConfig.cacheId = cacheId;\n  }\n\n  if (updatedConfig.cancel === true) {\n    const cancelTokensId =\n      updatedConfig.cancelId || serviceHelpers.generateHash({ ...updatedConfig, data: undefined, params: undefined });\n\n    if (globalCancelTokens[cancelTokensId]) {\n      await globalCancelTokens[cancelTokensId].cancel(cancelledMessage);\n    }\n\n    globalCancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = globalCancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  if (updatedConfig.cacheResponse === true) {\n    const cachedResponse = responseCache.get(cacheId);\n\n    if (cachedResponse) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          ...cachedResponse,\n          status: 304,\n          statusText: 'Not Modified',\n          config: adapterConfig\n        });\n\n      return axiosInstance(updatedConfig);\n    }\n  }\n\n  if (updatedConfig.schema) {\n    responseTransformers.push(updatedConfig.schema);\n  }\n\n  if (updatedConfig.transform) {\n    responseTransformers.push(updatedConfig.transform);\n  }\n\n  responseTransformers.forEach(([successTransform, errorTransform]) => {\n    const transformers = [undefined, response => Promise.reject(response)];\n\n    if (successTransform) {\n      transformers[0] = response => {\n        const updatedResponse = { ...response };\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          successTransform,\n          updatedResponse.data,\n          updatedResponse.config\n        );\n\n        if (!normalizeError) {\n          updatedResponse.data = data;\n        }\n\n        return updatedResponse;\n      };\n    }\n\n    if (errorTransform) {\n      transformers[1] = response => {\n        const updatedResponse = { ...(response.response || response) };\n\n        if (updatedResponse?.message === cancelledMessage) {\n          return Promise.reject(updatedResponse);\n        }\n\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          errorTransform,\n          updatedResponse?.data || updatedResponse?.message,\n          updatedResponse.config\n        );\n\n        if (!normalizeError) {\n          updatedResponse.response = { ...updatedResponse, data };\n        }\n\n        return Promise.reject(updatedResponse);\n      };\n    }\n\n    axiosInstance.interceptors.response.use(...transformers);\n  });\n\n  if (updatedConfig.cacheResponse === true) {\n    axiosInstance.interceptors.response.use(\n      response => {\n        const updatedResponse = { ...response };\n        responseCache.set(cacheId, updatedResponse);\n        return updatedResponse;\n      },\n      response => Promise.reject(response)\n    );\n  }\n\n  if (typeof updatedConfig.url === 'function') {\n    const emulateCallback = updatedConfig.url;\n    updatedConfig.url = '/emulated';\n\n    let message = 'success, emulated';\n    let emulatedResponse;\n    let isSuccess = true;\n\n    try {\n      emulatedResponse = await serviceHelpers.timeoutFunctionCancel(emulateCallback, { timeout: xhrTimeout });\n    } catch (e) {\n      isSuccess = false;\n      message = e.message || e;\n    }\n\n    if (isSuccess) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          data: emulatedResponse,\n          status: 200,\n          statusText: message,\n          config: adapterConfig\n        });\n    } else {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.reject({ // eslint-disable-line\n          ...new Error(message),\n          message,\n          status: 418,\n          config: adapterConfig\n        });\n    }\n  }\n\n  return axiosInstance(updatedConfig);\n};\n\nconst serviceConfig = { axiosServiceCall, globalXhrTimeout, globalCancelTokens, globalResponseCache };\n\nexport {\n  serviceConfig as default,\n  serviceConfig,\n  axiosServiceCall,\n  globalXhrTimeout,\n  globalCancelTokens,\n  globalResponseCache\n};\n","import JoiBase from 'joi';\nimport JoiDate from '@joi/date';\nimport { schemaResponse } from '../common/helpers';\n\n/**\n * @memberof Platform\n * @module PlatformSchemas\n */\n\n/**\n * Extend Joi with date.\n *\n * @type {*}\n */\nconst Joi = JoiBase.extend(JoiDate);\n\n/**\n * User response item.\n *\n * @type {*} Joi schema\n */\nconst userResponseSchema = Joi.object()\n  .keys({\n    identity: Joi.object({\n      user: Joi.object({\n        is_org_admin: Joi.boolean().default(false)\n      })\n        .unknown(true)\n        .default({})\n    })\n      .unknown(true)\n      .default({}),\n    entitlements: Joi.object({\n      [process.env.REACT_APP_UI_NAME]: Joi.object({\n        is_entitled: Joi.boolean().default(false)\n      })\n        .unknown(true)\n        .default({})\n    })\n      .unknown(true)\n      .default({})\n  })\n  .unknown(true)\n  .default({});\n\n/**\n * Permissions response item.\n *\n * @type {*} Joi schema\n */\nconst permissionsItem = Joi.object({\n  permission: Joi.string().optional().allow(null),\n  resourceDefinitions: Joi.array().optional().default([])\n})\n  .unknown(true)\n  .default();\n\n/**\n * Authorize response.\n *\n * @type {*} Joi schema\n */\nconst permissionsResponseSchema = Joi.array().items(permissionsItem).default([]);\n\nconst platformSchemas = {\n  user: response => schemaResponse({ response, schema: userResponseSchema, id: 'User auth' }),\n  permissions: response => schemaResponse({ response, schema: permissionsResponseSchema, id: 'Permissions auth' })\n};\n\nexport { platformSchemas as default, platformSchemas };\n","import { rbacConfig } from '../../config';\nimport {\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES as OPERATION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES as RESOURCE_TYPES\n} from './platformConstants';\nimport { helpers } from '../../common';\n\n/**\n * Transform platform responses. Replaces selector usage.\n *\n * @memberof Platform\n * @module PlatformTransformers\n */\n\n/**\n * Parse platform getUser response.\n *\n * @param {object} response\n * @returns {object}\n */\nconst user = response => {\n  const updatedResponse = {};\n  const {\n    [platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY]: identity = {},\n    [platformConstants.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS]: entitlements = {}\n  } = response || {};\n\n  updatedResponse.isAdmin =\n    identity?.[platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]?.[\n      platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n    ] || false;\n\n  updatedResponse.isEntitled =\n    entitlements?.[helpers.UI_NAME]?.[platformConstants.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED] ||\n    false;\n\n  return updatedResponse;\n};\n\n/**\n * Parse platform getUserPermissions response.\n *\n * @param {object} response\n * @param {object} options\n * @param {object} options.config Pass in a configuration object, RBAC\n * @returns {object}\n */\nconst userPermissions = (response, { config = rbacConfig } = {}) => {\n  const updatedResponse = {\n    permissions: {},\n    authorized: {}\n  };\n\n  response?.forEach(\n    ({\n      [platformConstants.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION]: permission,\n      [platformConstants.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]: definitions = []\n    }) => {\n      const [app = '', resource, operation] = permission?.split(':') || [];\n\n      if (!updatedResponse.permissions[app]) {\n        updatedResponse.permissions[app] = {\n          all: false,\n          resources: {}\n        };\n      }\n\n      if (resource === RESOURCE_TYPES.ALL && operation === OPERATION_TYPES.ALL) {\n        updatedResponse.permissions[app].all = true;\n      }\n\n      if (resource) {\n        updatedResponse.permissions[app].resources[resource] ??= {};\n\n        if (operation) {\n          updatedResponse.permissions[app].resources[resource][operation] = definitions;\n        }\n      }\n    }\n  );\n\n  // Alias specific app permissions checks\n  Object.entries(config).forEach(([key, { permissions: resourcePermissions }]) => {\n    updatedResponse.authorized[key] = updatedResponse.permissions[key]?.all || false;\n\n    resourcePermissions.forEach(({ resource: res, operation: op }) => {\n      if (updatedResponse.permissions[key]?.resources?.[res]?.[op]) {\n        updatedResponse.authorized[key] = true;\n      }\n    });\n  });\n\n  return updatedResponse;\n};\n\nconst platformTransformers = {\n  user,\n  permissions: userPermissions\n};\n\nexport { platformTransformers as default, platformTransformers, user, userPermissions };\n","import _set from 'lodash/set';\nimport { rbacConfig } from '../../config';\nimport { axiosServiceCall } from '../common/serviceConfig';\nimport { platformSchemas } from './platformSchemas';\nimport { platformTransformers } from './platformTransformers';\nimport { helpers } from '../../common';\nimport {\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES as USER_PERMISSION_TYPES\n} from './platformConstants';\n\n/**\n * Emulated service calls for platform globals.\n *\n * @memberof Platform\n * @module PlatformServices\n */\n\n/**\n * Basic user authentication.\n *\n * @param {object} options\n * @returns {Promise<*>}\n */\nconst getUser = async (options = {}) => {\n  const { schema = [platformSchemas.user], transform = [platformTransformers.user] } = options;\n  const { insights } = window;\n  return axiosServiceCall({\n    url: async () => {\n      try {\n        return (\n          (helpers.DEV_MODE &&\n            _set(\n              {},\n              [\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY,\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n              ],\n              process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n            )) ||\n          (await insights.chrome.auth.getUser())\n        );\n      } catch (e) {\n        throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n      }\n    },\n    schema,\n    transform\n  });\n};\n\n/**\n * Basic user permissions.\n *\n * @param {string} appName\n * @param {object} options\n * @returns {Promise<*>}\n */\nconst getUserPermissions = (appName = Object.keys(rbacConfig), options = {}) => {\n  const { schema = [platformSchemas.permissions], transform = [platformTransformers.permissions] } = options;\n  const updatedAppName = (Array.isArray(appName) && appName) || [appName];\n  const { insights } = window;\n  const platformMethod = name =>\n    (helpers.DEV_MODE && [\n      {\n        [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_ONE\n      },\n      {\n        [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_TWO\n      }\n    ]) ||\n    insights.chrome.getUserPermissions(name);\n\n  return axiosServiceCall({\n    url: async () => {\n      let userPermissions;\n\n      try {\n        const allPermissions = await Promise.all(updatedAppName.map(name => platformMethod(name)));\n\n        if (Array.isArray(allPermissions)) {\n          userPermissions = [...allPermissions.flat()];\n        }\n      } catch (e) {\n        throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n      }\n\n      return userPermissions;\n    },\n    schema,\n    transform\n  });\n};\n\n/**\n * Disables the Platform's global filter display.\n *\n * @param {boolean} isHidden\n * @returns {Promise<*>}\n */\nconst hideGlobalFilter = async (isHidden = true) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.hideGlobalFilter(isHidden);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = {\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter\n};\n\nexport { platformServices as default, platformServices, getUser, getUserPermissions, hideGlobalFilter };\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platform/platformServices';\n\n/**\n * Platform service wrappers for dispatch, state update.\n *\n * @memberof Actions\n * @module PlatformActions\n */\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Get an emulated and combined API response from the platforms \"getUser\" and \"getUserPermissions\" global methods.\n *\n * @param {string|Array} appName\n * @returns {Function}\n */\nconst authorizeUser = appName => dispatch =>\n  dispatch({\n    type: platformTypes.PLATFORM_USER_AUTH,\n    payload: Promise.all([platformServices.getUser(), platformServices.getUserPermissions(appName)])\n  });\n\n/**\n * Hide platform global filter.\n *\n * @param {boolean} isHidden\n * @returns {{Function}}\n */\nconst hideGlobalFilter = isHidden => ({\n  type: platformTypes.PLATFORM_GLOBAL_FILTER_HIDE,\n  payload: platformServices.hideGlobalFilter(isHidden)\n});\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  authorizeUser,\n  hideGlobalFilter\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  authorizeUser,\n  hideGlobalFilter\n};\n","import { axiosServiceCall } from './common/serviceConfig';\nimport { platformServices } from './platform/platformServices';\n\n/**\n * @namespace Services\n * @property {module} Helpers\n * @property {module} Platform\n * @property {module} Rhsm\n * @property {module} User\n */\n\n/**\n * Apply a global custom service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  ...passedConfig\n});\n\n/**\n * Use a global Axios configuration.\n *\n * @param {object} config\n * @param {object} config.cache\n * @param {boolean} config.cancel\n * @param {string} config.cancelId\n * @param {object} config.params\n * @param {Array} config.schema\n * @param {Array} config.transform\n * @param {string|Function} config.url\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n  return axiosServiceCall(serviceConfig(config));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import JoiBase from 'joi';\nimport JoiDate from '@joi/date';\nimport { schemaResponse } from '../common/helpers';\nimport { rhsmConstants } from './rhsmConstants';\n\n/**\n * @memberof Rhsm\n * @module RhsmSchemas\n */\n\n/**\n * Extend Joi with date.\n *\n * @type {*}\n */\nconst Joi = JoiBase.extend(JoiDate);\n\n/**\n * Error response item.\n *\n * @type {*} Joi schema\n */\nconst errorItem = Joi.object({\n  code: Joi.string().default(null),\n  detail: Joi.string().default(null)\n}).unknown(true);\n\n/**\n * Error response.\n *\n * @type {*} Joi schema\n */\nconst errorResponseSchema = Joi.object()\n  .keys({\n    errors: Joi.array().items(errorItem).default([])\n  })\n  .unknown(true);\n\nconst linksSchema = Joi.object();\n\n/**\n * RHSM base response meta field.\n *\n * @type {*} Joi schema\n */\nconst metaResponseSchema = Joi.object()\n  .keys({\n    count: Joi.number().integer().default(0),\n    product: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_PRODUCT_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Capacity response meta field.\n *\n * @type {*} Joi schema\n */\nconst capacityMetaSchema = metaResponseSchema\n  .keys({\n    metric_id: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Capacity response item.\n *\n * @type {*} Joi schema\n */\nconst capacityItem = Joi.object({\n  date: Joi.date().utc().allow(null),\n  has_data: Joi.boolean().optional().allow(null),\n  has_infinite_quantity: Joi.boolean().optional().allow(null),\n  value: Joi.number().allow(null).default(0)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Capacity response.\n *\n * @type {*} Joi schema\n */\nconst capacityResponseSchema = Joi.object().keys({\n  data: Joi.array().items(capacityItem).default([]),\n  links: linksSchema.default({}),\n  meta: capacityMetaSchema.default({})\n});\n\n/**\n * Guests response meta field.\n *\n * @type {*} Joi schema\n */\nconst guestsMetaSchema = Joi.object()\n  .keys({\n    count: Joi.number().integer().default(0)\n  })\n  .unknown(true);\n\n/**\n * Guests response item.\n *\n * @type {*} Joi schema\n */\nconst guestsItem = Joi.object({\n  inventory_id: Joi.string().optional().allow(null),\n  display_name: Joi.string().optional().allow(null),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Guests response.\n *\n * @type {*} Joi schema\n */\nconst guestsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(guestsItem).default([]),\n  links: linksSchema.default({}),\n  meta: guestsMetaSchema.default({})\n});\n\n/**\n * Hosts response meta field.\n *\n * @type {*} Joi schema\n */\nconst hostsMetaSchema = metaResponseSchema;\n\n/**\n * Hosts response item.\n *\n * @type {*} Joi schema\n */\nconst hostsItem = Joi.object({\n  cloud_provider: Joi.string().lowercase().optional().allow(null),\n  display_name: Joi.string().optional().allow(null),\n  hardware_type: Joi.string().lowercase().optional().allow(null),\n  inventory_id: Joi.string().optional().allow(null),\n  measurement_type: Joi.string().lowercase().optional().allow(null),\n  number_of_guests: Joi.number().integer().default(0),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Hosts response.\n *\n * @type {*} Joi schema\n */\nconst hostsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(hostsItem).default([]),\n  links: linksSchema.default({}),\n  meta: hostsMetaSchema.default({})\n});\n\n/**\n * Instances response meta field.\n *\n * @type {*} Joi schema\n */\nconst instancesMetaSchema = metaResponseSchema\n  .keys({\n    measurements: Joi.array()\n      .items(Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)))\n      .default([])\n  })\n  .unknown(true);\n\n/**\n * Instances response item.\n *\n * @type {*} Joi schema\n */\nconst instancesItem = Joi.object({\n  instance_id: Joi.string().optional().allow(null),\n  category: Joi.string().lowercase().optional().allow(null),\n  cloud_provider: Joi.string().lowercase().optional().allow(null, ''),\n  display_name: Joi.string().optional().allow(null),\n  billing_provider: Joi.string().lowercase().optional().allow(null, ''),\n  billing_account_id: Joi.string().optional().allow(null),\n  measurements: Joi.array().default([]),\n  number_of_guests: Joi.number().integer().default(0),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Instances response.\n *\n * @type {*} Joi schema\n */\nconst instancesResponseSchema = Joi.object().keys({\n  data: Joi.array().items(instancesItem).default([]),\n  links: linksSchema.default({}),\n  meta: instancesMetaSchema.default({})\n});\n\n/**\n * Subscriptions response meta field.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsMetaSchema = metaResponseSchema\n  .keys({\n    subscription_type: Joi.string().valid(null, ...Object.values(rhsmConstants.RHSM_API_RESPONSE_SUBSCRIPTION_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Subscriptions response item.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsItem = Joi.object({\n  has_infinite_quantity: Joi.boolean().optional().allow(null),\n  next_event_date: Joi.date().utc().allow(null),\n  product_name: Joi.string().optional().allow(null),\n  quantity: Joi.number().allow(null).default(0),\n  service_level: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_RESPONSE_SLA_TYPES)),\n  total_capacity: Joi.number().allow(null).default(0),\n  uom: Joi.string()\n    .lowercase()\n    .valid(...Object.values(rhsmConstants.RHSM_API_RESPONSE_UOM_TYPES))\n})\n  .unknown(true)\n  .default();\n\n/**\n * Subscriptions response.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(subscriptionsItem).default([]),\n  links: linksSchema.default({}),\n  meta: subscriptionsMetaSchema.default({})\n});\n\n/**\n * Tally and capacity metric response item.\n *\n * @type {*} Joi schema\n */\nconst tallyItem = Joi.object({\n  date: Joi.date().utc().allow(null),\n  has_data: Joi.boolean().optional().allow(null),\n  value: Joi.number().allow(null).default(0)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Tally response meta field.\n *\n * @type {*} Joi schema\n */\nconst tallyMetaSchema = metaResponseSchema\n  .keys({\n    has_cloudigrade_data: Joi.boolean().optional().allow(null),\n    has_cloudigrade_mismatch: Joi.boolean().optional().allow(null),\n    metric_id: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)),\n    total_monthly: tallyItem\n  })\n  .unknown(true);\n\n/**\n * Tally response.\n *\n * @type {*} Joi schema\n */\nconst tallyResponseSchema = Joi.object().keys({\n  data: Joi.array().items(tallyItem).default([]),\n  links: linksSchema.default({}),\n  meta: tallyMetaSchema.default({})\n});\n\nconst rhsmSchemas = {\n  capacity: response => schemaResponse({ response, schema: capacityResponseSchema, id: 'RHSM capacity' }),\n  errors: response => schemaResponse({ response, schema: errorResponseSchema, id: 'RHSM errors' }),\n  guests: response => schemaResponse({ response, casing: 'camel', schema: guestsResponseSchema, id: 'RHSM guests' }),\n  hosts: response => schemaResponse({ response, schema: hostsResponseSchema, id: 'RHSM hosts' }),\n  instances: response => schemaResponse({ response, schema: instancesResponseSchema, id: 'RHSM instances' }),\n  subscriptions: response =>\n    schemaResponse({ response, schema: subscriptionsResponseSchema, id: 'RHSM subscriptions' }),\n  tally: response => schemaResponse({ response, schema: tallyResponseSchema, id: 'RHSM tally' })\n};\n\nexport { rhsmSchemas as default, rhsmSchemas };\n","import moment from 'moment';\nimport {\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES as HOSTS_DATA_TYPES,\n  RHSM_API_RESPONSE_HOSTS_META_TYPES as HOSTS_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES as INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES as TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES as TALLY_CAPACITY_META_TYPES,\n  rhsmConstants\n} from './rhsmConstants';\nimport { dateHelpers } from '../../common';\n\n/**\n * Transform RHSM responses. Replaces selector usage.\n *\n * @memberof Rhsm\n * @module RhsmTransformers\n */\n\n/**\n * Parse RHSM hosts response for caching.\n *\n * @param {object} response\n * @returns {object}\n */\nconst rhsmHosts = response => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n\n  updatedResponse.data = data.map(\n    ({\n      [HOSTS_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      [HOSTS_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n      ...dataResponse\n    }) => ({\n      [HOSTS_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      [HOSTS_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n      numberOfGuests,\n      subscriptionManagerId,\n      ...dataResponse\n    })\n  );\n\n  updatedResponse.meta = {\n    count: meta[HOSTS_META_TYPES.COUNT],\n    productId: meta[HOSTS_META_TYPES.PRODUCT]\n  };\n\n  return updatedResponse;\n};\n\n/**\n * ToDO: remove the UOM fallback if/when the API supports returning some form of the UOM in the response\n * This is a temporary fix that passes the selected _uom from params in the event the API doesn't\n * include it.\n */\n/**\n * Parse RHSM instances response for caching.\n *\n * @param {object} response\n * @param {object} config\n * @param {object} config.params\n * @returns {object}\n */\nconst rhsmInstances = (response, { params } = {}) => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const metaMeasurements = meta[INSTANCES_META_TYPES.MEASUREMENTS];\n\n  updatedResponse.data = data.map(\n    ({\n      [INSTANCES_DATA_TYPES.MEASUREMENTS]: measurements,\n      [INSTANCES_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n      [INSTANCES_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      ...dataResponse\n    }) => {\n      const updatedData = {\n        [INSTANCES_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n        numberOfGuests,\n        [INSTANCES_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n        subscriptionManagerId,\n        ...dataResponse\n      };\n\n      metaMeasurements?.forEach((measurement, index) => {\n        updatedData[measurement] = measurements[index];\n      });\n\n      return updatedData;\n    }\n  );\n\n  let normalizedUom = meta?.[INSTANCES_META_TYPES.UOM] ?? params?.[INSTANCES_META_TYPES.UOM];\n\n  if (normalizedUom?.toLowerCase() === RHSM_API_PATH_METRIC_TYPES.SOCKETS.toLowerCase()) {\n    normalizedUom = RHSM_API_PATH_METRIC_TYPES.SOCKETS;\n  } else if (normalizedUom?.toLowerCase() === RHSM_API_PATH_METRIC_TYPES.CORES.toLowerCase()) {\n    normalizedUom = RHSM_API_PATH_METRIC_TYPES.CORES;\n  }\n\n  updatedResponse.meta = {\n    count: meta[INSTANCES_META_TYPES.COUNT],\n    uom: normalizedUom,\n    productId: meta[INSTANCES_META_TYPES.PRODUCT]\n  };\n\n  return updatedResponse;\n};\n\n/**\n * ToDo: Confirm category meta response for Capacity\n * We're temporarily applying category from submitted params. API docs indicate\n * category only comes through on metric capacity?\n */\n/**\n * Parse RHSM tally response for caching.\n *\n * @param {object} response\n * @param {object} config\n * @param {boolean} config._isCapacity\n * @param {object} config.params\n * @returns {object}\n */\nconst rhsmTallyCapacity = (response, { _isCapacity, params } = {}) => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const currentDate = moment.utc(dateHelpers.getCurrentDate());\n  const currentDateStr = moment.utc(dateHelpers.getCurrentDate()).format('MM-D-YYYY');\n  let futureDateCount = 0;\n\n  updatedResponse.data = data.map(\n    (\n      {\n        [TALLY_CAPACITY_DATA_TYPES.DATE]: date,\n        [TALLY_CAPACITY_DATA_TYPES.VALUE]: value,\n        [TALLY_CAPACITY_DATA_TYPES.HAS_DATA]: hasData,\n        [TALLY_CAPACITY_DATA_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity\n      },\n      index\n    ) => {\n      const updatedDate = moment.utc(date);\n      const isCurrentDate = updatedDate.format('MM-D-YYYY') === currentDateStr;\n      const isFutureDate = updatedDate.diff(currentDate) > 0;\n\n      if (isFutureDate && !isCurrentDate) {\n        futureDateCount += 1;\n      }\n\n      return {\n        x: index,\n        y:\n          (_isCapacity === true && isFutureDate) ||\n          (_isCapacity === true && hasInfiniteQuantity === true) ||\n          (!_isCapacity && hasData === false && isFutureDate) ||\n          (!_isCapacity && hasData === false && isCurrentDate)\n            ? null\n            : value,\n        date,\n        hasData,\n        hasInfiniteQuantity,\n        isCurrentDate,\n        isFutureDate\n      };\n    }\n  );\n\n  /**\n   * Add an extra date to the first entry of the range to help Victory charts display.\n   */\n  if (futureDateCount === updatedResponse.data.length - 1) {\n    updatedResponse.data = [\n      {\n        ...updatedResponse.data[0],\n        x: 0,\n        isCurrentDate: false\n      },\n      ...updatedResponse.data\n    ].map((props, index) => ({ ...props, x: index }));\n  }\n\n  updatedResponse.meta = {\n    category: params?.[RHSM_API_QUERY_SET_TYPES.CATEGORY],\n    count: meta[TALLY_CAPACITY_META_TYPES.COUNT],\n    cloudigradeHasMismatch: meta?.[TALLY_CAPACITY_META_TYPES.HAS_CLOUDIGRADE_MISMATCH],\n    metricId: meta[TALLY_CAPACITY_META_TYPES.METRIC_ID],\n    productId: meta[TALLY_CAPACITY_META_TYPES.PRODUCT],\n    totalMonthlyDate: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.DATE],\n    totalMonthlyHasData: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.HAS_DATA],\n    totalMonthlyValue: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.VALUE]\n  };\n\n  return updatedResponse;\n};\n\nconst rhsmTransformers = {\n  hosts: rhsmHosts,\n  instances: rhsmInstances,\n  tallyCapacity: rhsmTallyCapacity\n};\n\nexport { rhsmTransformers as default, rhsmTransformers, rhsmHosts, rhsmInstances, rhsmTallyCapacity };\n","import { RHSM_API_QUERY_SET_TYPES } from './rhsmConstants';\n\n/**\n * @memberof Rhsm\n * @module RhsmHelpers\n */\n\n/**\n * ToDo: remove filterArchitectureVariant when the API supports architecture, variant params\n */\n/**\n * Patch for returning a made up API architecture, variant param as a product ID\n *\n * @param {string} id\n * @param {object} params\n * @returns {string}\n */\nconst filterArchitectureVariant = (id, params = {}) => {\n  const updatedId = id;\n\n  if (params?.[RHSM_API_QUERY_SET_TYPES.VARIANT]?.length) {\n    return params?.[RHSM_API_QUERY_SET_TYPES.VARIANT];\n  }\n\n  return updatedId;\n};\n\nconst rhsmHelpers = {\n  filterArchitectureVariant\n};\n\nexport { rhsmHelpers as default, rhsmHelpers, filterArchitectureVariant };\n","import { serviceCall } from '../config';\nimport { rhsmSchemas } from './rhsmSchemas';\nimport { helpers } from '../../common';\nimport { rhsmTransformers } from './rhsmTransformers';\nimport { rhsmHelpers } from './rhsmHelpers';\n\n/**\n * RHSM API service calls.\n *\n * @memberof Rhsm\n * @module RhsmServices\n */\n\n/**\n * ToDo: remove rhsmHelpers.filterArchitectureVariant\n * We're using a temporary helper to emulate a param for architectures and/or variants.\n * When the api supports architecture and variant query params this needs to be refactored.\n */\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getApiVersion = (options = {}) => {\n  const { cache = false, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {string} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {string} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {object} links\n * @apiSuccess {object} meta\n * @apiSuccess {string} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {string} meta.product\n * - RHEL\n * @apiSuccess {number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 12\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 4\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000.057890,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"has_cloudigrade_data\": true,\n *           \"has_cloudigrade_mismatch\": true,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\",\n *         \"total_core_hours\": 30500.04,\n *         \"total_instance_hours\": 35\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-05-19T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.20,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-05-26T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.15,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-02T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.11,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-09T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.32,\n *           \"instance_hours\": 23\n *         },\n *         {\n *           \"date\": \"2020-06-16T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.42,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-23T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 999.06,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-30T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-08-04T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\",\n *         \"total_core_hours\": 200.03,\n *         \"total_instance_hours\": 26\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-08-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-09-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-10-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 400,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-11-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-12-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-01-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-02-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-03-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-04-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-05-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-06-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-08-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\",\n *         \"total_core_hours\": 2050.04\n *       }\n *     }\n *\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @deprecated The graph reports Tally call is replaced by independent Tally and Capacity metric calls.\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Sockets Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50.090125,\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": false,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Sockets\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Cores Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50.090125,\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": false,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Cores\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Transfer-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Transfer-gibibytes\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 1024,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Storage-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Storage-gibibyte\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2048,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Storage-gibibyte-months Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Storage-gibibyte-months\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2048,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Instance-hours Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Instance-hours\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2000,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n */\n/* Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string|Array} id String ID, or an array of identifiers to update a dotenv url path\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getGraphTally = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.tally, rhsmSchemas.errors],\n    transform = [rhsmTransformers.tallyCapacity]\n  } = options;\n  const updatedId = (typeof id === 'string' && [id]) || (Array.isArray(id) && id) || [];\n\n  let url = `${process.env.REACT_APP_SERVICES_RHSM_TALLY}`;\n  updatedId.forEach((value, index) => {\n    let updatedValue = value;\n    if (index === 0) {\n      updatedValue = rhsmHelpers.filterArchitectureVariant(value, params);\n    }\n\n    url = url.replace(`{${index}}`, updatedValue);\n  });\n\n  return serviceCall({\n    url,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id/:metric_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 100,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 100,\n *           \"has_data\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"product\": \"RHEL\",\n *         \"metric_id\": \"Sockets\",\n *         \"granularity\": \"daily\",\n *         \"service_level\": \"\",\n *         \"usage\": \"\",\n *         \"category\": \"\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string|Array} id String ID, or an array of identifiers to update a dotenv url path\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.capacity, rhsmSchemas.errors],\n    transform = [rhsmTransformers.tallyCapacity]\n  } = options;\n  const updatedId = (typeof id === 'string' && [id]) || (Array.isArray(id) && id) || [];\n\n  let url = `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}`;\n  updatedId.forEach((value, index) => {\n    let updatedValue = value;\n    if (index === 0) {\n      updatedValue = rhsmHelpers.filterArchitectureVariant(value, params);\n    }\n\n    url = url.replace(`{${index}}`, updatedValue);\n  });\n\n  return serviceCall({\n    url,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform,\n    _isCapacity: true\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 500\n * @api {get} /api/rhsm-subscriptions/v1/hosts/products/:product_id Get RHSM hosts/systems table/inventory data\n * @apiDescription Retrieve hosts/systems table/inventory data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"display_name\": \"ipsum.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-123456789012\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.05,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 70,\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6N\",\n *           \"cloud_provider\": \"AZURE\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.00,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"CLOUD\",\n *           \"measurement_type\": \"CLOUD\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6M\",\n *           \"cores\": 4,\n *           \"core_hours\": 1000.20,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 10,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"display_name\": \"dolor.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6L\",\n *           \"cores\": 4,\n *           \"core_hours\": 1001.60,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 1,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"display_name\": \"lorem.test.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YX\",\n *           \"cores\": 4,\n *           \"core_hours\": 999.60,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"display_name\": \"lorem.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YZ\",\n *           \"cores\": 0,\n *           \"core_hours\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"display_name\": \"lorem.another.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YA\",\n *           \"cores\": 0,\n *           \"core_hours\": 0.01,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-21T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YB\",\n *           \"cores\": 0,\n *           \"core_hours\": 999.61,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-22T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YC\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-23T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YD\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-24T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YEE\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-26T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YF\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-29T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 11\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory data.\n *\n * @deprecated The Hosts inventory response is being replaced in favor of the Instances inventory response.\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.hosts, rhsmSchemas.errors],\n    transform = [rhsmTransformers.hosts]\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/hosts/:hypervisor_uuid/guests Get RHSM hosts/systems table/inventory guests data\n * @apiDescription Retrieve hosts/systems table/inventory guests data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"display_name\": \"guest01.example.com\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"display_name\": \"guest02.example.com\",\n *           \"subscription_manager_id\": \"b101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest03.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"display_name\": \"guest04.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest05.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest06.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest07.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest08.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest09.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest10.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 70\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory guests data.\n *\n * @param {string} id Subscription Manager ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getHostsInventoryGuests = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = false,\n    cancelId,\n    schema = [rhsmSchemas.guests, rhsmSchemas.errors],\n    transform = []\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_INVENTORY_GUESTS.replace('{0}', updatedId),\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 750\n * @api {get} /api/rhsm-subscriptions/v1/instances/products/:product_id Get RHSM instances table/inventory data\n * @apiDescription Retrieve instances table/inventory data.\n *\n * Reference [RHSM for instances table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"category\": \"physical\",\n *           \"billing_account_id\": \"xxxxx-xxxx-CCCCC-xxxx-xxxx10\",\n *           \"instance_id\": \"CCCCC-b344-4778-831c-CCCCCCC\",\n *           \"subscription_manager_id\": \"CCCCC-5b00-42fa-CCCCC-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              200,\n *              10,\n *              500.0000345678,\n *              200\n *           ],\n *           \"last_seen\": \"2022-12-03T00:00:00Z\"\n *         },\n *         {\n *           \"category\": \"virtual\",\n *           \"billing_account_id\": \"xxxxx-xxxx-FFFFF-xxxx-xxxx40\",\n *           \"instance_id\": \"FFFFF-b344-4778-831c-FFFFF\",\n *           \"subscription_manager_id\": \"FFFFF-5b00-42fa-FFFFF-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              200,\n *              10,\n *              500.0000345678,\n *              200\n *           ],\n *           \"last_seen\": \"2022-10-03T00:00:00Z\"\n *         },\n *         {\n *           \"number_of_guests\": 70,\n *           \"category\": \"cloud\",\n *           \"billing_provider\": \"red hat\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx01\",\n *           \"instance_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"display_name\": \"rhv.example.com\",\n *           \"measurements\": [\n *              42,\n *              10,\n *              0.000003563,\n *              1\n *           ],\n *           \"last_seen\": \"2022-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"category\": \"cloud\",\n *           \"billing_provider\": \"azure\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx02\",\n *           \"instance_id\": \"XXXXXX-b344-4778-831c-XXXXXXXX\",\n *           \"subscription_manager_id\": \"XXXXXX-5b00-42fa-XXXX-75801d45cc6d\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"measurements\": [\n *              20,\n *              100,\n *              null,\n *              1000\n *           ],\n *           \"last_seen\": \"2022-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"category\": \"physical\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx03\",\n *           \"instance_id\": \"BBBBB-b344-4778-831c-BBBBBBB\",\n *           \"subscription_manager_id\": \"BBBBB-5b00-42fa-BBBBB-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              4000,\n *              50,\n *              10000.0000345678,\n *              3000\n *           ],\n *           \"last_seen\": \"2022-04-03T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 5,\n *         \"measurements\": [\n *           \"Instance-hours\",\n *           \"Sockets\",\n *           \"Storage-gibibyte-months\",\n *           \"Transfer-gibibytes\"\n *         ],\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"Premium\",\n *         \"usage\": \"Production\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API instances data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getInstancesInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.instances, rhsmSchemas.errors],\n    transform = [rhsmTransformers.instances]\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_INSTANCES}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 0\n * @api {get} /api/rhsm-subscriptions/v1/subscriptions/products/:product_id Get RHSM subscriptions table/inventory data\n * @apiDescription Retrieve subscriptions table/inventory data.\n *\n * Reference [RHSM for subscriptions table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"sku\": \"RH00011\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium (Physical and 4 Virtual Nodes)(L3 Only)\",\n *           \"billing_provider\": \"red hat\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" },\n *              { \"id\": \"ipsum\", \"number\": \"1234567890\" },\n *              { \"id\": \"lorem\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 1,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\",\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"sku\": \"RH00010\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server\",\n *           \"billing_provider\": \"azure\",\n *           \"service_level\": \"Self-Support\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [],\n *           \"next_event_date\": \"2020-04-02T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 15,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\",\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"sku\": \"RH00009\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium\",\n *           \"billing_provider\": \"Unknown\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription End\",\n *           \"quantity\": 3000,\n *           \"physical_capacity\": 2,\n *           \"virtual_capacity\": 2,\n *           \"total_capacity\": 4,\n *           \"uom\": \"Cores\",\n *           \"has_infinite_quantity\": false\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3,\n *         \"subscription_type\": \"On-demand\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API subscriptions data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getSubscriptionsInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.subscriptions, rhsmSchemas.errors],\n    transform = []\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_SUBSCRIPTIONS}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\nconst rhsmServices = {\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getSubscriptionsInventory\n};\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport {\n  rhsmServices as default,\n  rhsmServices,\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getSubscriptionsInventory\n};\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsm/rhsmServices';\nimport { generateChartIds } from '../../components/graphCard/graphCardHelpers';\n\n/**\n * RHSM service wrappers for dispatch, state update.\n *\n * @memberof Actions\n * @module RhsmActions\n */\n\n/**\n * Get a RHSM response from multiple Tally, or Capacity, IDs and metrics.\n *\n * @param {object|Array} idMetric An object, or an Array of objects, in the form of { id: PRODUCT_ID, metric: METRIC_ID, isCapacity: boolean }\n * @param {object} query\n * @param {object} options\n * @param {string} options.cancelId\n * @returns {Function}\n */\nconst getGraphMetrics =\n  (idMetric = {}, query = {}, options = {}) =>\n  dispatch => {\n    const { cancelId = 'graphTally' } = options;\n    const multiMetric = (Array.isArray(idMetric) && idMetric) || [idMetric];\n    const multiDispatch = [];\n\n    multiMetric.forEach(({ id, metric, isCapacity, query: metricQuery }) => {\n      const methodService = isCapacity ? rhsmServices.getGraphCapacity : rhsmServices.getGraphTally;\n      const methodType = isCapacity ? rhsmTypes.GET_GRAPH_CAPACITY_RHSM : rhsmTypes.GET_GRAPH_TALLY_RHSM;\n      const methodCancelId = isCapacity ? 'graphCapacity' : cancelId;\n      const generatedId = generateChartIds({ isCapacity, metric, productId: id, query: metricQuery });\n\n      multiDispatch.push({\n        type: methodType,\n        payload: methodService(\n          [id, metric],\n          { ...query, ...metricQuery },\n          {\n            cancelId: `${methodCancelId}_${generatedId}`\n          }\n        ),\n        meta: {\n          id: generatedId,\n          query: { ...query, ...metricQuery },\n          notifications: {}\n        }\n      });\n    });\n\n    return Promise.all(dispatch(multiDispatch));\n  };\n\n/**\n * Get a hosts response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM,\n      payload: rhsmServices.getHostsInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a host's guest response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventoryGuests =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM,\n      payload: rhsmServices.getHostsInventoryGuests(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get an instances response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getInstancesInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM,\n      payload: rhsmServices.getInstancesInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a subscriptions response from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getSubscriptionsInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM,\n      payload: rhsmServices.getSubscriptionsInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\nconst rhsmActions = {\n  getGraphMetrics,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getSubscriptionsInventory\n};\n\nexport {\n  rhsmActions as default,\n  rhsmActions,\n  getGraphMetrics,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getSubscriptionsInventory\n};\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'iso-639-1';\nimport { serviceCall } from '../config';\nimport { helpers } from '../../common';\n\n/**\n * User, and RHSM, calls for locale and Opt-In.\n *\n * @memberof User\n * @module UserServices\n */\n\n/**\n * ToDo: Review moving the getLocale function under platformServices.\n * Also review using window.navigator.language as the primary pull for language.\n */\n/**\n * Return a browser locale, or fallback towards the platform locale cookie\n *\n * @returns {Promise<*>}\n */\nconst getLocale = () => {\n  const defaultLang = {\n    value: helpers.UI_LOCALE_DEFAULT,\n    key: helpers.UI_LOCALE_DEFAULT_DESC\n  };\n  const parseLang = value => {\n    const key = (value && LocaleCode.getName(value.split('-')[0])) || null;\n    return (key && { value, key }) || undefined;\n  };\n\n  return serviceCall({\n    url: async () => {\n      const cookieLang = await (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace(\n        '_',\n        '-'\n      );\n\n      return parseLang(cookieLang) || defaultLang;\n    }\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = (options = {}) => {\n  const { cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport { userServices as default, userServices, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/user/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * User, and RHSM, service wrappers for dispatch, state update.\n *\n * @memberof Actions\n * @module UserActions\n */\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_LOCALE,\n    payload: userServices.getLocale()\n  });\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn =\n  (query = {}) =>\n  dispatch =>\n    dispatch({\n      type: userTypes.UPDATE_USER_OPTIN,\n      payload: userServices.updateAccountOptIn(query),\n      meta: {\n        query,\n        notifications: {\n          rejected: {\n            variant: 'danger',\n            title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsErrorDescription'),\n            dismissable: true\n          },\n          fulfilled: {\n            variant: 'success',\n            title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsSuccessDescription'),\n            dismissable: true,\n            autoDismiss: false\n          }\n        }\n      }\n    });\n\nconst userActions = { getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport { userActions as default, userActions, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Graph/Chart related API and user state reducer.\n *\n * @memberof Reducers\n * @module GraphReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: {}, legend: {}, tally: {}, capacity: {}}}\n */\nconst initialState = {\n  capacity: {},\n  legend: {},\n  reportCapacity: {},\n  tally: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          [action.id]: action.value\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'capacity', type: rhsmTypes.GET_GRAPH_CAPACITY_RHSM },\n          { ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM },\n          { ref: 'tally', type: rhsmTypes.GET_GRAPH_TALLY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { rhsmTypes } from '../types/rhsmTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { inventoryTypes } from '../types';\n\n/**\n * Inventory, and tabs, related API and user state reducer.\n *\n * @memberof Reducers\n * @module InventoryReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{subscriptionsInventory: {}, instancesInventory: {}, tabs: {}, hostsInventory: {}, hostsGuests: {}}}\n */\nconst initialState = {\n  hostsInventory: {},\n  hostsGuests: {},\n  instancesInventory: {},\n  subscriptionsInventory: {},\n  tabs: {}\n};\n\n/**\n * Apply generated inventory observer/reducer for hosts/system and subscriptions inventory to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst inventoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case inventoryTypes.SET_INVENTORY_TAB:\n      return reduxHelpers.setStateProp(\n        'tabs',\n        {\n          ...action.tabs\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case inventoryTypes.CLEAR_INVENTORY_GUESTS:\n      return reduxHelpers.setStateProp(\n        'hostsGuests',\n        {\n          [action.id]: {}\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'hostsInventory', type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM },\n          { ref: 'hostsGuests', type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM },\n          { ref: 'instancesInventory', type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM },\n          { ref: 'subscriptionsInventory', type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ninventoryReducer.initialState = initialState;\n\nexport { inventoryReducer as default, initialState, inventoryReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Banner messages related API state reducer.\n *\n * @memberof Reducers\n * @module MessagesReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{report: {}}}\n */\nconst initialState = {\n  bannerMessages: {}\n};\n\n/**\n * Generated daily observer/reducer for messages to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst messagesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.message.SET_BANNER_MESSAGES:\n      return reduxHelpers.setStateProp(\n        'bannerMessages',\n        {\n          [action.viewId]: action.bannerMessages\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nmessagesReducer.initialState = initialState;\n\nexport { messagesReducer as default, initialState, messagesReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Toolbar related user state reducer.\n *\n * @memberof Reducers\n * @module ToolbarReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{filters: {}}}\n */\nconst initialState = {\n  filters: {}\n};\n\n/**\n * Apply user observer/reducer logic for toolbar to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst toolbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.toolbar.SET_ACTIVE_FILTERS:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            activeFilters: action.activeFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.toolbar.SET_FILTER_TYPE:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            currentFilter: action.currentFilter\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\ntoolbarReducer.initialState = initialState;\n\nexport { toolbarReducer as default, initialState, toolbarReducer };\n","import _get from 'lodash/get';\nimport { appTypes, platformTypes, userTypes } from '../types';\nimport { rhsmConstants } from '../../services/rhsm/rhsmConstants';\nimport { reduxHelpers } from '../common';\n\n/**\n * User related API, platform and user state reducer.\n *\n * @memberof Reducers\n * @module UserReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{auth: {}, optin: {}, locale: null, errors: {}}}\n */\nconst initialState = {\n  auth: {},\n  errors: {},\n  locale: {},\n  optin: {}\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(reduxHelpers.getDataFromResults(action), [rhsmConstants.RHSM_API_RESPONSE_ERRORS], []);\n\n        return reduxHelpers.setStateProp(\n          'errors',\n          {\n            error: true,\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            data: errorCodes.map(value => value[rhsmConstants.RHSM_API_RESPONSE_ERRORS_TYPES.CODE]),\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'locale', type: userTypes.USER_LOCALE },\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN },\n          { ref: 'auth', type: platformTypes.PLATFORM_USER_AUTH }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { productConfig } from '../../config';\nimport { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_SET_TYPES as RHSM_API_QUERY_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * View query related user state reducer.\n *\n * @memberof Reducers\n * @module ViewReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{product: {}, graphTallyQuery: {}, inventoryHostsQuery: {}, inventorySubscriptionsQuery: {},\n *     query: {}, productConfig: {}, inventoryGuestsQuery: {}}}\n */\nconst initialState = {\n  query: {},\n  graphTallyQuery: {},\n  inventoryGuestsQuery: {},\n  inventoryHostsQuery: {},\n  inventorySubscriptionsQuery: {},\n  product: {},\n  productConfig: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.app.SET_PRODUCT_VARIANT_QUERY_RESET_ALL:\n      const updateVariantResetQueries = (query = {}, id) => {\n        const queryIds =\n          productConfig.sortedConfigs().byGroupIdConfigs[id]?.map(({ viewId }) => viewId) || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          delete updatedQuery[queryId];\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          query: updateVariantResetQueries(state.query, action.productGroup),\n          graphTallyQuery: updateVariantResetQueries(state.graphTallyQuery, action.productGroup),\n          inventoryGuestsQuery: updateVariantResetQueries(state.inventoryGuestsQuery, action.productGroup),\n          inventoryHostsQuery: updateVariantResetQueries(state.inventoryHostsQuery, action.productGroup),\n          inventorySubscriptionsQuery: updateVariantResetQueries(state.inventorySubscriptionsQuery, action.productGroup)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST:\n      const updateResetQueries = (query = {}, id) => {\n        const queryIds = productConfig.sortedConfigs().byViewIds[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n\n          delete productQuery[RHSM_API_QUERY_TYPES.DIRECTION];\n          delete productQuery[RHSM_API_QUERY_TYPES.SORT];\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateResetQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateResetQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST:\n      const updateClearQueries = (query = {}, id) => {\n        const queryIds = productConfig.sortedConfigs().byViewIds[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateClearQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateClearQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST:\n      const updateClearGuestQuery = (query = {}, id) => {\n        const queryIds = productConfig.sortedConfigs().byViewIds[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryGuestsQuery: updateClearGuestQuery(state.inventoryGuestsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            ...action.clearFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [action.filter]: action.value\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY]:\n      return reduxHelpers.setStateProp(\n        'graphTallyQuery',\n        {\n          [action.viewId]: {\n            ...state.graphTallyQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.GRANULARITY]: action[RHSM_API_QUERY_TYPES.GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.START_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.START_DATE]: action[RHSM_API_QUERY_TYPES.START_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.END_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.END_DATE]: action[RHSM_API_QUERY_TYPES.END_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.BILLING_PROVIDER]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.BILLING_PROVIDER]: action[RHSM_API_QUERY_TYPES.BILLING_PROVIDER]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SLA]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.SLA]: action[RHSM_API_QUERY_TYPES.SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.UOM]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.UOM]: action[RHSM_API_QUERY_TYPES.UOM]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.USAGE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.USAGE]: action[RHSM_API_QUERY_TYPES.USAGE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryGuestsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryGuestsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryGuestsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryGuestsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: action[RHSM_API_QUERY_TYPES.DISPLAY_NAME]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.app.SET_PRODUCT:\n      return reduxHelpers.setStateProp(\n        'product',\n        {\n          config: action.config\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.app.SET_PRODUCT_VARIANT:\n      return reduxHelpers.setStateProp(\n        'product',\n        {\n          variant: {\n            ...state?.product?.variant,\n            [action.productGroup]: action.variant\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport inventoryReducer from './inventoryReducer';\nimport messagesReducer from './messagesReducer';\nimport toolbarReducer from './toolbarReducer';\nimport userReducer from './userReducer';\nimport viewReducer from './viewReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  inventory: inventoryReducer,\n  messages: messagesReducer,\n  toolbar: toolbarReducer,\n  user: userReducer,\n  view: viewReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport {\n  reduxReducers as default,\n  reduxReducers,\n  graphReducer,\n  inventoryReducer,\n  messagesReducer,\n  toolbarReducer,\n  userReducer,\n  viewReducer\n};\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { multiActionMiddleware } from './multiActionMiddleware';\nimport { statusMiddleware } from './statusMiddleware';\nimport { actionRecordMiddleware } from './actionRecordMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  multiActionMiddleware,\n  promiseMiddleware,\n  actionRecordMiddleware({\n    id: process.env.REACT_APP_UI_LOGGER_ID,\n    app: { version: process.env.REACT_APP_UI_VERSION }\n  }),\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * @memberof Middleware\n * @module StatusMiddleware\n */\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @param {string} config.statusSuffix\n * @param {string} config.rangeSuffix\n * @param {string} config.rangeFiller\n * @param {string} config.statusDelimiter\n * @param {boolean} config.statusRange\n * @param {boolean} config.dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","/**\n * @memberof Middleware\n * @module MultiActionMiddleware\n */\n\n/**\n * Allow passing an array of actions for batch dispatch.\n *\n * @param {object} store\n * @returns {Function}\n */\nconst multiActionMiddleware = store => next => action =>\n  (Array.isArray(action) && action.map(a => store.dispatch(a))) || next(action);\n\nexport { multiActionMiddleware as default, multiActionMiddleware };\n","import { platformConstants as platformApiTypes } from '../../services/platform/platformConstants';\n\n/**\n * @memberof Middleware\n * @module ActionRecordMiddleware\n */\n\n/**\n * Modify actions' payload for privacy.\n *\n * @param {object} action\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeActionHeaders = ({ payload, ...action }) => {\n  if (payload) {\n    let updatedPayload = { ...payload, headers: {} };\n\n    if (Array.isArray(payload)) {\n      updatedPayload = payload.map(({ headers, ...obj }) => ({ ...obj, headers: {} }));\n    }\n\n    return { payload: updatedPayload, ...action };\n  }\n\n  return { ...action };\n};\n\n/**\n * Modify actions' payload data for privacy.\n *\n * @param {object} action\n * @param {string} action.type\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeData = ({ type, payload, ...action }) => {\n  const removeUserIdentity = obj => {\n    if (obj?.data?.user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]) {\n      return {\n        ...obj,\n        data: {\n          ...obj.data,\n          user: {\n            ...obj.data.user,\n            [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]: {\n              ...obj.data.user[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY],\n              [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]: {}\n            }\n          }\n        }\n      };\n    }\n\n    return undefined;\n  };\n\n  const updatedPayload = removeUserIdentity(payload) || payload;\n  const updatedAction = removeUserIdentity(action) || action;\n\n  if (updatedPayload) {\n    return { type, payload: updatedPayload, ...updatedAction };\n  }\n\n  return { type, ...updatedAction };\n};\n\n/**\n * Return existing sessionStorage log.\n *\n * @param {string} id\n * @param {number} limit\n * @returns {Array}\n */\nconst getActions = (id, limit) => {\n  const { sessionStorage } = window;\n  const item = sessionStorage.getItem(id);\n  let parsedItems = (item && (JSON.parse(item) || {})?.actions) || [];\n\n  if (parsedItems?.length && limit > 0) {\n    parsedItems = parsedItems.slice(limit * -1);\n  }\n\n  return parsedItems;\n};\n\n/**\n * Store actions against an id in sessionStorage.\n *\n * @param {object} action\n * @param {object} config\n * @param {number} config.id\n * @param {number} config.limit\n */\nconst recordAction = (action, { id, limit, ...config }) => {\n  const { navigator, sessionStorage } = window;\n  const items = getActions(id, limit) || [];\n  const priorItem = items[items.length - 1];\n  const updatedAction = sanitizeData(sanitizeActionHeaders(action));\n  const actionObj = {\n    diff: 0,\n    timestamp: Date.now(),\n    action: updatedAction\n  };\n\n  if (priorItem && priorItem.timestamp) {\n    actionObj.diff = actionObj.timestamp - priorItem.timestamp;\n  }\n\n  items.push(actionObj);\n  sessionStorage.setItem(\n    id,\n    JSON.stringify({\n      browser: navigator.userAgent,\n      timestamp: new Date().toLocaleString(),\n      ...config,\n      actions: items\n    })\n  );\n};\n\n/**\n * Expose settings and record middleware.\n *\n * @param {object} config\n * @returns {Function}\n */\nconst actionRecordMiddleware =\n  (config = {}) =>\n  () =>\n  next =>\n  action => {\n    recordAction(action, {\n      id: 'actionRecordMiddleware/v1',\n      limit: 100,\n      ...config\n    });\n\n    return next(action);\n  };\n\nexport { actionRecordMiddleware as default, actionRecordMiddleware };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Redux store setup.\n *\n * @memberof Redux State\n * @module Store\n */\n\n/**\n * Create a Redux store.\n *\n * @type {{graph: object, notifications: Array, toolbar: object, inventory: object, user: object, view: object,\n *     messages: object}}\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","/**\n * @memberof Types\n * @module AppTypes\n */\n\nconst STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\nconst SET_PRODUCT = 'SET_PRODUCT';\nconst SET_PRODUCT_VARIANT = 'SET_PRODUCT_VARIANT';\nconst SET_PRODUCT_VARIANT_QUERY_RESET_ALL = 'SET_PRODUCT_VARIANT_QUERY_RESET_ALL';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, SET_PRODUCT_VARIANT: string, SET_PRODUCT_VARIANT_QUERY_RESET_ALL: string,\n *     SET_PRODUCT: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX,\n  SET_PRODUCT,\n  SET_PRODUCT_VARIANT,\n  SET_PRODUCT_VARIANT_QUERY_RESET_ALL\n};\n\nexport {\n  appTypes as default,\n  appTypes,\n  STATUS_4XX,\n  STATUS_5XX,\n  SET_PRODUCT,\n  SET_PRODUCT_VARIANT,\n  SET_PRODUCT_VARIANT_QUERY_RESET_ALL\n};\n","/**\n * @memberof Types\n * @module GraphTypes\n */\n\nconst SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","/**\n * @memberof Types\n * @module InventoryTypes\n */\n\nconst CLEAR_INVENTORY_GUESTS = 'CLEAR_INVENTORY_GUESTS';\nconst SET_INVENTORY_TAB = 'SET_INVENTORY_TAB';\n\n/**\n * Inventory action, reducer types.\n *\n * @type {{CLEAR_INVENTORY_GUESTS: string, SET_INVENTORY_TAB: string}}\n */\nconst inventoryTypes = {\n  CLEAR_INVENTORY_GUESTS,\n  SET_INVENTORY_TAB\n};\n\nexport { inventoryTypes as default, inventoryTypes, CLEAR_INVENTORY_GUESTS, SET_INVENTORY_TAB };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\n/**\n * @memberof Types\n * @module PlatformTypes\n */\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_GLOBAL_FILTER_HIDE = 'PLATFORM_GLOBAL_FILTER_HIDE';\nconst PLATFORM_USER_AUTH = 'PLATFORM_USER_AUTH';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_USER_AUTH: string, PLATFORM_GLOBAL_FILTER_HIDE: string, PLATFORM_CLEAR_NOTIFICATIONS: string,\n *     PLATFORM_ADD_NOTIFICATION: string, PLATFORM_REMOVE_NOTIFICATION: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_USER_AUTH\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_USER_AUTH\n};\n","import { RHSM_API_QUERY_SET_TYPES as RHSM_API_QUERY_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * @memberof Types\n * @module QueryTypes\n */\n\nconst SET_QUERY = 'SET_QUERY';\nconst SET_QUERY_CLEAR = 'SET_QUERY_CLEAR';\nconst SET_QUERY_CLEAR_INVENTORY_LIST = 'SET_QUERY_CLEAR_INVENTORY_LIST';\nconst SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST = 'SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST';\nconst SET_QUERY_RESET_INVENTORY_LIST = 'SET_QUERY_RESET_INVENTORY_LIST';\n\n/**\n * Query types associated with across ALL queries.\n */\nconst SET_QUERY_RHSM_TYPES = {\n  [RHSM_API_QUERY_TYPES.BILLING_PROVIDER]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.BILLING_PROVIDER}`,\n  [RHSM_API_QUERY_TYPES.END_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.END_DATE}`,\n  [RHSM_API_QUERY_TYPES.GRANULARITY]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.GRANULARITY}`,\n  [RHSM_API_QUERY_TYPES.SLA]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.SLA}`,\n  [RHSM_API_QUERY_TYPES.START_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.START_DATE}`,\n  [RHSM_API_QUERY_TYPES.UOM]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.UOM}`,\n  [RHSM_API_QUERY_TYPES.USAGE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.USAGE}`\n};\n\n/**\n * Inventory query types associated with only GUESTS' queries.\n */\nconst SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_GUESTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_GUESTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Inventory query types associated with only HOSTS' and INSTANCES' queries.\n */\nconst SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DISPLAY_NAME}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Inventory query types associated with only SUBSCRIPTIONS' queries.\n */\nconst SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Query/filter reducer types.\n *\n * @type {{SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES: object, SET_QUERY_RHSM_TYPES: object,\n *     SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES: object, SET_QUERY_CLEAR: string, SET_QUERY_CLEAR_INVENTORY_LIST: string,\n *     SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES: object, SET_QUERY: string, SET_QUERY_RESET_INVENTORY_LIST: string,\n *     SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST: string}}\n */\nconst queryTypes = {\n  SET_QUERY,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n\nexport {\n  queryTypes as default,\n  queryTypes,\n  SET_QUERY,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n","/**\n * @memberof Types\n * @module UserTypes\n */\n\nconst DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_LOCALE: string, GET_USER_OPTIN: string,\n *     UPDATE_USER_OPTIN: string, DELETE_USER_OPTIN: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { inventoryTypes } from './inventoryTypes';\nimport { messageTypes } from './messageTypes';\nimport { platformTypes } from './platformTypes';\nimport { queryTypes } from './queryTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  inventory: inventoryTypes,\n  message: messageTypes,\n  platform: platformTypes,\n  query: queryTypes,\n  rhsm: rhsmTypes,\n  toolbar: toolbarTypes,\n  user: userTypes\n};\n\nexport {\n  reduxTypes as default,\n  reduxTypes,\n  appTypes,\n  graphTypes,\n  inventoryTypes,\n  messageTypes,\n  platformTypes,\n  queryTypes,\n  rhsmTypes,\n  toolbarTypes,\n  userTypes\n};\n","/**\n * @memberof Types\n * @module MessageTypes\n */\n\nconst SET_BANNER_MESSAGES = 'SET_BANNER_MESSAGES';\n\n/**\n * User action, reducer types.\n *\n * @type {{SET_BANNER_MESSAGES: string}}\n */\nconst messageTypes = { SET_BANNER_MESSAGES };\n\nexport { messageTypes as default, messageTypes, SET_BANNER_MESSAGES };\n","/**\n * @memberof Types\n * @module ToolbarTypes\n */\n\nconst SET_ACTIVE_FILTERS = 'SET_ACTIVE_FILTERS';\nconst SET_FILTER_TYPE = 'SET_FILTER_TYPE';\n\n/**\n * Filter, toolbar reducer types.\n *\n * @type {{SET_FILTER_TYPE: string, SET_ACTIVE_FILTERS: string}}\n */\nconst toolbarTypes = {\n  SET_ACTIVE_FILTERS,\n  SET_FILTER_TYPE\n};\n\nexport { toolbarTypes as default, toolbarTypes, SET_ACTIVE_FILTERS, SET_FILTER_TYPE };\n","/**\n * @memberof Types\n * @module RhsmTypes\n */\n\nconst GET_GRAPH_CAPACITY_RHSM = 'GET_GRAPH_CAPACITY_RHSM';\nconst GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst GET_GRAPH_TALLY_RHSM = 'GET_GRAPH_TALLY_RHSM';\nconst GET_HOSTS_INVENTORY_RHSM = 'GET_HOSTS_INVENTORY_RHSM';\nconst GET_HOSTS_INVENTORY_GUESTS_RHSM = 'GET_HOSTS_INVENTORY_GUESTS_RHSM';\nconst GET_INSTANCES_INVENTORY_RHSM = 'GET_INSTANCES_INVENTORY_RHSM';\nconst GET_SUBSCRIPTIONS_INVENTORY_RHSM = 'GET_SUBSCRIPTIONS_INVENTORY_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, GET_HOSTS_INVENTORY_GUESTS_RHSM: string,\n *     GET_GRAPH_CAPACITY_RHSM: string, GET_SUBSCRIPTIONS_INVENTORY_RHSM: string, GET_HOSTS_INVENTORY_RHSM: string,\n *     GET_INSTANCES_INVENTORY_RHSM: string, GET_GRAPH_TALLY_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n","/**\n * @memberof Platform\n * @module PlatformConstants\n */\n\n/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string, RESOURCE_DEFS: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\n// ToDo: clean up this app name piece, these facets come through the helpers and src/config/rbac.json\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES = {\n  SUBSCRIPTIONS: process.env.REACT_APP_UI_NAME\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES = {\n  ALL: '*'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES = {\n  ALL: '*',\n  READ: 'read',\n  WRITE: 'write'\n};\n\nconst platformConstants = {\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n\nexport {\n  platformConstants as default,\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n","/**\n * @memberof Rhsm\n * @module RhsmConstants\n */\n\n/**\n * RHSM path IDs for product RHEL variants.\n *\n * @type {{RHEL_ARM: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string, RHEL_X86: string}}\n */\nconst RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES = {\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86'\n};\n\n/**\n * RHSM path IDs for product Satellite variants.\n *\n * @type {{SATELLITE_SERVER: string, SATELLITE_CAPSULE: string}}\n */\nconst RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES = {\n  SATELLITE_CAPSULE: 'Satellite Capsule',\n  SATELLITE_SERVER: 'Satellite Server'\n};\n\n/**\n * RHSM path IDs for products.\n *\n * @type {{RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string, RHODS: string, RHOSAK: string,\n *     ROSA: string, RHEL_X86: string, RHEL_COMPUTE_NODE: string, OPENSHIFT: string, SATELLITE_SERVER: string,\n *     OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, SATELLITE_CAPSULE: string, RHEL: string, RHEL_SERVER: string,\n *     RHEL_IBM_Z: string, RHEL_IBM_POWER: string, RHACS: string}}\n */\nconst RHSM_API_PATH_PRODUCT_TYPES = {\n  ...RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES,\n  ...RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHACS: 'rhacs',\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHODS: 'rhods',\n  RHOSAK: 'rhosak',\n  ROSA: 'rosa',\n  OPENSHIFT: 'OpenShift Container Platform',\n  OPENSHIFT_METRICS: 'OpenShift-metrics',\n  OPENSHIFT_DEDICATED_METRICS: 'OpenShift-dedicated-metrics',\n  SATELLITE: 'Satellite'\n};\n\n/**\n * RHSM path IDs for metrics.\n *\n * @type {{CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     TRANSFER_GIBIBYTES: string, CORE_SECONDS: string, STORAGE_GIBIBYTE_MONTHS: string}}\n */\nconst RHSM_API_PATH_METRIC_TYPES = {\n  CORES: 'Cores',\n  SOCKETS: 'Sockets',\n  CORE_SECONDS: 'Core-seconds',\n  INSTANCE_HOURS: 'Instance-hours',\n  STORAGE_GIBIBYTES: 'Storage-gibibytes',\n  STORAGE_GIBIBYTE_MONTHS: 'Storage-gibibyte-months',\n  TRANSFER_GIBIBYTES: 'Transfer-gibibytes'\n};\n\n/**\n * RHSM response data type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_DATA = 'data';\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * RHSM response general meta types.\n *\n * @type {{PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count',\n  PRODUCT: 'product'\n};\n\n/**\n * RHSM response errors type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERRORS = 'errors';\n\n/**\n * RHSM response errors types.\n *\n * @type {{CODE: string}}\n */\nconst RHSM_API_RESPONSE_ERRORS_TYPES = {\n  CODE: 'code'\n};\n\n/**\n * RHSM response error codes.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERRORS_CODE_TYPES = {\n  GENERIC: 'SUBSCRIPTIONS1003',\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM response Hosts DATA types.\n *\n * @type {{MEASUREMENT_TYPE: string, CORES: string, CORE_HOURS: string, HARDWARE_TYPE: string,\n *     SUBSCRIPTION_MANAGER_ID: string, INSTANCE_HOURS: string, SOCKETS: string, INVENTORY_ID: string, NUMBER_OF_GUESTS: string,\n *     DISPLAY_NAME: string, CLOUD_PROVIDER: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_HOSTS_DATA_TYPES = {\n  CORE_HOURS: 'core_hours',\n  CORES: 'cores',\n  CLOUD_PROVIDER: 'cloud_provider',\n  DISPLAY_NAME: 'display_name',\n  HARDWARE_TYPE: 'hardware_type',\n  INSTANCE_HOURS: 'instance_hours',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT_TYPE: 'measurement_type',\n  NUMBER_OF_GUESTS: 'number_of_guests',\n  SOCKETS: 'sockets',\n  SUBSCRIPTION_MANAGER_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response Hosts META types.\n *\n * @type {{PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_HOSTS_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES\n};\n\n/**\n * FixMe: Appears we combined future guests used with instances. Investigate moving \"INVENTORY_ID\" and \"SUBSCRIPTION_MANAGER_ID\".\n * They're current associated with \"hosts\" guests. Need to also determine if this is something that needs to be added to \"instances\"\n * or if keeping them added to guests only is enough.\n */\n/**\n * RHSM response Instance DATA types.\n *\n * @type {{MEASUREMENTS: string, BILLING_ACCOUNT_ID: string, CATEGORY: string, SUBSCRIPTION_MANAGER_ID: string,\n *     INSTANCE_ID: string, NUMBER_OF_GUESTS: string, BILLING_PROVIDER: string, DISPLAY_NAME: string, CLOUD_PROVIDER: string,\n *     LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_DATA_TYPES = {\n  BILLING_PROVIDER: 'billing_provider',\n  BILLING_ACCOUNT_ID: 'billing_account_id',\n  CLOUD_PROVIDER: 'cloud_provider',\n  CATEGORY: 'category',\n  DISPLAY_NAME: 'display_name',\n  INSTANCE_ID: 'instance_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENTS: 'measurements',\n  NUMBER_OF_GUESTS: 'number_of_guests',\n  SUBSCRIPTION_MANAGER_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response Instances META types.\n *\n * @type {{MEASUREMENTS: string, UOM: string, PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  MEASUREMENTS: 'measurements',\n  UOM: 'uom'\n};\n\n/**\n * RHSM response Subscriptions DATA types.\n *\n * @type {{BILLING_ACCOUNT_ID: string, QUANTITY: string, SUBSCRIPTION_MANAGER_ID: string, INVENTORY_ID: string,\n *     NUMBER_OF_GUESTS: string, HAS_INFINITE_QUANTITY: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string, DISPLAY_NAME: string, MEASUREMENTS: string, UOM: string, CATEGORY: string,\n *     NEXT_EVENT_DATE: string, BILLING_PROVIDER: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES = {\n  ...RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  HAS_INFINITE_QUANTITY: 'has_infinite_quantity',\n  NEXT_EVENT_DATE: 'next_event_date',\n  PRODUCT_NAME: 'product_name',\n  QUANTITY: 'quantity',\n  SERVICE_LEVEL: 'service_level',\n  TOTAL_CAPACITY: 'total_capacity',\n  UOM: 'uom'\n};\n\n/**\n * RHSM response Subscriptions META types.\n *\n * @type {{PRODUCT: string, SUBSCRIPTION_TYPE: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  SUBSCRIPTION_TYPE: 'subscription_type'\n};\n\n/**\n * RHSM response Tally DATA types.\n *\n * @type {{DATE: string, HAS_DATA: string, VALUE: string, HAS_INFINITE_QUANTITY: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES = {\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_DATA: 'has_data',\n  HAS_INFINITE_QUANTITY: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response Tally META types.\n *\n * @type {{TOTAL_MONTHLY: string, DATE: string, PRODUCT: string, HAS_CLOUDIGRADE_DATA: string,\n *     HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string, METRIC_ID: string, COUNT: string, VALUE: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_CLOUDIGRADE_DATA: 'has_cloudigrade_data',\n  HAS_CLOUDIGRADE_MISMATCH: 'has_cloudigrade_mismatch',\n  HAS_DATA: 'has_data',\n  METRIC_ID: 'metric_id',\n  TOTAL_MONTHLY: 'total_monthly'\n};\n\n/**\n * RHSM response, query parameters for GRANULARITY.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_RESPONSE_GRANULARITY_TYPES = {\n  DAILY: 'Daily',\n  WEEKLY: 'Weekly',\n  MONTHLY: 'Monthly',\n  QUARTERLY: 'Quarterly'\n};\n\n/**\n * ToDo: Activate available provider type as it becomes available 202205\n * (just uncomment)\n */\n/**\n * RHSM response, query parameters for BILLING_PROVIDER\n *\n * @type {{AZURE: string, GCP: string, RED_HAT: string, NONE: string, AWS: string, ORACLE: string}}\n */\nconst RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES = {\n  RED_HAT: 'red hat',\n  AWS: 'aws'\n  // GCP: 'gcp',\n  // AZURE: 'azure',\n  // ORACLE: 'oracle',\n  // NONE: ''\n};\n\n/**\n * RHSM response, query parameters for SLA.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_RESPONSE_SLA_TYPES = {\n  PREMIUM: 'Premium',\n  STANDARD: 'Standard',\n  SELF: 'Self-Support',\n  NONE: ''\n};\n\n/**\n * RHSM response, general parameters for subscription types\n *\n * @type {{ANNUAL: string, ON_DEMAND: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTION_TYPES = {\n  ANNUAL: 'Annual',\n  ON_DEMAND: 'On-demand'\n};\n\n/**\n * RHSM response, query parameters for UOM.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_RESPONSE_UOM_TYPES = {\n  CORES: 'cores',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM response, query parameters for USAGE.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_RESPONSE_USAGE_TYPES = {\n  PRODUCTION: 'Production',\n  DEVELOPMENT: 'Development/Test',\n  DISASTER: 'Disaster Recovery',\n  UNSPECIFIED: ''\n};\n\n/**\n * RHSM query/search parameter CATEGORY type values for TALLY/CAPACITY.\n *\n * @type {{CLOUD: string, PHYSICAL: string, HYPERVISOR: string, VIRTUAL: string}}\n */\nconst RHSM_API_QUERY_CATEGORY_TYPES = {\n  CLOUD: 'cloud',\n  HYPERVISOR: 'hypervisor',\n  PHYSICAL: 'physical',\n  VIRTUAL: 'virtual'\n};\n\nconst RHSM_API_QUERY_GRANULARITY_TYPES = RHSM_API_RESPONSE_GRANULARITY_TYPES;\n\n/**\n * ToDo: Remove RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES once hosts is fully deprecated\n * These sort params are focused on the hosts api.\n */\n/**\n * RHSM API query/search parameter SORT type values for HOSTS.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, INSTANCE_HOURS: string, SOCKETS: string, MEASUREMENT: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES = {\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  HARDWARE: 'hardware_type',\n  INSTANCE_HOURS: 'instance_hours',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for general inventory displays.\n *\n * @type {{CORES: string, STORAGE_GIBIBYTES: string, CATEGORY: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     NUMBER_OF_GUESTS: string, TRANSFER_GIBIBYTES: string, BILLING_PROVIDER: string, CORE_SECONDS: string,\n *     STORAGE_GIBIBYTE_MONTHS: string, LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_TYPES = {\n  ...RHSM_API_PATH_METRIC_TYPES,\n  BILLING_PROVIDER: 'billing_provider',\n  CATEGORY: 'category',\n  LAST_SEEN: 'last_seen',\n  NAME: 'display_name',\n  NUMBER_OF_GUESTS: 'number_of_guests'\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES = {\n  ASCENDING: 'asc',\n  DESCENDING: 'desc'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for SUBSCRIPTIONS.\n *\n * @type {{QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string, NEXT_EVENT_DATE: string,\n *     TOTAL_CAPACITY: string, PRODUCT_NAME: string, SKU: string, SERVICE_LEVEL: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES = {\n  NEXT_EVENT_DATE: 'next_event_date',\n  NEXT_EVENT_TYPE: 'next_event_type',\n  PRODUCT_NAME: 'product_name',\n  QUANTITY: 'quantity',\n  SKU: 'sku',\n  SERVICE_LEVEL: 'service_level',\n  TOTAL_CAPACITY: 'total_capacity',\n  USAGE: 'usage'\n};\n\nconst RHSM_API_QUERY_BILLING_PROVIDER_TYPES = RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES;\n\nconst RHSM_API_QUERY_SLA_TYPES = RHSM_API_RESPONSE_SLA_TYPES;\n\nconst RHSM_API_QUERY_UOM_TYPES = RHSM_API_RESPONSE_UOM_TYPES;\n\nconst RHSM_API_QUERY_USAGE_TYPES = RHSM_API_RESPONSE_USAGE_TYPES;\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{BILLING_ACCOUNT_ID: string, DIRECTION: string, END_DATE: string, SLA: string, LIMIT: string, START_DATE: string,\n *     VARIANT: string, DISPLAY_NAME: string, UOM: string, USAGE: string, CATEGORY: string, SORT: string, OFFSET: string,\n *     BILLING_PROVIDER: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  BILLING_PROVIDER: 'billing_provider',\n  BILLING_ACCOUNT_ID: 'billing_account_id',\n  CATEGORY: 'category',\n  DIRECTION: 'dir',\n  DISPLAY_NAME: 'display_name_contains',\n  END_DATE: 'ending',\n  LIMIT: 'limit',\n  OFFSET: 'offset',\n  SLA: 'sla',\n  SORT: 'sort',\n  START_DATE: 'beginning',\n  UOM: 'uom',\n  USAGE: 'usage',\n  VARIANT: 'variant'\n};\n\n/**\n * RHSM query parameter options for TALLY, CAPACITY endpoints.\n *\n * @type {{GRANULARITY: string, USAGE: string, CATEGORY: string, END_DATE: string, SLA: string, START_DATE: string,\n *     BILLING_PROVIDER: string, VARIANT: string}}\n */\nconst RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES = {\n  BILLING_PROVIDER: 'billing_provider',\n  CATEGORY: 'category',\n  END_DATE: 'ending',\n  GRANULARITY: 'granularity',\n  SLA: 'sla',\n  START_DATE: 'beginning',\n  USAGE: 'usage',\n  VARIANT: 'variant'\n};\n\n/**\n * Aggregate all query set types.\n *\n * @type {{UOM: string, GRANULARITY: string, USAGE: string, DIRECTION: string, SORT: string, END_DATE: string,\n *     OFFSET: string, SLA: string, LIMIT: string, START_DATE: string, DISPLAY_NAME: string}}\n */\nconst RHSM_API_QUERY_SET_TYPES = {\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES\n};\n\n/**\n * Product display types.\n *\n * @type {{CAPACITY: string, LEGACY: string, DUAL_AXES: string, PARTIAL: string, HOURLY: string}}\n */\nconst RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES = {\n  DUAL_AXES: 'dual-axes',\n  HOURLY: 'hourly',\n  LEGACY: 'legacy',\n  PARTIAL: 'partial',\n  CAPACITY: 'capacity'\n};\n\n/**\n * RHSM constants.\n *\n * @type {{RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES: {GRANULARITY: string, USAGE: string, CATEGORY: string, END_DATE: string,\n *     SLA: string, START_DATE: string, BILLING_PROVIDER: string, VARIANT: string}, RHSM_API_RESPONSE_DATA: string,\n *     RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES: {PRODUCT: string, SUBSCRIPTION_TYPE: string, COUNT: string},\n *     RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES: {SATELLITE_SERVER: string, SATELLITE_CAPSULE: string},\n *     RHSM_API_PATH_METRIC_TYPES: {CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     TRANSFER_GIBIBYTES: string, CORE_SECONDS: string, STORAGE_GIBIBYTE_MONTHS: string},\n *     RHSM_API_RESPONSE_INSTANCES_META_TYPES: {MEASUREMENTS: string, UOM: string, PRODUCT: string, COUNT: string},\n *     RHSM_API_RESPONSE_INSTANCES_DATA_TYPES: {MEASUREMENTS: string, BILLING_ACCOUNT_ID: string, CATEGORY: string,\n *     SUBSCRIPTION_MANAGER_ID: string, INSTANCE_ID: string, NUMBER_OF_GUESTS: string, BILLING_PROVIDER: string,\n *     DISPLAY_NAME: string, CLOUD_PROVIDER: string, LAST_SEEN: string}, RHSM_API_RESPONSE_SLA_TYPES: {PREMIUM: string,\n *     SELF: string, NONE: string, STANDARD: string}, RHSM_API_RESPONSE_HOSTS_META_TYPES: {PRODUCT: string, COUNT: string},\n *     RHSM_API_RESPONSE_META_TYPES: {PRODUCT: string, COUNT: string}, RHSM_API_RESPONSE_ERRORS_CODE_TYPES: {GENERIC: string,\n *     OPTIN: string}, RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string},\n *     RHSM_API_RESPONSE_UOM_TYPES: {CORES: string, SOCKETS: string},\n *     RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES: {RHEL_ARM: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string,\n *     RHEL_X86: string}, RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES: {BILLING_ACCOUNT_ID: string, QUANTITY: string,\n *     SUBSCRIPTION_MANAGER_ID: string, INVENTORY_ID: string, NUMBER_OF_GUESTS: string, HAS_INFINITE_QUANTITY: string,\n *     TOTAL_CAPACITY: string, PRODUCT_NAME: string, SERVICE_LEVEL: string, DISPLAY_NAME: string, MEASUREMENTS: string,\n *     UOM: string, CATEGORY: string, NEXT_EVENT_DATE: string, BILLING_PROVIDER: string, LAST_SEEN: string},\n *     RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES: {ASCENDING: string, DESCENDING: string},\n *     RHSM_API_RESPONSE_SUBSCRIPTION_TYPES: {ANNUAL: string, ON_DEMAND: string},\n *     RHSM_API_QUERY_INVENTORY_SORT_TYPES: {CORES: string, STORAGE_GIBIBYTES: string, CATEGORY: string, SOCKETS: string,\n *     INSTANCE_HOURS: string, NUMBER_OF_GUESTS: string, TRANSFER_GIBIBYTES: string, BILLING_PROVIDER: string,\n *     CORE_SECONDS: string, STORAGE_GIBIBYTE_MONTHS: string, LAST_SEEN: string, NAME: string},\n *     RHSM_API_PATH_PRODUCT_TYPES: {RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string,\n *     RHODS: string, RHOSAK: string, ROSA: string, RHEL_X86: string, RHEL_COMPUTE_NODE: string, OPENSHIFT: string,\n *     SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, SATELLITE_CAPSULE: string,\n *     RHEL: string, RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string, RHACS: string},\n *     RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES: {AZURE: string, GCP: string, RED_HAT: string, NONE: string, AWS: string,\n *     ORACLE: string}, RHSM_API_RESPONSE_ERRORS_TYPES: {CODE: string},\n *     RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES: {DATE: string, HAS_DATA: string, VALUE: string,\n *     HAS_INFINITE_QUANTITY: string}, RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES: {TOTAL_MONTHLY: string, DATE: string,\n *     PRODUCT: string, HAS_CLOUDIGRADE_DATA: string, HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string, METRIC_ID: string,\n *     COUNT: string, VALUE: string}, RHSM_API_QUERY_BILLING_PROVIDER_TYPES: {AZURE: string, GCP: string, RED_HAT: string,\n *     NONE: string, AWS: string, ORACLE: string}, RHSM_API_QUERY_CATEGORY_TYPES: {CLOUD: string, PHYSICAL: string,\n *     HYPERVISOR: string, VIRTUAL: string}, RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string,\n *     DEVELOPMENT: string, PRODUCTION: string}, RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string,\n *     STANDARD: string}, RHSM_API_QUERY_SET_INVENTORY_TYPES: {BILLING_ACCOUNT_ID: string, DIRECTION: string,\n *     END_DATE: string, SLA: string, LIMIT: string, START_DATE: string, VARIANT: string, DISPLAY_NAME: string, UOM: string,\n *     USAGE: string, CATEGORY: string, SORT: string, OFFSET: string, BILLING_PROVIDER: string},\n *     RHSM_API_RESPONSE_HOSTS_DATA_TYPES: {MEASUREMENT_TYPE: string, CORES: string, CORE_HOURS: string,\n *     HARDWARE_TYPE: string, SUBSCRIPTION_MANAGER_ID: string, INSTANCE_HOURS: string, SOCKETS: string, INVENTORY_ID: string,\n *     NUMBER_OF_GUESTS: string, DISPLAY_NAME: string, CLOUD_PROVIDER: string, LAST_SEEN: string},\n *     RHSM_API_RESPONSE_ERRORS: string, RHSM_API_QUERY_UOM_TYPES: {CORES: string, SOCKETS: string},\n *     RHSM_API_RESPONSE_META: string, RHSM_API_RESPONSE_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string,\n *     MONTHLY: string}, RHSM_API_QUERY_SET_TYPES: {UOM: string, GRANULARITY: string, USAGE: string, DIRECTION: string,\n *     SORT: string, END_DATE: string, OFFSET: string, SLA: string, LIMIT: string, START_DATE: string, DISPLAY_NAME: string},\n *     RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES: {QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string,\n *     NEXT_EVENT_DATE: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string, SKU: string, SERVICE_LEVEL: string},\n *     RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES: {CAPACITY: string, LEGACY: string, DUAL_AXES: string, PARTIAL: string,\n *     HOURLY: string}, RHSM_API_RESPONSE_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string,\n *     PRODUCTION: string}, RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string,\n *     INSTANCE_HOURS: string, SOCKETS: string, MEASUREMENT: string, LAST_SEEN: string, NAME: string}}}\n */\nconst rhsmConstants = {\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_ERRORS,\n  RHSM_API_RESPONSE_ERRORS_TYPES,\n  RHSM_API_RESPONSE_ERRORS_CODE_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES,\n  RHSM_API_RESPONSE_HOSTS_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTION_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_BILLING_PROVIDER_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES\n};\n\nexport {\n  rhsmConstants as default,\n  rhsmConstants,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_ERRORS,\n  RHSM_API_RESPONSE_ERRORS_TYPES,\n  RHSM_API_RESPONSE_ERRORS_CODE_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES,\n  RHSM_API_RESPONSE_HOSTS_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTION_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_BILLING_PROVIDER_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES\n};\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var map = {\n\t\"./authentication/authentication.js\": [\n\t\t67719\n\t],\n\t\"./authentication/authenticationContext.js\": [\n\t\t98944\n\t],\n\t\"./bannerMessages/bannerMessages.js\": [\n\t\t87585,\n\t\t1858,\n\t\t7585\n\t],\n\t\"./bannerMessages/bannerMessagesContext.js\": [\n\t\t31824,\n\t\t1858,\n\t\t1824\n\t],\n\t\"./chart/chart.js\": [\n\t\t60930\n\t],\n\t\"./chart/chartAxisLabel.js\": [\n\t\t76395\n\t],\n\t\"./chart/chartContext.js\": [\n\t\t98326\n\t],\n\t\"./chart/chartElements.js\": [\n\t\t54096\n\t],\n\t\"./chart/chartHelpers.js\": [\n\t\t61026\n\t],\n\t\"./chart/chartIcon.js\": [\n\t\t1138\n\t],\n\t\"./chart/chartLegend.js\": [\n\t\t52902\n\t],\n\t\"./chart/chartTooltip.js\": [\n\t\t78213\n\t],\n\t\"./form/checkbox.js\": [\n\t\t34467,\n\t\t6170,\n\t\t7235,\n\t\t2181,\n\t\t1302\n\t],\n\t\"./form/formHelpers.js\": [\n\t\t44044\n\t],\n\t\"./form/formState.js\": [\n\t\t90384,\n\t\t384\n\t],\n\t\"./form/select.js\": [\n\t\t49844\n\t],\n\t\"./form/textInput.js\": [\n\t\t18710,\n\t\t8710\n\t],\n\t\"./graphCard/graphCard.js\": [\n\t\t10608,\n\t\t1858,\n\t\t136,\n\t\t1799,\n\t\t5925\n\t],\n\t\"./graphCard/graphCardChart.js\": [\n\t\t91799,\n\t\t1858,\n\t\t136,\n\t\t1799,\n\t\t1339\n\t],\n\t\"./graphCard/graphCardChartLegend.js\": [\n\t\t64418,\n\t\t1858,\n\t\t136,\n\t\t4418\n\t],\n\t\"./graphCard/graphCardChartTitleTooltip.js\": [\n\t\t99171,\n\t\t1858,\n\t\t136,\n\t\t939\n\t],\n\t\"./graphCard/graphCardChartTooltip.js\": [\n\t\t44024,\n\t\t1858,\n\t\t4024\n\t],\n\t\"./graphCard/graphCardContext.js\": [\n\t\t25394,\n\t\t1858,\n\t\t136,\n\t\t5394\n\t],\n\t\"./graphCard/graphCardHelpers.js\": [\n\t\t78139\n\t],\n\t\"./graphCard/graphCardMetricTotals.js\": [\n\t\t29407,\n\t\t1858,\n\t\t136,\n\t\t9407\n\t],\n\t\"./i18n/i18n.js\": [\n\t\t83109\n\t],\n\t\"./i18n/i18nHelpers.js\": [\n\t\t32643\n\t],\n\t\"./inventoryCard/inventoryCard.js\": [\n\t\t57276,\n\t\t1858,\n\t\t5242,\n\t\t7276,\n\t\t2085\n\t],\n\t\"./inventoryCard/inventoryCardContext.js\": [\n\t\t42896,\n\t\t1858,\n\t\t2896\n\t],\n\t\"./inventoryCard/inventoryCardHelpers.js\": [\n\t\t12243,\n\t\t2243\n\t],\n\t\"./inventoryCard/inventoryCardHosts.js\": [\n\t\t83341,\n\t\t1858,\n\t\t5242,\n\t\t7276,\n\t\t895\n\t],\n\t\"./inventoryCardSubscriptions/inventoryCardSubscriptions.js\": [\n\t\t16696,\n\t\t1858,\n\t\t5242,\n\t\t7276,\n\t\t9222\n\t],\n\t\"./inventoryCardSubscriptions/inventoryCardSubscriptionsContext.js\": [\n\t\t62881,\n\t\t1858,\n\t\t2881\n\t],\n\t\"./inventoryGuests/inventoryGuests.js\": [\n\t\t15242,\n\t\t1858,\n\t\t5242\n\t],\n\t\"./inventoryGuests/inventoryGuestsContext.js\": [\n\t\t23385,\n\t\t1858,\n\t\t3385\n\t],\n\t\"./inventoryTabs/inventoryTab.js\": [\n\t\t80931,\n\t\t931\n\t],\n\t\"./inventoryTabs/inventoryTabs.js\": [\n\t\t69051,\n\t\t1858,\n\t\t9051\n\t],\n\t\"./loader/loader.js\": [\n\t\t1797\n\t],\n\t\"./messageView/messageView.js\": [\n\t\t79719\n\t],\n\t\"./minHeight/minHeight.js\": [\n\t\t91339,\n\t\t353\n\t],\n\t\"./optinView/optinView.js\": [\n\t\t649\n\t],\n\t\"./pageLayout/pageColumns.js\": [\n\t\t5937\n\t],\n\t\"./pageLayout/pageHeader.js\": [\n\t\t58816\n\t],\n\t\"./pageLayout/pageLayout.js\": [\n\t\t52422\n\t],\n\t\"./pageLayout/pageMessages.js\": [\n\t\t54803\n\t],\n\t\"./pageLayout/pageSection.js\": [\n\t\t99781\n\t],\n\t\"./pageLayout/pageToolbar.js\": [\n\t\t89484\n\t],\n\t\"./pagination/pagination.js\": [\n\t\t68900,\n\t\t8900\n\t],\n\t\"./pagination/paginationHelpers.js\": [\n\t\t65020,\n\t\t5020\n\t],\n\t\"./productView/productView.js\": [\n\t\t29175,\n\t\t1858,\n\t\t136,\n\t\t5242,\n\t\t7276,\n\t\t1799,\n\t\t3557\n\t],\n\t\"./productView/productViewContext.js\": [\n\t\t51858,\n\t\t1858\n\t],\n\t\"./productView/productViewMissing.js\": [\n\t\t91233,\n\t\t1233\n\t],\n\t\"./router/index.js\": [\n\t\t94976\n\t],\n\t\"./router/router.js\": [\n\t\t27097\n\t],\n\t\"./router/routerContext.js\": [\n\t\t43301\n\t],\n\t\"./router/routerHelpers.js\": [\n\t\t97712\n\t],\n\t\"./table/table.js\": [\n\t\t78697\n\t],\n\t\"./table/tableEmpty.js\": [\n\t\t30817\n\t],\n\t\"./table/tableSkeleton.js\": [\n\t\t62540\n\t],\n\t\"./tabs/tabs.js\": [\n\t\t70031,\n\t\t31\n\t],\n\t\"./toolbar/toolbar.js\": [\n\t\t92227,\n\t\t1858,\n\t\t136,\n\t\t2227\n\t],\n\t\"./toolbar/toolbarContext.js\": [\n\t\t83280,\n\t\t1858,\n\t\t136,\n\t\t3280\n\t],\n\t\"./toolbar/toolbarFieldBillingProvider.js\": [\n\t\t31663,\n\t\t1858,\n\t\t1663\n\t],\n\t\"./toolbar/toolbarFieldCategory.js\": [\n\t\t93597,\n\t\t1858,\n\t\t3597\n\t],\n\t\"./toolbar/toolbarFieldDisplayName.js\": [\n\t\t89517,\n\t\t1858,\n\t\t9517\n\t],\n\t\"./toolbar/toolbarFieldGranularity.js\": [\n\t\t2738,\n\t\t1858,\n\t\t2738\n\t],\n\t\"./toolbar/toolbarFieldGroupVariant.js\": [\n\t\t12258,\n\t\t1858,\n\t\t2258\n\t],\n\t\"./toolbar/toolbarFieldRangedMonthly.js\": [\n\t\t65876,\n\t\t1858,\n\t\t5876\n\t],\n\t\"./toolbar/toolbarFieldSelectCategory.js\": [\n\t\t70136,\n\t\t1858,\n\t\t136\n\t],\n\t\"./toolbar/toolbarFieldSla.js\": [\n\t\t33267,\n\t\t1858,\n\t\t3267\n\t],\n\t\"./toolbar/toolbarFieldUom.js\": [\n\t\t74097,\n\t\t1858,\n\t\t4097\n\t],\n\t\"./toolbar/toolbarFieldUsage.js\": [\n\t\t49928,\n\t\t1858,\n\t\t9928\n\t],\n\t\"./toolbar/toolbarFieldVariant.js\": [\n\t\t22622,\n\t\t1858,\n\t\t2622\n\t],\n\t\"./tooltip/tooltip.js\": [\n\t\t3969\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 58908;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./product.openshiftContainer.js\": 74925,\n\t\"./product.openshiftDedicated.js\": 1816,\n\t\"./product.openshiftMetrics.js\": 33092,\n\t\"./product.rhacs.js\": 22624,\n\t\"./product.rhel.js\": 79326,\n\t\"./product.rhods.js\": 43016,\n\t\"./product.rhosak.js\": 85464,\n\t\"./product.rosa.js\": 9362,\n\t\"./product.satellite.js\": 36272\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 25264;"],"names":["module","exports","App","_ref","getLocale","useAliasDispatch","useDispatch","useAliasSelector","useSelector","dispatch","locale","_ref2","_user$locale","user","data","value","platformNotifications","useMount","helpers","React","NotificationsPortal","I18n","Authentication","Router","defaultProps","reduxActions","storeHooks","memo","func","cache","_ref11$cacheLimit","arguments","length","undefined","cacheLimit","_len","args","Array","_key","key","JSON","stringify","concat","map","arg","toString","keyIndex","indexOf","result","call","apply","unshift","noop","Function","prototype","noopPromise","Promise","resolve","objFreeze","obj","Object","freeze","oIsFunction","hasOwnProp","hasOwnProperty","getOwnPropertyNames","forEach","prop","isFrozen","setImmutableData","_ref12$isClone","isClone","_cloneDeep","UI_WINDOW_ID","process","aggregatedError","errors","message","err","_ref$name","name","_window","window","AggregateError","Error","isArray","isEmulated","browserExpose","_ref13","_ref13$limit","limit","_ref13$id","id","_objectSpread","generateHash","anyValue","_ref2$method","method","cryptoSha1","_isPlainObject","entries","sort","_ref3","_ref4","a","_slicedToArray","b","localeCompare","_ref7","_ref8","generateId","prefix","Math","ceil","random","isDate","date","isPromise","test","numberDisplay","Number","isNaN","numbro","DEV_MODE","PROD_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DEPLOY_PATH_LINK_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_NOTIFICATIONS","UI_DISABLED_TABLE","UI_DISABLED_TABLE_HOSTS","UI_DISABLED_TABLE_INSTANCES","UI_DISABLED_TABLE_SUBSCRIPTIONS","UI_DISABLED_TOOLBAR","UI_DISABLED_TOOLBAR_GROUP_VARIANT","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LINK_CONTACT_US","UI_LINK_LEARN_MORE","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","UI_LOCALE_DEFAULT","UI_LOCALE_DEFAULT_DESC","UI_LOGGER_ID","UI_LOGGER_FILE","UI_NAME","UI_PATH","UI_VERSION","getCurrentDate","moment","toDate","REACT_APP_DEBUG_DEFAULT_DATETIME","setRangedDateTime","subtract","measurement","_ref$endOfMeasurement","endOfMeasurement","startDate","startOf","endDate","endOf","currentDateTime","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","rangedYearDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedMonthDateTime","month","currentYear","parseInt","year","_rangedYearDateTime","keyDateTimeRanges","listDateTimeRanges","startDateUpdated","endDateUpdated","format","dateTime","titleYear","title","titleIndex","isNextYear","_title","toLowerCase","add","translate","context","push","reverse","isCurrent","current","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats","timestampTimeFormats","timeLong","yearTimeLong","timeShort","yearTimeShort","timestampUTCTimeFormats","downloadData","options","_ref$data","_ref$fileName","fileName","_ref$fileType","fileType","reject","document","navigator","URL","blob","Blob","type","msSaveBlob","anchorTag","createElement","href","createObjectURL","style","display","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","error","debugLog","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_window2","sessionStorage","wrap","_context","prev","next","replace","parse","getItem","t0","stop","appName","children","isDisabled","t","_useAliasGetAuthoriza","useAliasGetAuthorization","useGetAuthorization","pending","_useAliasGetAuthoriza2","_data$authorized","authorized","errorCodes","errorStatus","isAuthorized","AuthenticationContext","MessageView","Maintenance","description","pageTitle","icon","BinocularsIcon","includes","rhsmConstants","OptinView","NotAuthorized","serviceName","routerHelpers","DEFAULT_CONTEXT","useAuthContext","useContext","_responses$id","_responses$id$errors","_ref$appName","_ref$authorizeUser","authorizeUser","_ref$hideGlobalFilter","hideGlobalFilter","_ref$useChrome","useChrome","useAliasChrome","_ref$useDispatch","_ref$useSelectorsResp","useSelectorsResponse","useAliasSelectorsResponse","_useAliasChrome$updat","updateDocumentTitle","_useAliasSelectorsRes","selector","auth","_user$errors","fulfilled","responses","_ref6","_ref7$","_ref7$2","app","status","useSession","_ref8$useAuthContext","session","Chart","chartLegend","chartTooltip","dataSets","padding","themeColor","xAxisChartLabel","yAxisChartLabel","xAxisFixLabelOverlap","xAxisLabelIncrement","xAxisTickFormat","yAxisTickFormat","xValueFormat","yValueFormat","_useState","useState","_useState2","setContext","_useState3","_useState4","dataSetsToggle","setDataSetsToggle","containerRef","useRef","tooltipRef","chartWidth","target","width","height","dimensions","setDimensions","useEffect","timeout","isElementResize","ResizeObserver","element","removeObserver","handler","_ref$clientHeight","clientHeight","_ref$clientWidth","clientWidth","_ref$innerHeight","innerHeight","_ref$innerWidth","innerWidth","resizeObserver","observe","unobserve","addEventListener","removeEventListener","clearTimeout","useResizeObserver","toggledDataSets","tooltipDataSetLookUp","_chartHelpers$generat","maxX","maxY","individualMaxY","_chartHelpers$generat3","xAxisProps","yAxisProps","isMultiYAxis","chartElementsProps","_chartHelpers$generat4","domain","domainPadding","chartSettings","filter","chartHelpers","content","chartDomain","hasData","tickValues","bottom","left","right","top","updatedSettings","chartContainerRef","chartTooltipRef","ChartContext","className","ref","ChartElements","ChartLegend","chartAxisLabel","axis","_ref$index","index","x","y","text","xmlns","useChartContext","useToggleData","_ref$useChartContext","_useAliasChartContext2","contextDataSetsToggle","_contextDataSetsToggl","onHide","useCallback","prevState","_defineProperty","onRevert","onToggle","updatedToggle","getIsToggled","chartElements","stackedChartElements","chartTypeDefaults","_useChartContext","_useChartContext$char","_chartSettings$xAxisP","_chartSettings$yAxisP","containerComponent","ChartContainer","xAxis","yAxis","_Object$values$sort","VictoryVoronoiCursorContainer","createContainer","TooltipLabelComponent","cursorDimension","voronoiDimension","labels","labelComponent","ChartCursorTooltip","dx","dy","centerOffset","flyoutStyle","fill","stroke","voronoiPadding","values","mouseFollowTooltips","keys","updatedXAxisProps","label","AxisLabelComponent","axisLabelComponent","ChartAxis","assign","animate","axisProps","updatedAxisProps","_AxisLabelComponent","orientation","setChartElement","chartType","props","ChartTypeVariant","Component","component","_objectWithoutProperties","_excluded","elements","stackedElements","duration","ChartStack","_chartTypeDefaults","ChartArea","onLoad","interpolation","ChartLine","ChartThreshold","area","line","threshold","generateMaxXY","_ref$dataSets","individualDataSetsMaxY","combinedDataSetMaxX","combinedDataSetsMaxY","isStacked","max","_toConsumableArray","_value$y","dataSetMaxY","_value$y2","generateDomains","_ref5","_ref5$padding","updatedChartDomain","updatedPadding","generatedDomain","floored","pow","floor","log10","generateElementsProps","_ref6$dataSets","_ref7$chartTypeVarian","chartTypeVariant","elementsById","stackedElementsById","dataSet","strokeDasharray","strokeWidth","dataColorStroke","chartElementProps","themeVariant","datum","xValue","yValue","isMultiAxis","updatedProps","generateTooltipData","_dataSets$","_ref8$content","_ref8$dataSets","itemsByKey","_data$data","color","mockDatum","tooltip","generateXAxisProps","_ref9","_ref9$dataSet","_ref9$xAxisPropDefaul","xAxisPropDefaults","_dataSet$data","reduce","acc","tickFormat","tick","_data$tick","xAxisLabel","tickIndex","previousItem","nextItem","item","generateYAxisProps","_ref10","_ref10$dataSets","_ref10$yAxisPropDefau","yAxisPropDefaults","_ref11","tickLabels","updatedMaxY","generateAxisProps","xAxisDataSet","_ref12","_ref12$dataSets","_ref12$individualMaxY","_ref12$xAxisFixLabelO","_ref12$xAxisLabelIncr","fixLabelOverlap","yAxisDataSets","yAxisUseDataSet","xAxisUseDataSet","slice","dependentAxis","showGrid","getSize","size","parseFloat","ChartIcon","symbol","svgProps","iconProps","fontProps","fontSize","emSvgSize","viewBox","role","x1","y1","x2","y2","EyeIcon","EyeSlashIcon","SquareIcon","setIcon","_useToggleData","_chartSettings$paddin","legendProps","chart","hide","revert","toggle","isToggled","marginLeft","marginRight","_ref$chartSettings","_ref$chartContainerRe","_ref$chartTooltipRef","_ref$minChartWidth","minChartWidth","getXCoordinate","tooltipWidth","_ref2$padding","_ref2$minWidth","minWidth","getYCoordinate","tooltipHeight","_ref3$padding","_ref3$minWidth","updatedMultiplier","tailPosition","_ref4$padding","_ref4$minWidth","_tooltipDataSetLookUp","_containerRef$current","_containerRef$current2","_tooltipRef$current","_ref5$datum","_chartSettings$toolti","containerBounds","querySelector","getBoundingClientRect","tooltipBounds","isOutsideGraphBottom","isOutsideGraphLeft","isOutsideGraphRight","isOutsideGraphTop","updatedClassName","createMockEvent","event","persistEvent","_event","checked","_event$currentTarget","currentTarget","keyCode","_event$persist","persist","_event$target","doesNotHaveMinimumCharacters","characters","formHelpers","SplitButtonVariant","action","checkbox","ButtonVariant","PfButtonVariant","SelectButtonVariant","SelectDirection","DropdownDirection","SelectPosition","DropdownPosition","formatOptions","updateSelected","_ref$selectField","selectField","selectedOptions","variant","_selectField$current","domElement","dataAttributes","updatedOptions","isSelectedOptionsStringNumber","activateOptions","option","isSelected","convertedOption","textContent","_findIndex","find","activeOption","selected","SelectVariant","opt","firstChild","setAttribute","formatSelectProps","_memoize","placeholder","hasPlaceholderStyle","formatButtonProps","buttonVariant","onSplitButton","splitButtonCopy","splitButtonVariant","splitButtonVariantPropLookup","splitButtonItems","DropdownToggleAction","onClick","DropdownToggleCheckbox","default","toggleVariant","plain","isPlain","toggleIndicator","primary","secondary","isText","Select","ariaLabel","direction","isDropdownButton","isFlipEnabled","isInline","isToggleText","maxHeight","onSelect","baseOptions","position","toggleIcon","_excluded2","isExpanded","setIsExpanded","setOptions","_useState5","_useState6","setSelected","useShallowCompareEffect","_formatOptions","updatedSelected","expanded","onDropdownSelect","titleSelection","optionsIndex","findIndex","_event$currentTarget$","getAttribute","innerText","mockUpdatedOptions","mockTarget","selectedIndex","mockEvent","Dropdown","isOpen","DropdownToggle","dropdownItems","DropdownItem","btoa","updatedButtonProps","formatButtonParentProps","PfSelect","down","selections","placeholderText","PfSelectOption","generateChartIds","isCapacity","metric","productId","_ref$query","query","metricCategory","RHSM_API_QUERY_SET_TYPES","generateIsToolbarFilter","_ref2$query","generateChartSettings","_ref3$filters","filters","_ref3$settings","settings","graphCardSettings","filtersSettings","combinedSettings","filterSettings","isMultiMetric","isFirst","isLast","remainingCombinedSettings","updatedChartType","isThreshold","isAxisLabel","baseFilterSettings","isToolbarFilter","chartColorGreenDark","_remainingCombinedSet","_remainingCombinedSet2","isMetricDisplay","cards","isStandalone","groupMetric","Set","metrics","stringId","_filtersSettings","currentLastFiltersSettingsEntry","_filtersSettings2","lastFiltersSettingsEntry","from","groupedMetrics","groupedMetricsSettings","remainingSettings","_excluded3","metricFilter","getChartXAxisLabelIncrement","getTooltipDate","momentDate","callback","previousDate","formattedDate","isNewYear","_helpers$numberDispla","_helpers$numberDispla2","average","mantissa","trimMantissa","lowPrecision","toUpperCase","generateExtendedChartSettings","graphCardHelpers","fallbackLng","loadPath","initialized","setInitialized","i18next","XHR","use","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","e","EMPTY_CONTEXT","noopTranslate","components","updatedKey","updatedValue","updatedComponents","splitContext","_ref$emptyContextValu","emptyContextValue","split","parseContext","translateKey","_ref2$emptyContextVal","_ref2$splitContext","aliasSplitContext","updatedTranslateKey","updatedContext","tempContext","flat","lastContext","pop","join","parseTranslateKey","TestElement","_ref7$i18next","aliasI18next","_ref7$isDebug","isDebug","_ref7$noopTranslate","aliasNoopTranslate","_ref7$parseContext","aliasParseContext","_ref7$parseTranslateK","updatedValues","baseUpdatedTranslateKey","_aliasParseContext","parsedContext","testId","defaultTestId","updatedDataTest","setI18nTestElement","store","Trans","i18nKey","translateComponent","_ref8$i18next","_ref8$noopTranslate","withTranslation","_objectDestructuringEmpty","i18n","displayName","i18nHelpers","Loader","skeletonProps","tableProps","Skeleton","SkeletonSize","TableSkeleton","PageLayout","PageHeader","Spinner","PageSection","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","EmptyStateBody","disableButton","updateAccountOptIn","useAliasSession","optin","Card","Flex","flex","FlexItem","CardTitle","CardBody","CardFooter","Form","ActionGroup","Button","alignSelf","CardHeader","CardHeaderMain","Brand","srcSet","graphPng4x","graphPng2x","src","alt","PageColumns","alignItems","sm","spaceItems","child","grow","productLabel","RcsPageHeader","justifyContent","PageHeaderTitle","ExternalLinkAltIcon","iconPosition","PageMessages","PageToolbar","Main","Section","redirectRoute","routes","useAliasSetRouteDetail","useSetRouteDetail","updatedRoutes","View","Route","path","fallback","Routes","redirect","Navigate","to","useLocation","_ref$useLocation","useAliasLocation","useLocationRRD","_ref$windowLocation","windowLocation","aliasWindowLocation","location","updatedLocation","setUpdatedLocation","_id","hash","search","useNavigate","_ref2$useDispatch","_ref2$useLocation","_ref2$useNavigate","useAliasNavigate","useRRDNavigate","_useAliasLocation","_useAliasLocation$sea","_useAliasLocation$has","navigate","pathLocation","pathName","pathname","firstMatch","productPath","reduxTypes","config","useRouteDetail","_ref3$t","_ref3$useChrome","_ref3$useSelectors","useSelectors","useAliasSelectors","_useAliasChrome","_useAliasChrome$getBu","getBundleData","bundleData","_useAliasSelectors","_view$product","view","product","_view$product2","_useAliasSelectors2","productVariant","detail","setDetail","updatedVariantPath","hashPath","_passed","routeConfig","_routeConfig","_routeConfig$firstMat","selectedVariant","productGroup","_routeConfig2","allConfigs","availableVariants","configs","isClosest","bundleTitle","errorRoute","productConfig","useSearchParams","_ref6$useSearchParams","useAliasSearchParams","useRRDSearchParams","_ref6$useLocation","_useAliasSearchParams","setAliasSearchParams","setSearchParams","updatedQuery","_ref7$isMerged","isMerged","_ref7$currentSearch","currentSearch","updatedSearch","_ref8$useSelector","_ref8$useDispatch","_ref8$windowLocation","_useAliasSelector","_view$product3","updatedPath","dynamicBaseName","_ref$pathName","applicationName","dynamicBasePath","_ref2$pathName","_ref2$appName","routesConfig","disabled","getRouteConfigByPath","_updatedPathName$toLo","_updatedPathName$toLo2","_updatedPathName$toLo3","_updatedPathName$toLo4","_updatedPathName$toLo5","_updatedPathName$toLo6","_updatedPathName$toLo7","_ref4$configs","_configs","byAnything","byAnythingPathIds","byAnythingVariants","byProductIdConfigs","updatedPathName","trimmedPathName","RegExp","focusedStr","_trimmedPathName$spli","closestStr","closest","configsByAnything","importView","p","parseSearchParams","currentPathAndOrSearch","decodeURIComponent","URLSearchParams","parsedSearch","param","v","_v$split","_v$split2","pathJoin","paths","hasLead","Table","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","state","isCollapsible","isSortable","sortBy","updatedColumnHeaders","updatedRows","onCollapse","fullWidth","cells","expandedContent","setState","onSort","_ref2$data","_this$state","updatedIndex","i","_x","_x2","_data$column","_data$column$header","column","header","_createClass","this","setRowData","prevProps","_this$props","columnHeaders","rows","customizer","valueA","valueB","_isEqualWith","_this$props2","updatedSort","rowObj","parent","cell","columnHeader","sortActive","sortDirection","tempColumnHeader","transforms","sortable","SortByDirection","_this2","_this$state2","_this$props3","borders","isHeader","summary","pfTableProps","emptyTable","TableEmpty","SearchIcon","PfTable","TableHeader","TableBody","Grid","GridItem","span","renderTable","tableHeading","PlatformEmptyTableWrapper","colCount","colWidth","rowCount","updatedHeader","cellWidth","updatedRowCount","Tooltip","isNoWrap","PfTooltip","distance","enableFlip","entryDelay","exitDelay","TooltipPosition","productConfigs","require","console","warn","sortedProductConfigs","viewIdConfigs","productAliases","productIds","productIdConfigs","productPathConfigs","anything","anythingVariants","groupIdConfigs","groupedGroupIds","groupedVariants","groupedViewIds","_anything$productGrou","_anything$productId","_anything$productLabe","_anything$productPath","_productPathConfigs$p","_groupIdConfigs$produ","_groupedVariants$prod","_groupedVariants$prod2","_groupedGroupIds$prod","_groupedVariants$prod3","_groupedVariants$prod4","_viewIdConfigs$viewId","_groupedViewIds$viewI","aliases","productVariants","viewId","alias","_productAliases$alias","_anything$alias","_productAliases$varia","_anything$variant","_anythingVariants$key","byAlias","byGroupIdConfigs","byGroupIds","byGroupIdVariants","byProductPathConfigs","byProductIds","byViewIdConfigs","byViewIds","products","sortedConfigs","activateOnError","RHSM_API_PATH_PRODUCT_TYPES","productDisplay","DISPLAY_TYPES","productContextFilterUom","_query","RHSM_API_QUERY_UOM_TYPES","toISOString","graphTallyQuery","inventoryHostsQuery","_inventoryHostsQuery","INVENTORY_SORT_TYPES","SORT_DIRECTION_TYPES","inventorySubscriptionsQuery","_inventorySubscriptio","SUBSCRIPTIONS_SORT_TYPES","initialOption","initialGraphFilters","RHSM_API_PATH_METRIC_TYPES","isOptional","chartColorBlueLight","chartColorBlueDark","initialGraphSettings","isCardTitleDescription","actions","initialGuestsFilters","inventoryId","inventory","_data$lastSeen","_data$lastSeen2","lastSeen","DateFormat","initialInventoryFilters","INVENTORY_TYPES","_ref2$INVENTORY_TYPES","_ref2$INVENTORY_TYPES2","instanceId","_ref2$INVENTORY_TYPES3","numberOfGuests","updatedDisplayName","count","PfLabel","uom","INVENTORY_META_TYPES","_data$uom","isWrappable","initialInventorySettings","initialSubscriptionsInventoryFilters","SUBSCRIPTIONS_INVENTORY_TYPES","hasInfiniteQuantity","totalCapacity","nextEventDate","initialToolbarFilters","chartColorCyanLight","chartColorCyanDark","chartId","dailyHasData","dailyValue","total","footer","dailyDate","_helpers$numberDispla3","_helpers$numberDispla4","monthlyHasData","monthlyValue","monthlyDate","_helpers$numberDispla7","_helpers$numberDispla8","_helpers$numberDispla5","_helpers$numberDispla6","_ref10$INVENTORY_TYPE","_ref10$INVENTORY_TYPE2","_ref10$INVENTORY_TYPE3","cores","toFixed","instanceHours","isSecondary","_ref9$INVENTORY_TYPES","_ref9$INVENTORY_TYPES2","_ref9$INVENTORY_TYPES3","RHSM_API_QUERY_INVENTORY_SORT_TYPES","RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES","metricId","provider","_helpers$numberDispla9","_ref14","SUBSCRIPTIONS_INVENTORY_META_TYPES","subscriptionType","RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES","CATEGORY_TYPES","chartColorPurpleLight","chartColorPurpleDark","chartColorOrangeLight","chartColorOrangeDark","isDisabledLegendClick","cloudProvider","category","sockets","_ref11$INVENTORY_TYPE","_ref11$INVENTORY_TYPE2","_ref15","_helpers$numberDispla10","_ref16","_helpers$numberDispla11","_ref17","_ref18","_ref$INVENTORY_TYPES$","_ref$INVENTORY_TYPES$2","RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES","FULFILLED_ACTION","PENDING_ACTION","REJECTED_ACTION","setResponseSchemas","initialValue","schema","generated","getSingleResponseFromResultArray","results","updatedResults","payload","response","updatedResultsMessage","firstErrorResponse","_get","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","formattedStatus","trim","getDateFromResults","getStatusFromResults","setStateProp","_options$state","_options$initialState","initialState","_options$reset","reset","singlePromiseDataResponseFromArray","reduxHelpers","HTTP_STATUS_RANGE","setApiQuery","setNormalizedResponse","parsedResponses","_ref$schema","customResponseEntry","customResponseValue","keyPrefix","_ref$keyCase","keyCase","updatedData","_setResponseSchemas","_setResponseSchemas2$","generatedSchema","parsedResponse","dataObj","_ref2$keyPrefix","keyCaseType","customEntry","_ref2$customValue","customValue","_ref2$update","update","updatedDataObj","generatedData","casedDataObjKey","dataObjKey","dataObjValue","_camelCase","_snakeCase","val","isInteger","generatedPromiseActionReducer","types","expandedTypes","subVal","_expandedTypes$filter","whichType","baseState","errorMessage","meta","updatedMeta","fromEntries","expandMetaTypes","setId","_action$meta","_action$meta2","errorResponse","cancelled","getDataFromResults","selectors","_useAliasSelector2","_ref2$equality","equality","shallowEqual","_ref2$useSelector","useReactReduxSelector","updatedSelectors","selectorIds","multiSelector","createSelector","listMultiSelectorResponse","undefinedMultiSelectorResponse","idMultiSelectorResponse","customResponse","selectorResponse","isSelectorResponseArray","cancelledById","cancelledByList","cancelledDataById","cancelledDataByList","errorByList","errorById","errorDataById","errorDataByList","fulfilledByList","fulfilledById","fulfilledDataById","fulfilledDataByList","pendingByList","responsesById","responsesByList","dataById","dataByList","idList","updatedSelectorResponse","_cancelledByList","_errorByList","_fulfilledByList","updatedResponse","_errorByList$","isById","list","reactReduxHooks","dispatchEvent","_ref$useSelector","useSelectorsAllSettledResponse","_ref5$useSelectorsRes","baseResponse","useSelectorsAnyResponse","_ref7$useSelectorsRes","keyList","useSelectorsRaceResponse","_ref9$useSelectorsRes","_errorByList$2","reactRedux","camelCase","updatedObj","schemaResponse","casing","_ref5$convert","convert","_ref5$id","validate","_ref6$error","details","_ref7$context","serviceHelpers","passDataToCallback","timeoutFunctionCancel","clearTimer","_ref$timeout","_ref$errorMessage","updatedFunc","sent","abrupt","race","_","finally","globalXhrTimeout","globalCancelTokens","globalResponseCache","LruCache","ttl","updateAgeOnGet","axiosServiceCall","_ref2$cancelledMessag","cancelledMessage","_ref2$responseCache","responseCache","_ref2$xhrTimeout","xhrTimeout","updatedConfig","responseTransformers","axiosInstance","cacheId","cancelTokensId","cachedResponse","emulateCallback","emulatedResponse","isSuccess","_args","cacheResponse","axios","exposeCacheId","cancel","cancelId","params","CancelToken","cancelToken","token","get","adapter","adapterConfig","transform","_axiosInstance$interc","successTransform","errorTransform","transformers","_serviceHelpers$passD","_serviceHelpers$passD2","interceptors","set","url","Joi","JoiBase","JoiDate","userResponseSchema","object","identity","is_org_admin","boolean","unknown","entitlements","is_entitled","permissionsItem","permission","string","optional","allow","resourceDefinitions","array","permissionsResponseSchema","items","platformSchemas","permissions","platformTransformers","_identity$platformCon","_entitlements$helpers","_ref$platformConstant","platformConstants","_ref$platformConstant2","isAdmin","isEntitled","_ref2$config","rbacConfig","_updatedResponse$perm","_updatedResponse$perm2","_ref3$platformConstan","definitions","_ref5$","resource","operation","all","resources","RESOURCE_TYPES","OPERATION_TYPES","_updatedResponse$perm3","resourcePermissions","_updatedResponse$perm4","_updatedResponse$perm5","_updatedResponse$perm6","res","op","getUser","_callee2","_options$schema","_options$transform","insights","_args2","_context2","_url","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","t1","_callee4","isHidden","_window3","_args4","_context4","platformServices","getUserPermissions","_url2","_options$schema2","_options$transform2","updatedAppName","platformMethod","USER_PERMISSION_TYPES","REACT_APP_DEBUG_PERMISSION_APP_ONE","REACT_APP_DEBUG_PERMISSION_APP_TWO","_callee3","userPermissions","allPermissions","_context3","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","platformTypes","serviceConfig","passedConfig","headers","serviceCall","errorItem","code","errorResponseSchema","linksSchema","metaResponseSchema","number","integer","_Joi$string","valid","capacityMetaSchema","metric_id","_Joi$string2","capacityItem","utc","has_data","has_infinite_quantity","capacityResponseSchema","links","guestsMetaSchema","guestsItem","inventory_id","display_name","subscription_manager_id","last_seen","guestsResponseSchema","hostsMetaSchema","hostsItem","cloud_provider","lowercase","hardware_type","measurement_type","number_of_guests","hostsResponseSchema","instancesMetaSchema","measurements","_Joi$string3","instancesItem","instance_id","billing_provider","billing_account_id","instancesResponseSchema","subscriptionsMetaSchema","subscription_type","_Joi$string4","subscriptionsItem","next_event_date","product_name","quantity","service_level","_Joi$string5","total_capacity","_Joi$string$lowercase","subscriptionsResponseSchema","tallyItem","tallyMetaSchema","has_cloudigrade_data","has_cloudigrade_mismatch","_Joi$string6","total_monthly","tallyResponseSchema","rhsmSchemas","capacity","guests","hosts","instances","subscriptions","tally","rhsmTransformers","_ref$rhsmConstants$RH","_ref$rhsmConstants$RH2","_objectSpread2","_HOSTS_DATA_TYPES$NUM","HOSTS_DATA_TYPES","_HOSTS_DATA_TYPES$SUB","subscriptionManagerId","_toPropertyKey","HOSTS_META_TYPES","_meta$INSTANCES_META_","_normalizedUom","_normalizedUom2","_ref4$rhsmConstants$R","_ref4$rhsmConstants$R2","metaMeasurements","INSTANCES_META_TYPES","_objectSpread3","_INSTANCES_DATA_TYPES","INSTANCES_DATA_TYPES","_INSTANCES_DATA_TYPES2","_INSTANCES_DATA_TYPES3","normalizedUom","tallyCapacity","_meta$TALLY_CAPACITY_","_meta$TALLY_CAPACITY_2","_meta$TALLY_CAPACITY_3","_isCapacity","_ref7$rhsmConstants$R","_ref7$rhsmConstants$R2","currentDate","currentDateStr","futureDateCount","TALLY_CAPACITY_DATA_TYPES","updatedDate","isCurrentDate","isFutureDate","diff","TALLY_CAPACITY_META_TYPES","cloudigradeHasMismatch","totalMonthlyDate","totalMonthlyHasData","totalMonthlyValue","rhsmHelpers","_params$RHSM_API_QUER","updatedId","rhsmServices","getApiVersion","_options$cache","_options$cancel","getGraphCapacity","_options$cache4","_options$cancel4","getGraphReports","_options$cache2","_options$cancel2","getGraphTally","_options$cache3","_options$cancel3","getHostsInventory","_options$cache5","_options$cancel5","_options$schema3","_options$transform3","getHostsInventoryGuests","_options$cache6","_options$cancel6","_options$schema4","_options$transform4","getInstancesInventory","_options$cache7","_options$cancel7","_options$schema5","_options$transform5","getSubscriptionsInventory","_options$cache8","_options$cancel8","_options$schema6","_options$transform6","rhsmActions","getGraphMetrics","idMetric","_options$cancelId","multiMetric","multiDispatch","metricQuery","methodService","methodType","rhsmTypes","methodCancelId","generatedId","notifications","userServices","defaultLang","cookieLang","Cookies","LocaleCode","deleteAccountOptIn","getAccountOptIn","userActions","userTypes","rejected","dismissable","autoDismiss","platform","rhsm","legend","reportCapacity","graphReducer","graphTypes","hostsInventory","hostsGuests","instancesInventory","subscriptionsInventory","tabs","inventoryReducer","inventoryTypes","bannerMessages","messagesReducer","toolbarReducer","activeFilters","currentFilter","userReducer","appTypes","actionStatus","inventoryGuestsQuery","viewReducer","_state$product","updateVariantResetQueries","_productConfig$sorted","queryIds","queryId","updateResetQueries","productQuery","RHSM_API_QUERY_TYPES","updateClearQueries","updateClearGuestQuery","clearFilters","reducers","graph","messages","toolbar","reduxReducers","combineReducers","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","httpStatus","payloadConfig","range","statusMiddleware","promiseMiddleware","_excluded4","_parsedItems","parsedItems","getActions","priorItem","updatedAction","removeUserIdentity","_obj$data","_obj$data$user","platformApiTypes","updatedPayload","sanitizeData","sanitizeActionHeaders","actionObj","timestamp","Date","now","setItem","browser","userAgent","toLocaleString","recordAction","actionRecordMiddleware","version","notificationsMiddleware","createStore","applyMiddleware","STATUS_4XX","STATUS_5XX","SET_PRODUCT","SET_PRODUCT_VARIANT","SET_PRODUCT_VARIANT_QUERY_RESET_ALL","SET_GRAPH_LEGEND","CLEAR_INVENTORY_GUESTS","SET_INVENTORY_TAB","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_GLOBAL_FILTER_HIDE","PLATFORM_USER_AUTH","queryTypes","SET_QUERY","SET_QUERY_CLEAR","SET_QUERY_CLEAR_INVENTORY_LIST","SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST","SET_QUERY_RESET_INVENTORY_LIST","SET_QUERY_RHSM_TYPES","_SET_QUERY_RHSM_TYPES","SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES","_SET_QUERY_RHSM_GUEST","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","_SET_QUERY_RHSM_HOSTS","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","_SET_QUERY_RHSM_SUBSC","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_LOCALE","USER_LOGOUT","SET_BANNER_MESSAGES","SET_ACTIVE_FILTERS","SET_FILTER_TYPE","GET_GRAPH_CAPACITY_RHSM","GET_GRAPH_REPORT_CAPACITY_RHSM","GET_GRAPH_TALLY_RHSM","GET_HOSTS_INVENTORY_RHSM","GET_HOSTS_INVENTORY_GUESTS_RHSM","GET_INSTANCES_INVENTORY_RHSM","GET_SUBSCRIPTIONS_INVENTORY_RHSM","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","RESOURCE_DEFS","PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES","ALL","PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES","READ","WRITE","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES","SUBSCRIPTIONS","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","SATELLITE_CAPSULE","SATELLITE_SERVER","RHACS","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHODS","RHOSAK","ROSA","OPENSHIFT","OPENSHIFT_METRICS","OPENSHIFT_DEDICATED_METRICS","SATELLITE","CORES","SOCKETS","CORE_SECONDS","INSTANCE_HOURS","STORAGE_GIBIBYTES","STORAGE_GIBIBYTE_MONTHS","TRANSFER_GIBIBYTES","RHSM_API_RESPONSE_META_TYPES","COUNT","PRODUCT","RHSM_API_RESPONSE_HOSTS_DATA_TYPES","CORE_HOURS","CLOUD_PROVIDER","DISPLAY_NAME","HARDWARE_TYPE","INVENTORY_ID","LAST_SEEN","MEASUREMENT_TYPE","NUMBER_OF_GUESTS","SUBSCRIPTION_MANAGER_ID","RHSM_API_RESPONSE_HOSTS_META_TYPES","RHSM_API_RESPONSE_INSTANCES_DATA_TYPES","BILLING_PROVIDER","BILLING_ACCOUNT_ID","CATEGORY","INSTANCE_ID","MEASUREMENTS","RHSM_API_RESPONSE_INSTANCES_META_TYPES","UOM","RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES","HAS_INFINITE_QUANTITY","NEXT_EVENT_DATE","PRODUCT_NAME","QUANTITY","SERVICE_LEVEL","TOTAL_CAPACITY","RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES","SUBSCRIPTION_TYPE","RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES","DATE","VALUE","HAS_DATA","RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES","HAS_CLOUDIGRADE_DATA","HAS_CLOUDIGRADE_MISMATCH","METRIC_ID","TOTAL_MONTHLY","RHSM_API_RESPONSE_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES","RED_HAT","AWS","RHSM_API_RESPONSE_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","RHSM_API_RESPONSE_UOM_TYPES","RHSM_API_RESPONSE_USAGE_TYPES","PRODUCTION","DEVELOPMENT","DISASTER","UNSPECIFIED","RHSM_API_QUERY_CATEGORY_TYPES","CLOUD","HYPERVISOR","PHYSICAL","VIRTUAL","RHSM_API_QUERY_GRANULARITY_TYPES","RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES","HARDWARE","MEASUREMENT","NAME","RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES","ASCENDING","DESCENDING","NEXT_EVENT_TYPE","SKU","USAGE","RHSM_API_QUERY_BILLING_PROVIDER_TYPES","RHSM_API_QUERY_SLA_TYPES","RHSM_API_QUERY_USAGE_TYPES","RHSM_API_QUERY_SET_INVENTORY_TYPES","DIRECTION","END_DATE","LIMIT","OFFSET","SLA","SORT","START_DATE","VARIANT","RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES","GRANULARITY","RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES","DUAL_AXES","HOURLY","LEGACY","PARTIAL","CAPACITY","RHSM_API_RESPONSE_DATA","RHSM_API_RESPONSE_META","RHSM_API_RESPONSE_ERRORS","RHSM_API_RESPONSE_ERRORS_TYPES","CODE","RHSM_API_RESPONSE_ERRORS_CODE_TYPES","GENERIC","OPTIN","RHSM_API_RESPONSE_SUBSCRIPTION_TYPES","ANNUAL","ON_DEMAND","webpackContext","req","webpackContextResolve","__webpack_require__","o","webpackAsyncContext","then","ids"],"sourceRoot":""}
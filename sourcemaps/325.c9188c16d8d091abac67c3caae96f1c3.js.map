{"version":3,"file":"js/325.1643662791925.2ffec8357d21e0fda301.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/OUIA/ouia.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/TableToolbar/TableToolbar.js","webpack:///./src/components/form/formHelpers.js","webpack:///./src/components/form/textInput.js","webpack:///./src/components/inventoryCard/inventoryCardHelpers.js","webpack:///./src/components/pagination/pagination.js","webpack:///./src/components/pagination/paginationHelpers.js","webpack:///./src/components/toolbar/toolbarFieldDisplayName.js"],"sourcesContent":["import { useMemo } from 'react';\nlet uid = 0;\nconst ouiaPrefix = 'OUIA-Generated-';\nconst ouiaIdByRoute = {};\n/** Get props to conform to OUIA spec\n *\n * For functional components, use the useOUIAProps function instead\n *\n * In class based components, create a state variable ouiaStateId to create a static generated ID:\n * state = {\n *  ouiaStateId: getDefaultOUIAId(Chip.displayName)\n * }\n * This generated ID should remain alive as long as the component is not unmounted.\n *\n * Then add the attributes to the component\n * {...getOUIAProps('OverflowChip', this.props.ouiaId !== undefined ? this.props.ouiaId : this.state.ouiaStateId)}\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n */\nexport function getOUIAProps(componentType, id, ouiaSafe = true) {\n    return {\n        'data-ouia-component-type': `PF4/${componentType}`,\n        'data-ouia-safe': ouiaSafe,\n        'data-ouia-component-id': id\n    };\n}\n/**\n * Hooks version of the getOUIAProps function that also memoizes the generated ID\n * Can only be used in functional components\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAProps = (componentType, id, ouiaSafe = true, variant) => ({\n    'data-ouia-component-type': `PF4/${componentType}`,\n    'data-ouia-safe': ouiaSafe,\n    'data-ouia-component-id': useOUIAId(componentType, id, variant)\n});\n/**\n * Returns the ID or the memoized generated ID\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAId = (componentType, id, variant) => {\n    if (id !== undefined) {\n        return id;\n    }\n    return useMemo(() => getDefaultOUIAId(componentType, variant), [componentType, variant]);\n};\n/**\n * Returns a generated id based on the URL location\n *\n * @param {string} componentType OUIA component type\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport function getDefaultOUIAId(componentType, variant) {\n    /*\n    ouiaIdByRoute = {\n      [route+componentType]: [number]\n    }\n    */\n    try {\n        let key;\n        if (typeof window !== 'undefined') {\n            // browser environments\n            key = `${window.location.href}-${componentType}-${variant || ''}`;\n        }\n        else {\n            // node/SSR environments\n            key = `${componentType}-${variant || ''}`;\n        }\n        if (!ouiaIdByRoute[key]) {\n            ouiaIdByRoute[key] = 0;\n        }\n        return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++ouiaIdByRoute[key]}`;\n    }\n    catch (exception) {\n        return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++uid}`;\n    }\n}\n//# sourceMappingURL=ouia.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { Fragment } from 'react';\nimport { Toolbar } from '@patternfly/react-core';\nimport { useOUIAId } from '@patternfly/react-core/';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\nimport './TableToolbar.css';\nfunction generateCount(results) {\n    if (results > 1 || results < 1) {\n        return (\"\".concat(results, \" Results\"));\n    }\n    else {\n        return (\"\".concat(results, \" Result\"));\n    }\n}\nvar TableToolbar = function (_a) {\n    var _b;\n    var isFooter = _a.isFooter, results = _a.results, className = _a.className, selected = _a.selected, children = _a.children, ouiaId = _a.ouiaId, _c = _a.ouiaSafe, ouiaSafe = _c === void 0 ? true : _c, props = __rest(_a, [\"isFooter\", \"results\", \"className\", \"selected\", \"children\", \"ouiaId\", \"ouiaSafe\"]);\n    var tableToolbarClasses = classNames('ins-c-table__toolbar', (_b = {}, _b[\"ins-m-footer\"] = isFooter, _b), className);\n    var ouiaComponentType = 'RHI/TableToolbar';\n    var ouiaFinalId = useOUIAId(ouiaComponentType, ouiaId, ouiaSafe);\n    return (React.createElement(Fragment, null,\n        React.createElement(Toolbar, __assign({ className: tableToolbarClasses, \"data-ouia-component-type\": ouiaComponentType, \"data-ouia-component-id\": ouiaFinalId, \"data-ouia-safe\": ouiaSafe }, props), children),\n        (results >= 0 || selected >= 0) &&\n            React.createElement(\"div\", { className: 'ins-c-table__toolbar-results' },\n                results >= 0 &&\n                    React.createElement(\"span\", { className: 'ins-c-table__toolbar-results-count' },\n                        \" \",\n                        generateCount(results),\n                        \" \"),\n                selected >= 0 &&\n                    React.createElement(\"span\", { className: 'ins-c-table__toolbar-results-selected' },\n                        \" \",\n                        selected,\n                        \" Selected \"))));\n};\nexport default TableToolbar;\nTableToolbar.propTypes = {\n    isFooter: propTypes.bool,\n    results: propTypes.number,\n    children: propTypes.any,\n    className: propTypes.string,\n    selected: propTypes.number,\n    ouiaId: propTypes.string,\n    ouiaSafe: propTypes.bool\n};\nTableToolbar.defaultProps = {\n    isFooter: false\n};\n//# sourceMappingURL=TableToolbar.js.map","import { helpers } from '../../common/helpers';\n\n/**\n * Create a consistent mock event object.\n *\n * @param {object} event\n * @param {boolean} persistEvent\n * @returns {{keyCode, currentTarget, name, id: *, persist: Function, value, target}}\n */\nconst createMockEvent = (event, persistEvent = false) => {\n  const { checked, currentTarget = {}, keyCode, persist = helpers.noop, target = {} } = { ...event };\n  if (persistEvent) {\n    persist();\n  }\n\n  return {\n    checked,\n    currentTarget,\n    keyCode,\n    id: currentTarget.id || currentTarget.name,\n    name: currentTarget.name,\n    persist,\n    value: currentTarget.value,\n    target\n  };\n};\n\n/**\n * Confirm a string has minimum length.\n *\n * @param {string} value\n * @param {number} characters\n * @returns {boolean}\n */\nconst doesNotHaveMinimumCharacters = (value, characters = 1) =>\n  (typeof value === 'string' && value.length < characters) || typeof value !== 'string';\n\nconst formHelpers = {\n  createMockEvent,\n  doesNotHaveMinimumCharacters\n};\n\nexport { formHelpers as default, formHelpers, createMockEvent, doesNotHaveMinimumCharacters };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput as PfTextInput } from '@patternfly/react-core';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly TextInput. Provides restructured event data,\n * and an onClear event for the search type.\n *\n * @augments React.Component\n * @fires onKeyUp\n * @fires onMouseUp\n * @fires onChange\n */\nclass TextInput extends React.Component {\n  state = {\n    updatedValue: null\n  };\n\n  /**\n   * onKeyUp event, provide additional functionality for onClear event.\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  onKeyUp = event => {\n    const { onClear, onKeyUp, type } = this.props;\n    const { currentTarget, keyCode } = event;\n    const clonedEvent = { ...event };\n\n    onKeyUp(createMockEvent(event, true));\n\n    if (keyCode === 27) {\n      if (type === 'search' && currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      } else {\n        this.setState({ updatedValue: '' }, () => {\n          onClear(\n            createMockEvent({ ...clonedEvent, ...{ currentTarget: { ...clonedEvent.currentTarget, value: '' } } })\n          );\n        });\n      }\n    }\n  };\n\n  /**\n   * onMouseUp event, provide additional functionality for onClear event.\n   *\n   * @event onMouseUp\n   * @param {object} event\n   */\n  onMouseUp = event => {\n    const { onClear, onMouseUp, type } = this.props;\n    const { currentTarget } = event;\n    const clonedEvent = { ...event };\n\n    onMouseUp(createMockEvent(event, true));\n\n    if (type !== 'search' || currentTarget.value === '') {\n      return;\n    }\n\n    setTimeout(() => {\n      if (currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      }\n    });\n  };\n\n  /**\n   * onChange event, provide restructured event.\n   *\n   * @param {string} value\n   * @param {object} event\n   */\n  onChange = (value, event) => {\n    const { onChange } = this.props;\n    const clonedEvent = { ...event };\n\n    this.setState({ updatedValue: value }, () => {\n      onChange(createMockEvent(clonedEvent));\n    });\n  };\n\n  /**\n   * Render a text input.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedValue } = this.state;\n    const {\n      className,\n      id,\n      isDisabled,\n      name,\n      onChange,\n      onClear,\n      onKeyUp,\n      onMouseUp,\n      isReadOnly,\n      type,\n      value,\n      ...props\n    } = this.props;\n    const updatedName = name || helpers.generateId();\n    const updatedId = id || updatedName;\n\n    return (\n      <PfTextInput\n        id={updatedId}\n        name={updatedName}\n        className={`curiosity-text-input ${className}`}\n        isDisabled={isDisabled || false}\n        onChange={this.onChange}\n        onKeyUp={this.onKeyUp}\n        onMouseUp={this.onMouseUp}\n        isReadOnly={isReadOnly || false}\n        type={type}\n        value={updatedValue ?? value ?? ''}\n        {...props}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onClear: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.defaultProps = {\n  className: '',\n  id: null,\n  isDisabled: false,\n  isReadOnly: false,\n  name: null,\n  onChange: helpers.noop,\n  onClear: helpers.noop,\n  onKeyUp: helpers.noop,\n  onMouseUp: helpers.noop,\n  type: 'text',\n  value: ''\n};\n\nexport { TextInput as default, TextInput };\n","import React from 'react';\nimport { cellWidth as PfCellWidth, SortByDirection, wrappable } from '@patternfly/react-table';\nimport _camelCase from 'lodash/camelCase';\nimport { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { helpers } from '../../common';\n\n/**\n * Apply sort filter to filters.\n *\n * @param {object} params\n * @param {{ onSort: Function, sortActive: boolean, sortDirection: string, isSortDefault: boolean,\n *     sortDefaultInitialDirection: string }} params.filter\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {object}\n */\nconst applySortFilters = ({ filter = {}, onSort, query = {} }) => {\n  const { id, sortId } = filter;\n  const updatedId = sortId || id;\n  const updatedFilter = { ...filter };\n  const hasSort = updatedFilter.onSort || onSort;\n\n  if (!updatedFilter.onSort && onSort) {\n    updatedFilter.onSort = onSort;\n  }\n\n  // set fallback for the active sorted column based on query\n  if (\n    hasSort &&\n    typeof updatedFilter.sortActive !== 'boolean' &&\n    query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    (query?.[RHSM_API_QUERY_TYPES.SORT] === updatedId || _camelCase(query?.[RHSM_API_QUERY_TYPES.SORT]) === updatedId)\n  ) {\n    updatedFilter.sortActive = true;\n  }\n\n  // set sort direction\n  if (hasSort && !updatedFilter.sortDirection && query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n    switch (query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n      case SORT_DIRECTION_TYPES.DESCENDING:\n        updatedFilter.sortDirection = SortByDirection.desc;\n        break;\n      default:\n        updatedFilter.sortDirection = SortByDirection.asc;\n        break;\n    }\n  }\n\n  if (\n    hasSort &&\n    !updatedFilter.sortActive &&\n    !query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    updatedFilter.isSortDefault === true\n  ) {\n    updatedFilter.sortActive = true;\n\n    if (updatedFilter.sortDefaultInitialDirection) {\n      updatedFilter.sortDirection = updatedFilter.sortDefaultInitialDirection;\n    }\n  }\n\n  return updatedFilter;\n};\n\nconst applyWrappableFilters = ({ filter = {} }) => {\n  const updatedFilter = { ...filter };\n\n  if (Array.isArray(updatedFilter.transforms)) {\n    updatedFilter.transforms.push(wrappable);\n  } else {\n    updatedFilter.transforms = [wrappable];\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Apply additional properties to filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {Array}\n */\nconst parseInventoryFilters = ({ filters = [], onSort, query = {} }) =>\n  [...filters].map(filter => {\n    const updatedFilter = { ...filter };\n\n    if (updatedFilter.isSortable) {\n      Object.assign(updatedFilter, applySortFilters({ filter: updatedFilter, onSort, query }));\n    }\n\n    if (updatedFilter.isWrappable) {\n      Object.assign(updatedFilter, applyWrappableFilters({ filter: updatedFilter }));\n    }\n\n    return updatedFilter;\n  });\n\n/**\n * Parse and return formatted/filtered table cells, and apply table filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.cellData\n * @param {object} params.session\n * @returns {{columnHeaders: Array, cells: Array, data: object}}\n */\nconst parseRowCellsListData = ({ filters = [], cellData = {}, session = {} }) => {\n  const updatedColumnHeaders = [];\n  const updatedCells = [];\n  const allCells = {};\n\n  // Apply basic translation and value\n  Object.entries(cellData).forEach(([key, value]) => {\n    allCells[key] = {\n      title: translate('curiosity-inventory.header', { context: key }),\n      value\n    };\n\n    updatedColumnHeaders.push(allCells[key].title);\n    updatedCells.push(value);\n  });\n\n  // Apply filters to header and cell values\n  if (filters?.length) {\n    updatedColumnHeaders.length = 0;\n    updatedCells.length = 0;\n\n    filters.forEach(({ id, cell, cellWidth, header, onSort, sortId, sortActive, sortDirection, transforms }) => {\n      let headerUpdated;\n      let cellUpdated;\n\n      if (allCells[id]) {\n        headerUpdated = allCells[id]?.title ?? id;\n        cellUpdated = allCells[id]?.value ?? '';\n      } else if (id) {\n        headerUpdated = translate('curiosity-inventory.header', { context: id });\n        cellUpdated = '';\n      }\n\n      // set table header cell filter params\n      if (header) {\n        headerUpdated = (typeof header === 'function' && header({ ...allCells })) || header;\n      }\n\n      if (\n        typeof headerUpdated === 'string' ||\n        typeof headerUpdated === 'number' ||\n        React.isValidElement(headerUpdated)\n      ) {\n        headerUpdated = {\n          title: headerUpdated\n        };\n      }\n\n      if (headerUpdated) {\n        headerUpdated.transforms = [];\n\n        if (Array.isArray(transforms)) {\n          headerUpdated.transforms = headerUpdated.transforms.concat([...transforms]);\n        }\n\n        if (typeof cellWidth === 'number') {\n          headerUpdated.transforms.push(PfCellWidth(cellWidth));\n        }\n      }\n\n      if (typeof onSort === 'function') {\n        headerUpdated = {\n          ...headerUpdated,\n          onSort: obj => onSort({ ...allCells }, { ...obj, id: sortId || id }),\n          sortActive,\n          sortDirection\n        };\n      }\n\n      // set table row cell filter params\n      if (cell) {\n        cellUpdated = typeof cell === 'function' ? cell({ ...allCells }, { ...session }) : cell;\n      }\n\n      if (typeof cellUpdated === 'string' || typeof cellUpdated === 'number' || React.isValidElement(cellUpdated)) {\n        cellUpdated = {\n          title: cellUpdated\n        };\n      } else if (!cellUpdated?.title) {\n        if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n          console.error(\n            `PF table throws an error when cell values don't conform to what it is expecting, or align exactly to column headers.\n            \\n\\nSee cell ID=${id} with VALUE=${cellUpdated}`\n          );\n        }\n\n        cellUpdated = {\n          title: ''\n        };\n      }\n\n      updatedColumnHeaders.push(headerUpdated);\n      updatedCells.push(cellUpdated);\n    });\n  }\n\n  return {\n    columnHeaders: updatedColumnHeaders,\n    cells: updatedCells,\n    data: { ...allCells }\n  };\n};\n\nconst inventoryCardHelpers = {\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n\nexport {\n  inventoryCardHelpers as default,\n  inventoryCardHelpers,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n","/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup } from '@patternfly/react-core';\nimport _debounce from 'lodash/debounce';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport { TextInput } from '../form/textInput';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: evaluate the debounce milliseconds, currently based off platforms default 800 ms\n */\n/**\n * Display a display name input field for search.\n *\n * @fires onSubmit\n * @fires onClear\n * @fires onKeyUp\n * @param {object} props\n * @param {Function} props.t\n * @param {Function} props.useDispatch\n * @param {Function} props.useProduct\n * @param {Function} props.useProductInventoryHostsQuery\n * @returns {Node}\n */\nconst ToolbarFieldDisplayName = ({\n  t,\n  useDispatch: useAliasDispatch,\n  useProduct: useAliasProduct,\n  useProductInventoryHostsQuery: useAliasProductInventoryHostsQuery\n}) => {\n  const { viewId } = useAliasProduct();\n  const { [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: currentValue } = useAliasProductInventoryHostsQuery();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On submit, dispatch type.\n   *\n   * @event onSubmit\n   * @param {string} submitValue\n   * @returns {void}\n   */\n  const onSubmit = submitValue =>\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: submitValue?.trim() || null\n      }\n    ]);\n\n  /**\n   * On clear, dispatch type.\n   *\n   * @event onClear\n   * @returns {void}\n   */\n  const onClear = () => {\n    if (currentValue === '' || !currentValue) {\n      return;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: null\n      }\n    ]);\n  };\n\n  /**\n   * Set up submit debounce event to allow for bypass.\n   */\n  const debounced = _debounce(onSubmit, 700);\n\n  /**\n   * On enter submit value, on type submit value, and on esc ignore (clear value at component level).\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case 13:\n        onSubmit(event.value);\n        break;\n      case 27:\n        break;\n      default:\n        debounced(event.value);\n        break;\n    }\n  };\n\n  return (\n    <InputGroup>\n      <TextInput\n        aria-label={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        className=\"curiosity-input__display-name\"\n        iconVariant=\"search\"\n        maxLength={255}\n        onClear={onClear}\n        onKeyUp={onKeyUp}\n        value={currentValue}\n        placeholder={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        data-test=\"toolbarFieldDisplayName\"\n      />\n    </InputGroup>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.propTypes = {\n  t: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductInventoryHostsQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.defaultProps = {\n  t: translate,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useProduct,\n  useProductInventoryHostsQuery\n};\n\nexport { ToolbarFieldDisplayName as default, ToolbarFieldDisplayName };\n"],"names":["uid","ouiaPrefix","ouiaIdByRoute","getOUIAProps","componentType","id","ouiaSafe","useOUIAProps","variant","useOUIAId","undefined","useMemo","getDefaultOUIAId","key","window","location","href","exception","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","TableToolbar","_a","_b","isFooter","results","className","selected","children","ouiaId","_c","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","tableToolbarClasses","ouiaComponentType","ouiaFinalId","Fragment","Toolbar","concat","generateCount","propTypes","defaultProps","createMockEvent","event","persistEvent","checked","currentTarget","keyCode","persist","helpers","target","name","value","doesNotHaveMinimumCharacters","characters","formHelpers","TextInput","state","updatedValue","onKeyUp","onClear","type","clonedEvent","setState","onMouseUp","setTimeout","onChange","isDisabled","isReadOnly","updatedName","updatedId","React","applySortFilters","filter","onSort","query","sortId","updatedFilter","hasSort","sortActive","RHSM_API_QUERY_TYPES","_camelCase","sortDirection","SORT_DIRECTION_TYPES","SortByDirection","isSortDefault","sortDefaultInitialDirection","applyWrappableFilters","Array","isArray","transforms","push","wrappable","parseInventoryFilters","filters","map","isSortable","isWrappable","parseRowCellsListData","cellData","session","updatedColumnHeaders","updatedCells","allCells","entries","forEach","title","translate","context","headerUpdated","cellUpdated","cell","cellWidth","header","PfCellWidth","obj","console","error","columnHeaders","cells","data","inventoryCardHelpers","Pagination","dropDirection","isCompact","itemCount","offset","onPage","onPerPage","perPage","onSetPage","page","limit","paginationHelpers","onPerPageSelect","calculateOffsetFromPage","calculatePageFromOffset","isLastPage","Math","ceil","ToolbarFieldDisplayName","useAliasDispatch","useDispatch","useAliasProduct","useProduct","useAliasProductInventoryHostsQuery","useProductInventoryHostsQuery","viewId","currentValue","dispatch","onSubmit","submitValue","reduxTypes","trim","debounced","_debounce","InputGroup","iconVariant","maxLength","placeholder","storeHooks"],"sourceRoot":""}
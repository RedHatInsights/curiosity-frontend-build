{"version":3,"file":"js/6696.705e4b18e0a3e0fdee04.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/TableToolbar/TableToolbar.js","webpack:///./src/components/inventoryCard/inventoryCard.js","webpack:///./src/components/inventoryCardSubscriptions/inventoryCardSubscriptions.js","webpack:///./src/components/inventoryCardSubscriptions/inventoryCardSubscriptionsContext.js","webpack:///./src/components/pagination/pagination.js","webpack:///./src/components/pagination/paginationHelpers.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment } from 'react';\nimport { Toolbar, useOUIAId } from '@patternfly/react-core';\nimport classNames from 'classnames';\nimport '../TableToolbar/TableToolbar.css';\nfunction generateCount(results) {\n    if (results > 1 || results < 1) {\n        return \"\".concat(results, \" Results\");\n    }\n    else {\n        return \"\".concat(results, \" Result\");\n    }\n}\nvar TableToolbar = function (_a) {\n    var _b;\n    var _c = _a.isFooter, isFooter = _c === void 0 ? false : _c, results = _a.results, className = _a.className, selected = _a.selected, children = _a.children, ouiaId = _a.ouiaId, _d = _a.ouiaSafe, ouiaSafe = _d === void 0 ? true : _d, props = __rest(_a, [\"isFooter\", \"results\", \"className\", \"selected\", \"children\", \"ouiaId\", \"ouiaSafe\"]);\n    var tableToolbarClasses = classNames('ins-c-table__toolbar', (_b = {}, _b[\"ins-m-footer\"] = isFooter, _b), className);\n    var ouiaComponentType = 'RHI/TableToolbar';\n    var ouiaFinalId = useOUIAId(ouiaComponentType, ouiaId, ouiaSafe);\n    return (_jsxs(Fragment, { children: [_jsx(Toolbar, __assign({ className: tableToolbarClasses, \"data-ouia-component-type\": ouiaComponentType, \"data-ouia-component-id\": ouiaFinalId, \"data-ouia-safe\": ouiaSafe }, props, { children: children })), ((results && results >= 0) || (selected && selected >= 0)) && (_jsxs(\"div\", __assign({ className: \"ins-c-table__toolbar-results\" }, { children: [results && results >= 0 && _jsxs(\"span\", __assign({ className: \"ins-c-table__toolbar-results-count\" }, { children: [\" \", generateCount(results), \" \"] })), selected && selected >= 0 && _jsxs(\"span\", __assign({ className: \"ins-c-table__toolbar-results-selected\" }, { children: [\" \", selected, \" Selected \"] }))] })))] }));\n};\nexport default TableToolbar;\n//# sourceMappingURL=TableToolbar.js.map","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport {\n  Bullseye,\n  Card,\n  CardActions,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup\n} from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Table } from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { Pagination } from '../pagination/pagination';\nimport { translate } from '../i18n/i18n';\nimport { helpers } from '../../common';\n\n/**\n * Base inventory table card.\n *\n *     The InventoryCard pattern is purposefully different when compared to the current GraphCard component\n *     for the specific purpose of using hook dependency injection. Minor lifecycle hook alterations\n *     allow the InventoryCard to be used against multiple inventory API endpoints without the need to\n *     recreate the core component.\n *\n * @memberof Components\n * @module InventoryCard\n * @property {module} InventoryCardHelpers\n */\n\n/**\n * Set up inventory cards. Expand filters with base settings.\n *\n * @param {object} props\n * @param {boolean} props.isDisabled\n * @param {Function} props.t\n * @param {Function} props.useGetInventory\n * @param {Function} props.useInventoryCardActions\n * @param {Function} props.useParseFiltersSettings\n * @param {Function} props.useOnPage\n * @param {Function} props.useOnColumnSort\n * @fires onColumnSort\n * @fires onPage\n * @returns {React.ReactNode}\n */\nconst InventoryCard = ({\n  isDisabled,\n  t,\n  useGetInventory: useAliasGetInventory,\n  useInventoryCardActions: useAliasInventoryCardActions,\n  useOnPage: useAliasOnPage,\n  useOnColumnSort: useAliasOnColumnSort,\n  useParseFiltersSettings: useAliasParseFiltersSettings\n}) => {\n  const updatedActionDisplay = useAliasInventoryCardActions();\n  const onPage = useAliasOnPage();\n  const onColumnSort = useAliasOnColumnSort();\n  const { filters } = useAliasParseFiltersSettings({ isDisabled });\n  const {\n    error,\n    pending,\n    dataSetColumnHeaders = [],\n    dataSetRows = [],\n    resultsColumnCountAndWidths = { count: 1, widths: [] },\n    resultsCount,\n    resultsOffset,\n    resultsPerPage\n  } = useAliasGetInventory({ isDisabled });\n\n  if (isDisabled || !filters?.length) {\n    return (\n      <Card className=\"curiosity-inventory-card__disabled\">\n        <CardBody>\n          <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n        </CardBody>\n      </Card>\n    );\n  }\n\n  const tableClassName = 'curiosity-inventory-list';\n\n  const tableAriaLabel = translate('curiosity-inventory.table', {\n    context: ['ariaLabel'],\n    appName: helpers.UI_DISPLAY_NAME\n  });\n\n  const tableSummary = translate('curiosity-inventory.table', {\n    context: ['summary']\n  });\n\n  return (\n    <Card className=\"curiosity-inventory-card\">\n      <MinHeight key=\"headerMinHeight\">\n        <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n          <CardActions>\n            <Toolbar collapseListedFiltersBreakpoint=\"sm\">\n              <ToolbarContent>\n                {updatedActionDisplay && (\n                  <ToolbarGroup key=\"inventory-actions\" alignment={{ default: 'alignLeft' }}>\n                    {updatedActionDisplay}\n                  </ToolbarGroup>\n                )}\n                <ToolbarGroup\n                  key=\"inventory-paging\"\n                  alignment={{ default: 'alignRight' }}\n                  className={(!resultsCount && 'transparent') || ''}\n                  aria-hidden={!resultsCount || false}\n                >\n                  <Pagination\n                    isCompact\n                    isDisabled={pending || error}\n                    itemCount={resultsCount}\n                    offset={resultsOffset}\n                    onPage={onPage}\n                    onPerPage={onPage}\n                    perPage={resultsPerPage}\n                  />\n                </ToolbarGroup>\n              </ToolbarContent>\n            </Toolbar>\n          </CardActions>\n        </CardHeader>\n      </MinHeight>\n      <MinHeight key=\"bodyMinHeight\">\n        <CardBody>\n          <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n            {pending && (\n              <Loader\n                variant=\"table\"\n                tableProps={{\n                  ariaLabel: tableAriaLabel,\n                  className: tableClassName,\n                  colCount: resultsColumnCountAndWidths.count,\n                  colWidth: resultsColumnCountAndWidths.widths,\n                  rowCount: dataSetRows?.length || resultsPerPage,\n                  summary: tableSummary,\n                  variant: TableVariant.compact,\n                  isHeader: true\n                }}\n              />\n            )}\n            {!pending && (\n              <Table\n                key=\"inventory-table\"\n                ariaLabel={tableAriaLabel}\n                className={tableClassName}\n                emptyTable={{\n                  ariaLabel: tableAriaLabel,\n                  className: tableClassName,\n                  summary: tableSummary,\n                  title: translate('curiosity-inventory.table', { context: ['emptyState', 'title'] }),\n                  message: translate('curiosity-inventory.table', { context: ['emptyState', 'description'] })\n                }}\n                isBorders\n                isHeader\n                onSort={onColumnSort}\n                columnHeaders={dataSetColumnHeaders}\n                rows={dataSetRows}\n                summary={tableSummary}\n              />\n            )}\n          </div>\n        </CardBody>\n      </MinHeight>\n      <MinHeight key=\"footerMinHeight\">\n        <CardFooter\n          className={(error && 'hidden') || (!resultsCount && 'transparent') || ''}\n          aria-hidden={error || !resultsCount || false}\n        >\n          <TableToolbar isFooter>\n            <Pagination\n              dropDirection=\"up\"\n              isDisabled={pending || error}\n              itemCount={resultsCount}\n              offset={resultsOffset}\n              onPage={onPage}\n              onPerPage={onPage}\n              perPage={resultsPerPage}\n            />\n          </TableToolbar>\n        </CardFooter>\n      </MinHeight>\n    </Card>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useOnPage: Function, useParseFiltersSettings: Function, t: Function, useInventoryCardActions: Function,\n *     isDisabled: boolean, useGetInventory: Function, useOnColumnSort: Function}}\n */\nInventoryCard.propTypes = {\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  useGetInventory: PropTypes.func.isRequired,\n  useInventoryCardActions: PropTypes.func.isRequired,\n  useOnPage: PropTypes.func.isRequired,\n  useOnColumnSort: PropTypes.func.isRequired,\n  useParseFiltersSettings: PropTypes.func.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, isDisabled: boolean}}\n */\nInventoryCard.defaultProps = {\n  isDisabled: false,\n  t: translate\n};\n\nexport { InventoryCard as default, InventoryCard };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  useGetSubscriptionsInventory,\n  useInventoryCardActionsSubscriptions,\n  useOnPageSubscriptions,\n  useOnColumnSortSubscriptions,\n  useParseSubscriptionsFiltersSettings\n} from './inventoryCardSubscriptionsContext';\nimport { InventoryCard } from '../inventoryCard/inventoryCard';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18nHelpers';\n\n/**\n * @memberof Components\n * @module InventoryCardSubscriptions\n * @property {module} InventoryCardSubscriptionsContext\n */\n\n/**\n * A subscriptions' system inventory component.\n *\n * @param {object} props\n * @param {boolean} props.isDisabled\n * @param {Function} props.useGetInventory\n * @param {Function} props.useOnPage\n * @param {Function} props.useOnColumnSort\n * @param {Function} props.useProductInventoryConfig\n * @param {Function} props.useProductInventoryQuery\n * @fires onColumnSort\n * @fires onPage\n * @returns {React.ReactNode}\n */\nconst InventoryCardSubscriptions = ({ ...props }) => <InventoryCard {...props} />;\n\n/**\n * Prop types.\n *\n * @type {{useOnPage: Function, useParseFiltersSettings: Function, t: Function, useInventoryCardActions: Function,\n *     isDisabled: boolean, useGetInventory: Function, useOnColumnSort: Function}}\n */\nInventoryCardSubscriptions.propTypes = {\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  useGetInventory: PropTypes.func,\n  useInventoryCardActions: PropTypes.func,\n  useOnPage: PropTypes.func,\n  useOnColumnSort: PropTypes.func,\n  useParseFiltersSettings: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useOnPage: Function, useParseFiltersSettings: Function, t: translate, useInventoryCardActions: Function,\n *     isDisabled: boolean, useGetInventory: Function, useOnColumnSort: Function}}\n */\nInventoryCardSubscriptions.defaultProps = {\n  isDisabled: helpers.UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  t: translate,\n  useGetInventory: useGetSubscriptionsInventory,\n  useInventoryCardActions: useInventoryCardActionsSubscriptions,\n  useOnPage: useOnPageSubscriptions,\n  useOnColumnSort: useOnColumnSortSubscriptions,\n  useParseFiltersSettings: useParseSubscriptionsFiltersSettings\n};\n\nexport { InventoryCardSubscriptions as default, InventoryCardSubscriptions };\n","import { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport {\n  useProduct,\n  useProductInventorySubscriptionsConfig,\n  useProductInventorySubscriptionsQuery\n} from '../productView/productViewContext';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\nimport {\n  useGetInstancesInventory,\n  useInventoryCardActionsInstances,\n  useParseInstancesFiltersSettings,\n  useSelectorInstances\n} from '../inventoryCardInstances/inventoryCardInstancesContext';\nimport { tableHelpers } from '../table/table';\n\n/**\n * @memberof InventoryCardSubscriptions\n * @module InventoryCardSubscriptionsContext\n */\n\n/**\n * Parse filters settings for context.\n * See @module InventoryCardInstancesContext\n *\n * @param {object} options\n * @param {boolean} options.isDisabled\n * @param {Function} options.useParseFiltersSettings\n * @param {Function} options.useProductConfig\n * @returns {{settings: {}, columnCountAndWidths: {count: number, widths: Array}, filters: Array}}\n */\nconst useParseSubscriptionsFiltersSettings = ({\n  isDisabled = false,\n  useParseFiltersSettings: useAliasParseFiltersSettings = useParseInstancesFiltersSettings,\n  useProductConfig: useAliasProductConfig = useProductInventorySubscriptionsConfig\n} = {}) =>\n  useAliasParseFiltersSettings({\n    isDisabled,\n    useProductConfig: useAliasProductConfig\n  });\n\n/**\n * Parse selector response for consuming components.\n * See @module InventoryCardInstancesContext\n *\n * @param {object} options\n * @param {string} options.storeRef\n * @param {Function} options.useParseFiltersSettings\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelector\n * @returns {{pending: boolean, fulfilled: boolean, error: boolean, resultsColumnCountAndWidths: {count: number,\n *     widths: Array}, dataSetColumnHeaders: Array, resultsPerPage: number, resultsOffset: number, dataSetRows: Array,\n *     resultsCount: number}}\n */\nconst useSelectorSubscriptions = ({\n  storeRef = 'subscriptionsInventory',\n  useParseFiltersSettings: useAliasParseFiltersSettings = useParseSubscriptionsFiltersSettings,\n  useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventorySubscriptionsQuery,\n  useSelector: useAliasSelector = useSelectorInstances\n} = {}) =>\n  useAliasSelector({\n    storeRef,\n    useParseFiltersSettings: useAliasParseFiltersSettings,\n    useProductInventoryQuery: useAliasProductInventoryQuery\n  });\n\n/**\n * Combine service call, Redux, and inventory selector response.\n * See @module InventoryCardInstancesContext\n *\n * @param {object} options\n * @param {boolean} options.isDisabled\n * @param {Function} options.getInventory\n * @param {Function} options.useGetInventory\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelector\n * @returns {{pending: boolean, fulfilled: boolean, error: boolean, resultsColumnCountAndWidths: {count: number,\n *     widths: Array}, dataSetColumnHeaders: Array, resultsPerPage: number, resultsOffset: number, dataSetRows: Array,\n *     resultsCount: number}}\n */\nconst useGetSubscriptionsInventory = ({\n  isDisabled = false,\n  getInventory = reduxActions.rhsm.getSubscriptionsInventory,\n  useGetInventory: useAliasGetInventory = useGetInstancesInventory,\n  useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventorySubscriptionsQuery,\n  useSelector: useAliasSelector = useSelectorSubscriptions\n} = {}) =>\n  useAliasGetInventory({\n    isDisabled,\n    getInventory,\n    useProductInventoryQuery: useAliasProductInventoryQuery,\n    useSelector: useAliasSelector\n  });\n\n/**\n * Return a component list for a configurable inventoryCard action toolbar.\n * Allow the \"content\" prop to receive inventory data for display via callback.\n * See @module InventoryCardInstancesContext\n *\n * @param {object} options\n * @param {Function} options.useInventoryCardActions\n * @param {Function} options.useSelector\n * @param {Function} options.useProductConfig\n * @returns {Array}\n */\nconst useInventoryCardActionsSubscriptions = ({\n  useInventoryCardActions: useAliasInventoryCardActions = useInventoryCardActionsInstances,\n  useSelector: useAliasSelector = useSelectorSubscriptions,\n  useProductConfig: useAliasProductConfig = useProductInventorySubscriptionsConfig\n} = {}) => useAliasInventoryCardActions({ useSelector: useAliasSelector, useProductConfig: useAliasProductConfig });\n\n/**\n * An onPage callback for inventory.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnPageSubscriptions = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for inventory.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   * @returns {void}\n   */\n  return ({ offset, perPage }) => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n};\n\n/**\n * An onColumnSort callback for inventory.\n *\n * @param {object} options\n * @param {object} options.sortColumns\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnColumnSortSubscriptions = ({\n  sortColumns = SORT_TYPES,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for inventory.\n   *\n   * @event onColumnSort\n   * @param {object} params\n   * @param {string} params.direction\n   * @param {object} params.data\n   * @returns {void}\n   */\n  return ({ direction, data = {} }) => {\n    const { metric: id } = data;\n    const updatedSortColumn = Object.values(sortColumns).find(value => value === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case tableHelpers.SortByDirectionVariant.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n};\n\nconst context = {\n  useGetSubscriptionsInventory,\n  useInventoryCardActionsSubscriptions,\n  useOnPageSubscriptions,\n  useOnColumnSortSubscriptions,\n  useParseSubscriptionsFiltersSettings,\n  useSelectorSubscriptions\n};\n\nexport {\n  context as default,\n  context,\n  useGetSubscriptionsInventory,\n  useInventoryCardActionsSubscriptions,\n  useOnPageSubscriptions,\n  useOnColumnSortSubscriptions,\n  useParseSubscriptionsFiltersSettings,\n  useSelectorSubscriptions\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * Inventory paging.\n *\n * @memberof Components\n * @module Pagination\n * @property {module} PaginationHelpers\n */\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {React.ReactNode}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n","/**\n * @memberof Pagination\n * @module PaginationHelpers\n */\n\n/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","generateCount","results","concat","_a","_b","_c","isFooter","className","selected","children","ouiaId","_d","ouiaSafe","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","tableToolbarClasses","ouiaComponentType","ouiaFinalId","useOUIAId","Fragment","Toolbar","InventoryCard","_ref","isDisabled","useGetInventory","useAliasGetInventory","useInventoryCardActions","useAliasInventoryCardActions","useOnPage","useAliasOnPage","useOnColumnSort","useAliasOnColumnSort","useParseFiltersSettings","useAliasParseFiltersSettings","updatedActionDisplay","onPage","onColumnSort","filters","error","pending","dataSetColumnHeaders","dataSetRows","resultsColumnCountAndWidths","count","widths","resultsCount","resultsOffset","resultsPerPage","React","Card","CardBody","Bullseye","context","tableClassName","tableAriaLabel","translate","appName","helpers","tableSummary","MinHeight","key","CardHeader","CardActions","collapseListedFiltersBreakpoint","ToolbarContent","ToolbarGroup","alignment","default","Pagination","isCompact","itemCount","offset","onPerPage","perPage","Loader","variant","tableProps","ariaLabel","colCount","colWidth","rowCount","summary","TableVariant","isHeader","Table","emptyTable","title","message","isBorders","onSort","columnHeaders","rows","CardFooter","TableToolbar","dropDirection","propTypes","PropTypes","defaultProps","InventoryCardSubscriptions","useGetSubscriptionsInventory","useInventoryCardActionsSubscriptions","useOnPageSubscriptions","useOnColumnSortSubscriptions","useParseSubscriptionsFiltersSettings","useParseInstancesFiltersSettings","useProductConfig","useAliasProductConfig","useProductInventorySubscriptionsConfig","undefined","useSelectorSubscriptions","storeRef","useProductInventoryQuery","useAliasProductInventoryQuery","useProductInventorySubscriptionsQuery","useSelector","useAliasSelector","useSelectorInstances","getInventory","reduxActions","useGetInstancesInventory","useInventoryCardActionsInstances","useDispatch","useAliasDispatch","storeHooks","useProduct","useAliasProduct","productId","dispatch","type","reduxTypes","RHSM_API_QUERY_SET_TYPES","viewId","sortColumns","SORT_TYPES","_ref2","direction","data","metric","id","updatedSortColumn","values","find","value","updatedDirection","tableHelpers","SORT_DIRECTION_TYPES","console","warn","PfPagination","onSetPage","event","page","limit","paginationHelpers","onPerPageSelect","calculateOffsetFromPage","calculatePageFromOffset","isLastPage","Math","ceil"],"sourceRoot":""}
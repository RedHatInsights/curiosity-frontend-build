{"version":3,"file":"js/1001.1643133385890.308e73071abdbf78f55e.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/OUIA/ouia.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/TableToolbar/TableToolbar.js","webpack:///./src/components/form/formHelpers.js","webpack:///./src/components/form/textInput.js","webpack:///./src/components/inventoryList/inventoryList.deprecated.js","webpack:///./src/components/pagination/pagination.js","webpack:///./src/components/pagination/paginationHelpers.js","webpack:///./src/components/toolbar/toolbarFieldDisplayName.js"],"sourcesContent":["import { useMemo } from 'react';\nlet uid = 0;\nconst ouiaPrefix = 'OUIA-Generated-';\nconst ouiaIdByRoute = {};\n/** Get props to conform to OUIA spec\n *\n * For functional components, use the useOUIAProps function instead\n *\n * In class based components, create a state variable ouiaStateId to create a static generated ID:\n * state = {\n *  ouiaStateId: getDefaultOUIAId(Chip.displayName)\n * }\n * This generated ID should remain alive as long as the component is not unmounted.\n *\n * Then add the attributes to the component\n * {...getOUIAProps('OverflowChip', this.props.ouiaId !== undefined ? this.props.ouiaId : this.state.ouiaStateId)}\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n */\nexport function getOUIAProps(componentType, id, ouiaSafe = true) {\n    return {\n        'data-ouia-component-type': `PF4/${componentType}`,\n        'data-ouia-safe': ouiaSafe,\n        'data-ouia-component-id': id\n    };\n}\n/**\n * Hooks version of the getOUIAProps function that also memoizes the generated ID\n * Can only be used in functional components\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAProps = (componentType, id, ouiaSafe = true, variant) => ({\n    'data-ouia-component-type': `PF4/${componentType}`,\n    'data-ouia-safe': ouiaSafe,\n    'data-ouia-component-id': useOUIAId(componentType, id, variant)\n});\n/**\n * Returns the ID or the memoized generated ID\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAId = (componentType, id, variant) => {\n    if (id !== undefined) {\n        return id;\n    }\n    return useMemo(() => getDefaultOUIAId(componentType, variant), [componentType, variant]);\n};\n/**\n * Returns a generated id based on the URL location\n *\n * @param {string} componentType OUIA component type\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport function getDefaultOUIAId(componentType, variant) {\n    /*\n    ouiaIdByRoute = {\n      [route+componentType]: [number]\n    }\n    */\n    try {\n        let key;\n        if (typeof window !== 'undefined') {\n            // browser environments\n            key = `${window.location.href}-${componentType}-${variant || ''}`;\n        }\n        else {\n            // node/SSR environments\n            key = `${componentType}-${variant || ''}`;\n        }\n        if (!ouiaIdByRoute[key]) {\n            ouiaIdByRoute[key] = 0;\n        }\n        return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++ouiaIdByRoute[key]}`;\n    }\n    catch (exception) {\n        return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++uid}`;\n    }\n}\n//# sourceMappingURL=ouia.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { Fragment } from 'react';\nimport { Toolbar } from '@patternfly/react-core';\nimport { useOUIAId } from '@patternfly/react-core/';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\nimport './TableToolbar.css';\nfunction generateCount(results) {\n    if (results > 1 || results < 1) {\n        return (\"\".concat(results, \" Results\"));\n    }\n    else {\n        return (\"\".concat(results, \" Result\"));\n    }\n}\nvar TableToolbar = function (_a) {\n    var _b;\n    var isFooter = _a.isFooter, results = _a.results, className = _a.className, selected = _a.selected, children = _a.children, ouiaId = _a.ouiaId, _c = _a.ouiaSafe, ouiaSafe = _c === void 0 ? true : _c, props = __rest(_a, [\"isFooter\", \"results\", \"className\", \"selected\", \"children\", \"ouiaId\", \"ouiaSafe\"]);\n    var tableToolbarClasses = classNames('ins-c-table__toolbar', (_b = {}, _b[\"ins-m-footer\"] = isFooter, _b), className);\n    var ouiaComponentType = 'RHI/TableToolbar';\n    var ouiaFinalId = useOUIAId(ouiaComponentType, ouiaId, ouiaSafe);\n    return (React.createElement(Fragment, null,\n        React.createElement(Toolbar, __assign({ className: tableToolbarClasses, \"data-ouia-component-type\": ouiaComponentType, \"data-ouia-component-id\": ouiaFinalId, \"data-ouia-safe\": ouiaSafe }, props), children),\n        (results >= 0 || selected >= 0) &&\n            React.createElement(\"div\", { className: 'ins-c-table__toolbar-results' },\n                results >= 0 &&\n                    React.createElement(\"span\", { className: 'ins-c-table__toolbar-results-count' },\n                        \" \",\n                        generateCount(results),\n                        \" \"),\n                selected >= 0 &&\n                    React.createElement(\"span\", { className: 'ins-c-table__toolbar-results-selected' },\n                        \" \",\n                        selected,\n                        \" Selected \"))));\n};\nexport default TableToolbar;\nTableToolbar.propTypes = {\n    isFooter: propTypes.bool,\n    results: propTypes.number,\n    children: propTypes.any,\n    className: propTypes.string,\n    selected: propTypes.number,\n    ouiaId: propTypes.string,\n    ouiaSafe: propTypes.bool\n};\nTableToolbar.defaultProps = {\n    isFooter: false\n};\n//# sourceMappingURL=TableToolbar.js.map","import { helpers } from '../../common/helpers';\n\n/**\n * Create a consistent mock event object.\n *\n * @param {object} event\n * @param {boolean} persistEvent\n * @returns {{keyCode, currentTarget, name, id: *, persist: Function, value, target}}\n */\nconst createMockEvent = (event, persistEvent = false) => {\n  const { checked, currentTarget = {}, keyCode, persist = helpers.noop, target = {} } = { ...event };\n  if (persistEvent) {\n    persist();\n  }\n\n  return {\n    checked,\n    currentTarget,\n    keyCode,\n    id: currentTarget.id || currentTarget.name,\n    name: currentTarget.name,\n    persist,\n    value: currentTarget.value,\n    target\n  };\n};\n\n/**\n * Confirm a string has minimum length.\n *\n * @param {string} value\n * @param {number} characters\n * @returns {boolean}\n */\nconst doesNotHaveMinimumCharacters = (value, characters = 1) =>\n  (typeof value === 'string' && value.length < characters) || typeof value !== 'string';\n\nconst formHelpers = {\n  createMockEvent,\n  doesNotHaveMinimumCharacters\n};\n\nexport { formHelpers as default, formHelpers, createMockEvent, doesNotHaveMinimumCharacters };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput as PfTextInput } from '@patternfly/react-core';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly TextInput. Provides restructured event data,\n * and an onClear event for the search type.\n *\n * @augments React.Component\n * @fires onKeyUp\n * @fires onMouseUp\n * @fires onChange\n */\nclass TextInput extends React.Component {\n  state = {\n    updatedValue: null\n  };\n\n  /**\n   * onKeyUp event, provide additional functionality for onClear event.\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  onKeyUp = event => {\n    const { onClear, onKeyUp, type } = this.props;\n    const { currentTarget, keyCode } = event;\n    const clonedEvent = { ...event };\n\n    onKeyUp(createMockEvent(event, true));\n\n    if (keyCode === 27) {\n      if (type === 'search' && currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      } else {\n        this.setState({ updatedValue: '' }, () => {\n          onClear(\n            createMockEvent({ ...clonedEvent, ...{ currentTarget: { ...clonedEvent.currentTarget, value: '' } } })\n          );\n        });\n      }\n    }\n  };\n\n  /**\n   * onMouseUp event, provide additional functionality for onClear event.\n   *\n   * @event onMouseUp\n   * @param {object} event\n   */\n  onMouseUp = event => {\n    const { onClear, onMouseUp, type } = this.props;\n    const { currentTarget } = event;\n    const clonedEvent = { ...event };\n\n    onMouseUp(createMockEvent(event, true));\n\n    if (type !== 'search' || currentTarget.value === '') {\n      return;\n    }\n\n    setTimeout(() => {\n      if (currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      }\n    });\n  };\n\n  /**\n   * onChange event, provide restructured event.\n   *\n   * @param {string} value\n   * @param {object} event\n   */\n  onChange = (value, event) => {\n    const { onChange } = this.props;\n    const clonedEvent = { ...event };\n\n    this.setState({ updatedValue: value }, () => {\n      onChange(createMockEvent(clonedEvent));\n    });\n  };\n\n  /**\n   * Render a text input.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedValue } = this.state;\n    const {\n      className,\n      id,\n      isDisabled,\n      name,\n      onChange,\n      onClear,\n      onKeyUp,\n      onMouseUp,\n      isReadOnly,\n      type,\n      value,\n      ...props\n    } = this.props;\n    const updatedName = name || helpers.generateId();\n    const updatedId = id || updatedName;\n\n    return (\n      <PfTextInput\n        id={updatedId}\n        name={updatedName}\n        className={`curiosity-text-input ${className}`}\n        isDisabled={isDisabled || false}\n        onChange={this.onChange}\n        onKeyUp={this.onKeyUp}\n        onMouseUp={this.onMouseUp}\n        isReadOnly={isReadOnly || false}\n        type={type}\n        value={updatedValue ?? value ?? ''}\n        {...props}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onClear: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.defaultProps = {\n  className: '',\n  id: null,\n  isDisabled: false,\n  isReadOnly: false,\n  name: null,\n  onChange: helpers.noop,\n  onClear: helpers.noop,\n  onKeyUp: helpers.noop,\n  onMouseUp: helpers.noop,\n  type: 'text',\n  value: ''\n};\n\nexport { TextInput as default, TextInput };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader, CardHeaderMain } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport GuestsList from '../guestsList/guestsList';\nimport { inventoryListHelpers } from './inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport { ToolbarFieldDisplayName } from '../toolbar/toolbarFieldDisplayName';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A hosts system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n */\nclass InventoryList extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * On paging and on perPage events.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   */\n  onPage = ({ offset, perPage }) => {\n    const { productId } = this.props;\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getHostsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getHostsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterGuestsData, filterInventoryData, listData, query, session, settings } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      const guestsId = cellData?.subscriptionManagerId;\n      let hasGuests = cellData?.numberOfGuests > 0 && guestsId;\n\n      // Apply hasGuests callback, return boolean\n      if (typeof settings?.hasGuests === 'function') {\n        hasGuests = settings.hasGuests({ ...cellData }, { ...session });\n      }\n\n      return {\n        cells,\n        expandedContent:\n          (hasGuests && (\n            <GuestsList\n              key={guestsId}\n              filterGuestsData={filterGuestsData}\n              numberOfGuests={cellData?.numberOfGuests}\n              id={guestsId}\n              query={query}\n            />\n          )) ||\n          undefined\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      query,\n      t,\n      viewId\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedOffset = query[RHSM_API_QUERY_TYPES.OFFSET];\n    const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n            <CardHeaderMain>\n              <ToolbarFieldDisplayName viewId={viewId} />\n            </CardHeaderMain>\n            <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter\n            className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n            aria-hidden={error || !itemCount || false}\n          >\n            <TableToolbar isFooter>\n              <Pagination\n                dropDirection=\"up\"\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{settings:object, productId: string, listData: Array, session: object, pending: boolean,\n *     query: object, fulfilled: boolean, getHostsInventory: Function, error: boolean,\n *     itemCount: number, viewId: string, t: Function, filterInventoryData: Array, filterGuestsData: Array,\n *     perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterGuestsData: PropTypes.array,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  settings: PropTypes.shape({\n    hasGuests: PropTypes.func\n  }),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{settings: object, listData: Array, session: object, pending: boolean, fulfilled: boolean,\n *     getHostsInventory: Function, error: boolean, itemCount: number, viewId: string, t: translate,\n *     filterInventoryData: Array, filterGuestsData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterGuestsData: [],\n  filterInventoryData: [],\n  getHostsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_HOSTS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  settings: {},\n  t: translate,\n  viewId: 'inventoryList'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventory: (id, query) => dispatch(reduxActions.rhsm.getHostsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.inventoryList.makeInventoryList();\n\nconst ConnectedInventoryList = connect(makeMapStateToProps, mapDispatchToProps)(InventoryList);\n\nexport { ConnectedInventoryList as default, ConnectedInventoryList, InventoryList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n","/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup } from '@patternfly/react-core';\nimport _debounce from 'lodash/debounce';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport { TextInput } from '../form/textInput';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: evaluate the debounce milliseconds, currently based off platforms default 800 ms\n */\n/**\n * Display a display name input field for search.\n *\n * @fires onSubmit\n * @fires onClear\n * @fires onKeyUp\n * @param {object} props\n * @param {Function} props.t\n * @param {Function} props.useDispatch\n * @param {Function} props.useProduct\n * @param {Function} props.useProductInventoryHostsQuery\n * @returns {Node}\n */\nconst ToolbarFieldDisplayName = ({\n  t,\n  useDispatch: useAliasDispatch,\n  useProduct: useAliasProduct,\n  useProductInventoryHostsQuery: useAliasProductInventoryHostsQuery\n}) => {\n  const { viewId } = useAliasProduct();\n  const { [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: currentValue } = useAliasProductInventoryHostsQuery();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On submit, dispatch type.\n   *\n   * @event onSubmit\n   * @param {string} submitValue\n   * @returns {void}\n   */\n  const onSubmit = submitValue =>\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: submitValue?.trim() || null\n      }\n    ]);\n\n  /**\n   * On clear, dispatch type.\n   *\n   * @event onClear\n   * @returns {void}\n   */\n  const onClear = () => {\n    if (currentValue === '' || !currentValue) {\n      return;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: null\n      }\n    ]);\n  };\n\n  /**\n   * Set up submit debounce event to allow for bypass.\n   */\n  const debounced = _debounce(onSubmit, 700);\n\n  /**\n   * On enter submit value, on type submit value, and on esc ignore (clear value at component level).\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case 13:\n        onSubmit(event.value);\n        break;\n      case 27:\n        break;\n      default:\n        debounced(event.value);\n        break;\n    }\n  };\n\n  return (\n    <InputGroup>\n      <TextInput\n        aria-label={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        className=\"curiosity-input__display-name\"\n        iconVariant=\"search\"\n        maxLength={255}\n        onClear={onClear}\n        onKeyUp={onKeyUp}\n        value={currentValue}\n        placeholder={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        data-test=\"toolbarFieldDisplayName\"\n      />\n    </InputGroup>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.propTypes = {\n  t: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductInventoryHostsQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.defaultProps = {\n  t: translate,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useProduct,\n  useProductInventoryHostsQuery\n};\n\nexport { ToolbarFieldDisplayName as default, ToolbarFieldDisplayName };\n"],"names":["uid","ouiaPrefix","ouiaIdByRoute","getOUIAProps","componentType","id","ouiaSafe","useOUIAProps","variant","useOUIAId","undefined","useMemo","getDefaultOUIAId","key","window","location","href","exception","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","TableToolbar","_a","_b","isFooter","results","className","selected","children","ouiaId","_c","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","tableToolbarClasses","ouiaComponentType","ouiaFinalId","Fragment","Toolbar","concat","generateCount","propTypes","defaultProps","createMockEvent","event","persistEvent","checked","currentTarget","keyCode","persist","helpers","target","name","value","doesNotHaveMinimumCharacters","characters","formHelpers","TextInput","state","updatedValue","onKeyUp","onClear","type","clonedEvent","setState","onMouseUp","setTimeout","onChange","isDisabled","isReadOnly","updatedName","updatedId","React","InventoryList","onColumnSort","data","updatedDirection","direction","productId","updatedSortColumn","values","SORT_TYPES","find","_camelCase","SortByDirection","SORT_DIRECTION_TYPES","store","reduxTypes","RHSM_API_QUERY_TYPES","viewId","console","warn","onPage","offset","perPage","onUpdateInventoryData","getHostsInventory","query","prevProps","_isEqual","filterGuestsData","filterInventoryData","listData","session","settings","updatedColumnHeaders","updatedRows","map","cellData","inventoryListHelpers","filters","onSort","columnHeaders","cells","guestsId","subscriptionManagerId","hasGuests","numberOfGuests","expandedContent","borders","TableVariant","rows","error","fulfilled","itemCount","pending","perPageDefault","Card","CardBody","Bullseye","context","updatedPerPage","updatedOffset","isLastPage","paginationHelpers","minHeightContentRefreshKey","MinHeight","updateOnContent","CardHeader","CardHeaderMain","ToolbarFieldDisplayName","CardActions","isCompact","onPerPage","Loader","tableProps","colCount","keys","colWidth","cellWidth","rowCount","renderTable","CardFooter","dropDirection","translate","makeMapStateToProps","reduxSelectors","ConnectedInventoryList","connect","dispatch","reduxActions","Pagination","onSetPage","page","limit","onPerPageSelect","calculateOffsetFromPage","calculatePageFromOffset","Math","ceil","useAliasDispatch","useDispatch","useAliasProduct","useProduct","useAliasProductInventoryHostsQuery","useProductInventoryHostsQuery","currentValue","onSubmit","submitValue","trim","debounced","_debounce","InputGroup","iconVariant","maxLength","placeholder","storeHooks"],"sourceRoot":""}
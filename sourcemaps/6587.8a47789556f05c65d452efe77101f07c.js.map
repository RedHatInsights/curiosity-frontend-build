{"version":3,"file":"js/6587.617750c01e930b8c4f9c.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/TableToolbar/TableToolbar.js","webpack:///./src/components/inventoryCard/inventoryCard.js","webpack:///./src/components/inventoryCard/inventoryCardContext.js","webpack:///./src/components/pagination/pagination.js","webpack:///./src/components/pagination/paginationHelpers.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment } from 'react';\nimport { Toolbar, useOUIAId } from '@patternfly/react-core';\nimport classNames from 'classnames';\nimport '../TableToolbar/TableToolbar.css';\nfunction generateCount(results) {\n    if (results > 1 || results < 1) {\n        return \"\".concat(results, \" Results\");\n    }\n    else {\n        return \"\".concat(results, \" Result\");\n    }\n}\nvar TableToolbar = function (_a) {\n    var _b;\n    var _c = _a.isFooter, isFooter = _c === void 0 ? false : _c, results = _a.results, className = _a.className, selected = _a.selected, children = _a.children, ouiaId = _a.ouiaId, _d = _a.ouiaSafe, ouiaSafe = _d === void 0 ? true : _d, props = __rest(_a, [\"isFooter\", \"results\", \"className\", \"selected\", \"children\", \"ouiaId\", \"ouiaSafe\"]);\n    var tableToolbarClasses = classNames('ins-c-table__toolbar', (_b = {}, _b[\"ins-m-footer\"] = isFooter, _b), className);\n    var ouiaComponentType = 'RHI/TableToolbar';\n    var ouiaFinalId = useOUIAId(ouiaComponentType, ouiaId, ouiaSafe);\n    return (_jsxs(Fragment, { children: [_jsx(Toolbar, __assign({ className: tableToolbarClasses, \"data-ouia-component-type\": ouiaComponentType, \"data-ouia-component-id\": ouiaFinalId, \"data-ouia-safe\": ouiaSafe }, props, { children: children })), ((results && results >= 0) || (selected && selected >= 0)) && (_jsxs(\"div\", __assign({ className: \"ins-c-table__toolbar-results\" }, { children: [results && results >= 0 && _jsxs(\"span\", __assign({ className: \"ins-c-table__toolbar-results-count\" }, { children: [\" \", generateCount(results), \" \"] })), selected && selected >= 0 && _jsxs(\"span\", __assign({ className: \"ins-c-table__toolbar-results-selected\" }, { children: [\" \", selected, \" Selected \"] }))] })))] }));\n};\nexport default TableToolbar;\n//# sourceMappingURL=TableToolbar.js.map","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDeepCompareEffect } from 'react-use';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader, CardHeaderMain } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { useSession } from '../authentication/authenticationContext';\nimport {\n  useProduct,\n  useProductInventoryHostsConfig,\n  useProductInventoryHostsQuery\n} from '../productView/productViewContext';\nimport { helpers } from '../../common';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { InventoryGuests } from '../inventoryGuests/inventoryGuests';\nimport { inventoryCardHelpers } from './inventoryCardHelpers';\nimport Pagination from '../pagination/pagination';\nimport { ToolbarFieldDisplayName } from '../toolbar/toolbarFieldDisplayName';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { translate } from '../i18n/i18n';\nimport { useGetInstancesInventory, useOnPageInstances, useOnColumnSortInstances } from './inventoryCardContext';\n\n/**\n * Instances, and Subscriptions base inventory card.\n *\n * @memberof Components\n * @module InventoryCard\n * @property {module} InventoryCardContext\n * @property {module} InventoryCardHelpers\n */\n\n/**\n * ToDo: Update table component and review the deep comparison use on data\n * The newer table wrapper should remove the need to use the deep comparison,\n * temporarily using to allow the move from the deprecated inventory.\n */\n/**\n * Set up inventory cards. Expand filters with base settings.\n *\n * @param {object} props\n * @param {React.ReactNode} props.cardActions\n * @param {boolean} props.isDisabled\n * @param {number} props.perPageDefault\n * @param {Function} props.t\n * @param {Function} props.useGetInventory\n * @param {Function} props.useOnPage\n * @param {Function} props.useOnColumnSort\n * @param {Function} props.useProduct\n * @param {Function} props.useProductInventoryConfig\n * @param {Function} props.useProductInventoryQuery\n * @param {Function} props.useSession\n * @fires onColumnSort\n * @fires onPage\n * @returns {React.ReactNode}\n */\nconst InventoryCard = ({\n  cardActions,\n  isDisabled,\n  perPageDefault,\n  t,\n  useGetInventory: useAliasGetInventory,\n  useOnPage: useAliasOnPage,\n  useOnColumnSort: useAliasOnColumnSort,\n  useProduct: useAliasProduct,\n  useProductInventoryConfig: useAliasProductInventoryConfig,\n  useProductInventoryQuery: useAliasProductInventoryQuery,\n  useSession: useAliasSession\n}) => {\n  const [updatedColumnsRows, setUpdatedColumnsRows] = useState({ columnHeaders: [], rows: [] });\n  const sessionData = useAliasSession();\n  const query = useAliasProductInventoryQuery();\n  const onPage = useAliasOnPage();\n  const onColumnSort = useAliasOnColumnSort();\n  const { productId } = useAliasProduct();\n  const { filters: filterInventoryData, settings } = useAliasProductInventoryConfig();\n  const { error, fulfilled, pending, data = {} } = useAliasGetInventory({ isDisabled });\n  const { data: listData = [], meta = {} } = data;\n\n  useDeepCompareEffect(() => {\n    let updatedColumnHeaders = [];\n    let updatedRows = [];\n\n    if (fulfilled && listData.length) {\n      updatedRows = listData.map(({ ...cellData }) => {\n        const { columnHeaders, cells } = inventoryCardHelpers.parseRowCellsListData({\n          filters: inventoryCardHelpers.parseInventoryFilters({\n            filters: filterInventoryData,\n            onSort: onColumnSort,\n            query\n          }),\n          cellData,\n          meta,\n          session: sessionData,\n          productId\n        });\n\n        updatedColumnHeaders = columnHeaders;\n        let expandedContent;\n\n        if (typeof settings?.guestContent === 'function') {\n          const guestId = settings?.guestContent({ ...cellData }, { ...sessionData });\n\n          if (guestId) {\n            expandedContent = (\n              <InventoryGuests key={`guests-${guestId}`} id={guestId} numberOfGuests={cellData.numberOfGuests} />\n            );\n          }\n        }\n\n        return {\n          cells,\n          expandedContent\n        };\n      });\n    }\n\n    setUpdatedColumnsRows(() => ({\n      columnHeaders: updatedColumnHeaders,\n      rows: updatedRows\n    }));\n  }, [filterInventoryData, fulfilled, listData]);\n\n  if (isDisabled) {\n    return (\n      <Card className=\"curiosity-inventory-card__disabled\">\n        <CardBody>\n          <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n        </CardBody>\n      </Card>\n    );\n  }\n\n  const itemCount = meta?.count;\n  const updatedPerPage = query[RHSM_API_QUERY_SET_TYPES.LIMIT] || perPageDefault;\n  const updatedOffset = query[RHSM_API_QUERY_SET_TYPES.OFFSET];\n  const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n  // Set an updated key to force refresh minHeight\n  const minHeightContentRefreshKey =\n    (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    `bodyMinHeight-${updatedPerPage}`;\n\n  return (\n    <Card className=\"curiosity-inventory-card\">\n      <MinHeight key=\"headerMinHeight\">\n        <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n          {cardActions}\n          <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n            <Pagination\n              isCompact\n              isDisabled={pending || error}\n              itemCount={itemCount}\n              offset={updatedOffset}\n              onPage={onPage}\n              onPerPage={onPage}\n              perPage={updatedPerPage}\n            />\n          </CardActions>\n        </CardHeader>\n      </MinHeight>\n      <MinHeight key={minHeightContentRefreshKey}>\n        <CardBody>\n          <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n            {pending && (\n              <Loader\n                variant=\"table\"\n                tableProps={{\n                  className: 'curiosity-inventory-list',\n                  colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                  colWidth:\n                    (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                  rowCount: listData?.length || updatedPerPage,\n                  variant: TableVariant.compact\n                }}\n              />\n            )}\n            {!pending && (\n              <Table\n                borders\n                variant={TableVariant.compact}\n                className=\"curiosity-inventory-list\"\n                columnHeaders={updatedColumnsRows.columnHeaders}\n                rows={updatedColumnsRows.rows}\n              />\n            )}\n          </div>\n        </CardBody>\n      </MinHeight>\n      <MinHeight key=\"footerMinHeight\">\n        <CardFooter\n          className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n          aria-hidden={error || !itemCount || false}\n        >\n          <TableToolbar isFooter>\n            <Pagination\n              dropDirection=\"up\"\n              isDisabled={pending || error}\n              itemCount={itemCount}\n              offset={updatedOffset}\n              onPage={onPage}\n              onPerPage={onPage}\n              perPage={updatedPerPage}\n            />\n          </TableToolbar>\n        </CardFooter>\n      </MinHeight>\n    </Card>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{cardActions: React.ReactNode, useSession: Function, useOnPage: Function, useProduct: Function, t: Function,\n *     perPageDefault: number, isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function,\n *     useOnColumnSort: Function, useProductInventoryQuery: Function}}\n */\nInventoryCard.propTypes = {\n  cardActions: PropTypes.node,\n  isDisabled: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  t: PropTypes.func,\n  useGetInventory: PropTypes.func,\n  useOnPage: PropTypes.func,\n  useOnColumnSort: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductInventoryConfig: PropTypes.func,\n  useProductInventoryQuery: PropTypes.func,\n  useSession: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{cardActions: React.ReactNode, useSession: Function, useOnPage: Function, useProduct: Function, t: translate,\n *     perPageDefault: number, isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function,\n *     useOnColumnSort: Function, useProductInventoryQuery: Function}}\n */\nInventoryCard.defaultProps = {\n  cardActions: (\n    <CardHeaderMain>\n      <ToolbarFieldDisplayName />\n    </CardHeaderMain>\n  ),\n  isDisabled: helpers.UI_DISABLED_TABLE_INSTANCES,\n  perPageDefault: 10,\n  t: translate,\n  useGetInventory: useGetInstancesInventory,\n  useOnPage: useOnPageInstances,\n  useOnColumnSort: useOnColumnSortInstances,\n  useProduct,\n  useProductInventoryConfig: useProductInventoryHostsConfig,\n  useProductInventoryQuery: useProductInventoryHostsQuery,\n  useSession\n};\n\nexport { InventoryCard as default, InventoryCard };\n","import { useShallowCompareEffect } from 'react-use';\nimport _camelCase from 'lodash/camelCase';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\n\n/**\n * @memberof InventoryCard\n * @module InventoryCardContext\n */\n\n/**\n * Combined Redux RHSM Actions, getInstancesInventory, and inventory selector response.\n *\n * @param {object} options\n * @param {boolean} options.isDisabled\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: (*|{}|Array|{}), pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useGetInstancesInventory = ({\n  isDisabled = false,\n  getInventory = reduxActions.rhsm.getInstancesInventory,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct,\n  useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryHostsQuery,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const query = useAliasProductInventoryQuery();\n  const dispatch = useAliasDispatch();\n  const { cancelled, pending, data, ...response } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.instancesInventory?.[productId]\n  );\n\n  useShallowCompareEffect(() => {\n    if (!isDisabled) {\n      getInventory(productId, query)(dispatch);\n    }\n  }, [dispatch, isDisabled, productId, query]);\n\n  return {\n    ...response,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * An onPage callback for instances inventory.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnPageInstances = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for instances inventory.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   * @returns {void}\n   */\n  return ({ offset, perPage }) => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n};\n\n/**\n * An onColumnSort callback for instances inventory.\n *\n * @param {object} options\n * @param {object} options.sortColumns\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnColumnSortInstances = ({\n  sortColumns = SORT_TYPES,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for instances inventory.\n   *\n   * @event onColumnSort\n   * @param {*} _data\n   * @param {object} params\n   * @param {string} params.direction\n   * @param {string} params.id\n   * @returns {void}\n   */\n  return (_data, { direction, id }) => {\n    const updatedSortColumn = Object.values(sortColumns).find(value => value === id || _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n};\n\nconst context = {\n  useGetInstancesInventory,\n  useOnPageInstances,\n  useOnColumnSortInstances\n};\n\nexport { context as default, context, useGetInstancesInventory, useOnPageInstances, useOnColumnSortInstances };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * Inventory paging.\n *\n * @memberof Components\n * @module Pagination\n * @property {module} PaginationHelpers\n */\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {React.ReactNode}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n","/**\n * @memberof Pagination\n * @module PaginationHelpers\n */\n\n/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","generateCount","results","concat","_a","_b","_c","isFooter","className","selected","children","ouiaId","_d","ouiaSafe","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","tableToolbarClasses","ouiaComponentType","ouiaFinalId","useOUIAId","Fragment","Toolbar","InventoryCard","_ref","cardActions","isDisabled","perPageDefault","useGetInventory","useAliasGetInventory","useOnPage","useAliasOnPage","useOnColumnSort","useAliasOnColumnSort","useProduct","useAliasProduct","useProductInventoryConfig","useAliasProductInventoryConfig","useProductInventoryQuery","useAliasProductInventoryQuery","useSession","useAliasSession","updatedColumnsRows","setUpdatedColumnsRows","useState","columnHeaders","rows","sessionData","query","onPage","onColumnSort","productId","filters","filterInventoryData","settings","error","fulfilled","pending","data","listData","meta","useDeepCompareEffect","updatedColumnHeaders","updatedRows","map","_ref2","cellData","cells","inventoryCardHelpers","onSort","session","expandedContent","guestContent","guestId","React","InventoryGuests","key","id","numberOfGuests","Card","CardBody","Bullseye","context","itemCount","count","updatedPerPage","RHSM_API_QUERY_SET_TYPES","updatedOffset","isLastPage","paginationHelpers","minHeightContentRefreshKey","MinHeight","CardHeader","CardActions","Pagination","isCompact","offset","onPerPage","perPage","Loader","variant","tableProps","colCount","keys","colWidth","_ref3","cellWidth","rowCount","TableVariant","Table","borders","CardFooter","TableToolbar","dropDirection","propTypes","PropTypes","defaultProps","CardHeaderMain","ToolbarFieldDisplayName","helpers","translate","useGetInstancesInventory","useOnPageInstances","useOnColumnSortInstances","useProductInventoryHostsConfig","useProductInventoryHostsQuery","getInventory","reduxActions","useDispatch","useAliasDispatch","storeHooks","useSelectorsResponse","useAliasSelectorsResponse","undefined","dispatch","cancelled","response","_inventory$instancesI","inventory","instancesInventory","useShallowCompareEffect","type","reduxTypes","viewId","sortColumns","SORT_TYPES","_data","direction","updatedSortColumn","values","find","value","_camelCase","updatedDirection","SortByDirection","SORT_DIRECTION_TYPES","console","warn","PfPagination","onSetPage","event","page","limit","onPerPageSelect","calculateOffsetFromPage","calculatePageFromOffset","Math","ceil"],"sourceRoot":""}
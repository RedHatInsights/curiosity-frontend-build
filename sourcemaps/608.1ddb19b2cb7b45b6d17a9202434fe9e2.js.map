{"version":3,"file":"js/608.4fff09a668fc6c9313b4.js","mappings":"qPAgBMA,EAAY,SAAC,GAAsE,IAApEC,EAAoE,EAApEA,WACXC,GAAYC,EADmE,EAAxDC,yBACvBF,QAD+E,EAEzCG,EAAAA,iBAAAA,sBAAuCH,GAA7EI,EAF+E,EAE/EA,eAAgBC,EAF+D,EAE/DA,kBAExB,OAAIN,EACK,KAIP,kBAAC,aAAD,MACIK,MAAAA,OAAA,EAAAA,EAAgBE,SAAU,kBAAC,EAAAC,iBAAD,CAAkBC,cAAeJ,KAAuB,KACnFC,EAAkBI,KAAI,SAAAC,GAAY,OACjC,kBAAC,EAAAC,gBAAD,CAAiBC,IAAG,oBAAeF,EAAaG,IAAMH,aAAcA,SAqB5EZ,EAAUgB,aAAe,CACvBf,WAAYgB,EAAAA,GAAAA,kBACZb,sBAAAA,EAAAA","sources":["webpack:///./src/components/graphCard/graphCard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useProductGraphConfig } from '../productView/productViewContext';\nimport { helpers } from '../../common';\nimport { GraphCardMetrics } from './graphCardMetrics';\nimport { GraphCardMetric } from './graphCardMetric';\nimport { graphCardHelpers } from './graphCardHelpers';\n\n/**\n * Set up graph cards. Expand filters with base graph settings.\n *\n * @param {object} props\n * @param {boolean} props.isDisabled\n * @param {Function} props.useProductGraphConfig\n * @returns {Node}\n */\nconst GraphCard = ({ isDisabled, useProductGraphConfig: useAliasProductGraphConfig }) => {\n  const { filters } = useAliasProductGraphConfig();\n  const { groupedFilters, standaloneFilters } = graphCardHelpers.generateChartSettings(filters);\n\n  if (isDisabled) {\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      {(groupedFilters?.length && <GraphCardMetrics metricFilters={groupedFilters} />) || null}\n      {standaloneFilters.map(metricFilter => (\n        <GraphCardMetric key={`graphCard_${metricFilter.id}`} metricFilter={metricFilter} />\n      ))}\n    </React.Fragment>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProductGraphConfig: Function, isDisabled: boolean}}\n */\nGraphCard.propTypes = {\n  isDisabled: PropTypes.bool,\n  useProductGraphConfig: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProductGraphConfig: Function, isDisabled: boolean}}\n */\nGraphCard.defaultProps = {\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  useProductGraphConfig\n};\n\nexport { GraphCard as default, GraphCard };\n"],"names":["GraphCard","isDisabled","filters","useAliasProductGraphConfig","useProductGraphConfig","graphCardHelpers","groupedFilters","standaloneFilters","length","GraphCardMetrics","metricFilters","map","metricFilter","GraphCardMetric","key","id","defaultProps","helpers"],"sourceRoot":""}
{"version":3,"file":"js/9051.1676908660747.41d74d912012a4ad5aaa.js","mappings":"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","sources":["webpack:///./src/components/inventoryTabs/inventoryTab.js","webpack:///./src/components/inventoryTabs/inventoryTabs.js","webpack:///./src/components/tabs/tabs.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * A tab pass-through component for passing props to InventoryTabs.\n *\n * @param {object} props\n * @param {boolean} props.active\n * @param {React.ReactNode} props.children\n * @param {string} props.title\n * @returns {React.ReactNode}\n */\n// eslint-disable-next-line no-unused-vars\nconst InventoryTab = ({ active, children, title }) => children;\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nInventoryTab.propTypes = {\n  children: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  title: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nInventoryTab.defaultProps = {\n  active: false\n};\n\nexport { InventoryTab as default, InventoryTab };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { useProduct } from '../productView/productViewContext';\nimport { Tabs } from '../tabs/tabs';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\nimport { InventoryTab } from './inventoryTab';\n\n/**\n * Update tab state.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnTab = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  return ({ index } = {}) => {\n    dispatch({\n      type: reduxTypes.inventory.SET_INVENTORY_TAB,\n      tabs: {\n        [productId]: index\n      }\n    });\n  };\n};\n\n/**\n * An inventory tabs component.\n * Render inventory tabs using Inventory tab passed props only.\n *\n * @fires onTab\n * @param {object} props\n * @param {number} props.activeTab\n * @param {React.ReactNode} props.children\n * @param {number} props.defaultActiveTab\n * @param {boolean} props.isDisabled\n * @param {Function} props.t\n * @param {Function} props.useOnTab\n * @param {Function} props.useProduct\n * @param {Function} props.useSelector\n * @returns {React.ReactNode|null}\n */\nconst InventoryTabs = ({\n  activeTab,\n  children,\n  defaultActiveTab,\n  isDisabled,\n  t,\n  useOnTab: useAliasOnTab,\n  useProduct: useAliasProduct,\n  useSelector: useAliasSelector\n}) => {\n  const { productId } = useAliasProduct();\n  const updatedActiveTab = useAliasSelector(({ inventory }) => inventory.tabs?.[productId], activeTab);\n  const onTab = useAliasOnTab();\n\n  if (isDisabled) {\n    return null;\n  }\n\n  const updatedChildren = React.Children.toArray(children).map((child, index) => {\n    const { props: childProps = {} } = child;\n\n    return {\n      active: childProps.active || false,\n      content: childProps.children || child,\n      title: childProps.title || t('curiosity-inventory.tabSubHeading', { count: index })\n    };\n  });\n\n  return (\n    <React.Fragment>\n      <Title headingLevel=\"h2\" className=\"sr-only\">\n        {t('curiosity-inventory.tabHeading', { count: updatedChildren.length })}\n      </Title>\n      <Tabs activeTab={updatedActiveTab} defaultActiveTab={defaultActiveTab} onTab={onTab} tabs={updatedChildren} />\n    </React.Fragment>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useOnTab: Function, useProduct: Function, t: Function, children: React.ReactNode,\n *     useSelector: Function, defaultActiveTab: number, isDisabled: boolean, activeTab: number}}\n */\nInventoryTabs.propTypes = {\n  activeTab: PropTypes.number,\n  children: PropTypes.node.isRequired,\n  defaultActiveTab: PropTypes.number,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  useOnTab: PropTypes.func,\n  useProduct: PropTypes.func,\n  useSelector: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useOnTab: Function, useProduct: Function, t: translate, useSelector: Function,\n *     defaultActiveTab: number, isDisabled: boolean, activeTab: number}}\n */\nInventoryTabs.defaultProps = {\n  activeTab: 0,\n  defaultActiveTab: 0,\n  isDisabled: helpers.UI_DISABLED_TABLE,\n  t: translate,\n  useOnTab,\n  useProduct,\n  useSelector: storeHooks.reactRedux.useSelector\n};\n\nexport { InventoryTabs as default, InventoryTabs, InventoryTab, useOnTab };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs as PfTabs, Tab, TabTitleText, Grid, GridItem } from '@patternfly/react-core';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: PF tabs misinterprets \"isElementInView\" when tab title nodes are loaded dynamically\n * It appears the use of isElementInView within PF tabs is trying to be predicative in using\n * \"getBoundingClientRect\" but produces questionable results in scenarios where content is\n * async created. isElementInView assumes some form of the content will always be there\n * instead of scenarios where someone tries to dynamically apply components. It may be good to\n * review using a window.setTimeout(() => handleScrollButtons()) in componentDidMount.\n *\n * Our temporary solution is to simply hide the buttons with a manual set flag affecting the\n * CSS class. This will most likely cause long-term issues.\n */\n/**\n * ToDo: Insights frontend components uses a custom tabs layout, investigate related CSS classes\n * Originally we applied the CSS classes, but they appeared to provide nothing. Since Insights\n * rolled its own tabs we're hesitant to apply said classes without understanding what they provide.\n */\n/**\n * A set of tabs.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass Tabs extends React.Component {\n  state = {\n    updatedActiveTab: null,\n    updatedTabs: null\n  };\n\n  componentDidMount() {\n    const { updatedTabs } = this.state;\n\n    if (updatedTabs === null) {\n      this.setTabData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tabs } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (!_isEqualWith(prevProps.tabs, tabs, customizer)) {\n      this.setTabData();\n    }\n  }\n\n  /**\n   * On tab selected\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {number} params.index\n   */\n  onTab = ({ index }) => {\n    const { onTab } = this.props;\n\n    this.setState(\n      {\n        updatedActiveTab: index\n      },\n      () => onTab({ index })\n    );\n  };\n\n  /**\n   * Convert tab objects into the required PF Tab format.\n   */\n  setTabData() {\n    const { activeTab, defaultActiveTab, tabs } = this.props;\n    let updatedActiveTab = defaultActiveTab;\n\n    const updatedTabs = tabs.map(({ active, content, title }, index) => {\n      updatedActiveTab = active ? index : updatedActiveTab;\n\n      return (\n        <Tab key={title} eventKey={index} title={<TabTitleText>{title}</TabTitleText>}>\n          {content}\n        </Tab>\n      );\n    });\n\n    if (typeof activeTab === 'number') {\n      updatedActiveTab = activeTab;\n    }\n\n    this.setState({\n      updatedActiveTab,\n      updatedTabs\n    });\n  }\n\n  /**\n   * Apply props to tabs.\n   *\n   * @returns {Node}\n   */\n  renderTabs() {\n    const { updatedActiveTab, updatedTabs } = this.state;\n    const { className, hasOverflowScroll } = this.props;\n\n    return (\n      <PfTabs\n        className={`curiosity-tabs${(!hasOverflowScroll && '__no-scroll') || ''} ${className || ''}`}\n        activeKey={updatedActiveTab}\n        onSelect={(event, index) => this.onTab({ event, index })}\n        mountOnEnter\n        unmountOnExit\n        inset={{\n          default: 'insetNone',\n          md: 'insetLg'\n        }}\n      >\n        {updatedTabs}\n      </PfTabs>\n    );\n  }\n\n  /**\n   * Render tabs.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"curiosity-tabs-container\">\n        <GridItem span={12}>{this.renderTabs()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.propTypes = {\n  activeTab: PropTypes.number,\n  className: PropTypes.string,\n  defaultActiveTab: PropTypes.number,\n  hasOverflowScroll: PropTypes.bool,\n  onTab: PropTypes.func,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      active: PropTypes.bool,\n      content: PropTypes.node.isRequired,\n      title: PropTypes.node.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.defaultProps = {\n  activeTab: null,\n  className: '',\n  defaultActiveTab: 0,\n  hasOverflowScroll: false,\n  onTab: helpers.noop,\n  tabs: []\n};\n\nexport { Tabs as default, Tabs };\n"],"names":["InventoryTab","active","children","title","propTypes","PropTypes","defaultProps","useOnTab","useDispatch","useAliasDispatch","storeHooks","useProduct","useAliasProduct","productId","dispatch","index","type","reduxTypes","tabs","InventoryTabs","activeTab","defaultActiveTab","isDisabled","t","useAliasOnTab","useAliasSelector","useSelector","updatedActiveTab","inventory","onTab","updatedChildren","React","map","child","props","childProps","content","count","Title","headingLevel","className","length","Tabs","helpers","translate","state","updatedTabs","setState","this","setTabData","prevProps","_isEqualWith","valueA","valueB","toString","Tab","key","eventKey","TabTitleText","hasOverflowScroll","activeKey","onSelect","event","mountOnEnter","unmountOnExit","inset","default","md","Grid","GridItem","span","renderTabs"],"sourceRoot":""}